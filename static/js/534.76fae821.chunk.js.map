{"version":3,"file":"static/js/534.76fae821.chunk.js","mappings":"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","sources":["功能模块/系统工具/页面右下角工具/网页工具/JCL技能序列导入/职业技能映射枚举/index.tsx","功能模块/系统工具/页面右下角工具/网页工具/JCL技能序列导入/worker.ts"],"sourcesContent":["import 周天功 from './周天功.json'\nimport 凌海诀 from './凌海诀.json'\nimport 孤锋诀悟 from './孤锋诀悟.json'\n\nexport const 心法枚举 = {\n  周天功: 周天功,\n  凌海诀: 凌海诀,\n  孤锋诀: 孤锋诀悟,\n}\n","import { 心法枚举 } from './职业技能映射枚举/index'\nimport 心法枚举JSON from '../../../../../数据/静态数据/心法枚举.json'\n\nself.onmessage = (event) => {\n  const { data } = event // 获取传入的数据\n  // 假设我们进行一些复杂的计算\n  const result = JCL技能序列导入(data)\n  self.postMessage(result) // 将结果发送回主线程\n}\n\nexport const JCL技能序列导入 = (原序列: string) => {\n  // 拆分数组\n  const 数组 = 原序列.split('\\n')\n  let 心法Id = ''\n  let 心法映射数据: any\n\n  try {\n    // 第一次遍历，找到心法对应id\n    for (let i = 0; i < 数组.length; i++) {\n      // 根据制表符拆分\n      const logList = 数组[i]?.split('\\t')\n      // 获取事件类型\n      const type: string = logList[4]\n      // 处理心法\n      if (type === '4') {\n        // 获取具体LogData\n        const logData = logList[5]\n        if (logData) {\n          // 根据,拆分 获取技能id\n          const list = logData?.split(',')\n          if (list?.[3]) {\n            心法Id = list?.[3]\n            // 心法Id = '10698'\n            console.info('心法Id', 心法Id)\n            心法映射数据 = 心法枚举?.[心法枚举JSON?.[心法Id]?.name]\n            break\n          }\n        }\n      }\n    }\n\n    console.info('心法Id', 心法Id)\n\n    // 结果数据\n    let res: string[] = []\n\n    console.info('心法映射数据', 心法映射数据)\n    console.info('心法枚举JSON?.[心法Id]?.name', 心法枚举JSON?.[心法Id]?.name)\n\n    if (心法映射数据) {\n      for (let i = 0; i < 数组.length; i++) {\n        // 根据制表符拆分\n        const logList = 数组[i]?.split('\\t')\n        // 获取事件类型\n        const type: string = logList[4]\n\n        const logData = logList[5]\n        if (logData) {\n          const list = logData?.split(',')\n          // 处理伤害类型\n          if (type === '21') {\n            // 获取具体LogData\n            // 根据,拆分 获取技能id\n            if (list?.[4]) {\n              const id = list?.[4]\n              if (心法映射数据?.skills?.[id]) {\n                if (typeof 心法映射数据?.skills?.[id] === 'string') {\n                  res.push(心法映射数据?.skills?.[id])\n                } else {\n                  res = res.concat(心法映射数据?.skills?.[id])\n                }\n              }\n            }\n            // 判断获得Buff\n          } else if (type === '13') {\n            // 根据,拆分 获取技能id\n            if (list?.[4]) {\n              const id = list?.[4]\n              if (心法映射数据?.buff映射技能?.[id]) {\n                // 判断是否为上buff行为\n                const isAdd = !!list?.[5]\n                if (isAdd) {\n                  res.push(心法映射数据?.buff映射技能?.[id])\n                }\n              }\n            }\n            // 判断释放技能，因为只要按宏就可以释放，这里用释放判断，且如果当前res最后一个已经是，则不push\n          } else if (type === '20') {\n            // 根据,拆分 获取技能id\n            if (list?.[1]) {\n              const id = list?.[1]\n              if (心法映射数据?.释放且交验连续技能?.[id]) {\n                const 不可重复技能组 = [\n                  心法映射数据?.释放且交验连续技能?.[id]?.name,\n                  ...(心法映射数据?.释放且交验连续技能?.[id]?.过滤技能 || []),\n                ]\n                if (!不可重复技能组?.includes(res?.[res?.length - 1])) {\n                  res.push(心法映射数据?.释放且交验连续技能?.[id]?.name)\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return res\n  } catch (e) {\n    console.error(e)\n    return []\n  }\n}\n"],"names":["心法枚举","周天功","凌海诀","孤锋诀","self","onmessage","event","data","result","JCL技能序列导入","postMessage","原序列","数组","split","心法映射数据","心法Id","_心法枚举JSON$心法Id2","i","length","_数组$i","logList","logData","list","_心法枚举JSON$心法Id","console","info","心法枚举JSON","name","res","_数组$i2","type","_心法映射数据","_心法映射数据$skills","id","_心法映射数据2","_心法映射数据2$skills","_心法映射数据3","_心法映射数据3$skills","_心法映射数据4","_心法映射数据4$skills","skills","push","concat","_心法映射数据5","_心法映射数据5$buff映射技能","buff映射技能","_心法映射数据6","_心法映射数据6$buff映射技能","_心法映射数据7","_心法映射数据7$释放且交验连续技能","释放且交验连续技能","_心法映射数据8","_心法映射数据8$释放且交验连续技能","_心法映射数据8$释放且交验连续技能$id","_心法映射数据9","_心法映射数据9$释放且交验连续技能","_心法映射数据9$释放且交验连续技能$id","_res","_res2","不可重复技能组","过滤技能","_心法映射数据10","_心法映射数据10$释放且交验连续技能","_心法映射数据10$释放且交验连续技能$i","includes","e","error"],"sourceRoot":""}