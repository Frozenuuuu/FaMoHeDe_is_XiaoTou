{"version":3,"file":"static/js/546.97d8f159.chunk.js","mappings":"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,EAChD,IAEKA,CACT,GCt2BF,GAzBc7L,IACZ,MAAMgM,EAAO,IAAIC,GAAKjM,GACtBgM,EAAKxB,eAELwB,EAAKT,2BAEL,MAAMW,EAAYF,EAAKP,2EACjBU,EAAYH,EAAKJ,sDAEvB,MAAO,CACLQ,2BAAMJ,EAAKvL,yBACXpO,2CAAY2Z,EAAK3Z,yCACjBc,2CAAY6Y,EAAK7Y,yCACjB6E,uCAAQgU,EAAKhU,qCACbzE,2BAAMyY,EAAKzY,yBACX6M,uCAAQ4L,EAAK5L,qCACbC,uCAAQ2L,EAAK3L,qCACbK,uCAAQsL,EAAKtL,qCACbwL,2DACAC,4CACAE,wBAAQL,EAAK7Q,UACbnE,uCAAQgV,EAAKhV,qCACd,E,2DC3BH,MCCA,IDDoC,CAClChL,eAAI,4DACJ2E,eAAI,CACF,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,4BAEFF,2BAAM,CACJ,eACA,eACA,2BACA,2BACA,qBACA,qBACA,eACA,eACA,eACA,eACA,2BACA,eACA,eACA,eACA,eACA,eACA,eACA,2BACA,eACA,eACA,eACA,eACA,eACA,2BACA,eACA,qBACA,qBACA,eACA,eACA,eACA,eACA,eACA,2BACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,2BACA,eACA,eACA,eACA,2BACA,eACA,eACA,qBACA,qBACA,eACA,eACA,eACA,eACA,2BACA,eACA,eACA,eACA,eACA,eACA,2BACA,2BACA,eACA,eACA,eACA,eACA,eACA,eACA,qBACA,qBACA,eACA,eACA,eACA,eACA,eACA,2BACA,eACA,eACA,eACA,eACA,eACA,2BACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,2BACA,eACA,eACA,qBACA,qBACA,eACA,eACA,eACA,eACA,2BACA,eACA,eACA,eACA,eACA,eACA,2BACA,2BACA,eACA,eACA,eACA,eACA,eACA,eACA,qBACA,qBACA,eACA,eACA,eACA,eACA,eACA,2BACA,eACA,eACA,eACA,eACA,eACA,2BACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,2BACA,eACA,eACA,qBACA,qBACA,eACA,eACA,eACA,eACA,2BACA,eACA,eACA,eACA,eACA,eACA,2BACA,2BACA,eACA,kB,eE6EJ,SA5NA,SAA0BuP,GAA+B,IAADsM,EAAAC,EACtD,MAAM,MACJC,EAAK,qEACLC,EAAW,2BACXC,EAAI,uCACJC,EAAM,mDACNC,EAAQ,uCACRC,EAAM,iCACN/L,EAAK,6CACLgM,EAAO,2BACPzb,EAAI,uCACJ0b,EAAM,2BAEN9K,EAAI,uCACJ+K,EAAM,2BACNzM,EAAI,uCACJ0M,EAAM,2BACNC,EAAI,iCACJtN,GACEI,EAEEmN,GAAQC,EAAAA,EAAAA,IAAgBC,IAAK,IAAAC,EAAA,OAAU,OAALD,QAAK,IAALA,GAAW,QAANC,EAALD,EAAOngB,YAAI,IAAAogB,OAAN,EAALA,EAAaC,0CAAO,IAEtDC,EAAS,SAACxhB,GACd,MAAMyhB,EAAa,kBADCxb,UAAA5E,OAAA,QAAA6E,IAAAD,UAAA,GAAAA,UAAA,GAAG,gBACGyb,GAAWP,EAE/BQ,EAAY,OAAHF,QAAG,IAAHA,OAAG,EAAHA,EAAKjX,MAAMzH,GAASA,EAAK/C,eAAOA,IAEzC4hB,IAAgB,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQld,2BAAQ,IAC7B3B,KAAKC,IAAU,IAAD8e,EACb,OAAW,OAAJX,QAAI,IAAJA,GAAY,QAARW,EAAJX,EAAMlW,4CAAM,IAAA6W,OAAR,EAAJA,EAAcrX,MAAMnH,IAAO,OAADA,QAAC,IAADA,OAAC,EAADA,EAAGrE,4BAAS+D,GAAK,IAEnDwB,QAAQxB,GAASA,IAEpB4d,EAAOiB,GACG,OAAND,QAAM,IAANA,GAAAA,EAAQhd,cACVkc,EAAa,OAANc,QAAM,IAANA,OAAM,EAANA,EAAQhd,aAEnB,EAuBA,OACEmd,EAAAA,GAAAA,MAAA,OAAKC,UAAW,6CAA6CC,SAAA,EAC3DF,EAAAA,GAAAA,MAAA,OAAKC,UAAW,sCAAsCC,SAAA,EACpDC,EAAAA,GAAAA,KAAA,MAAIF,UAAW,8BAA8BC,SAAC,8BAC9CC,EAAAA,GAAAA,KAACC,GAAAA,EAAO,CACNC,SACEL,EAAAA,GAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,GAAAA,KAAA,KAAAD,SAAG,iGACHC,EAAAA,GAAAA,KAAA,KAAAD,SAAG,6GACHC,EAAAA,GAAAA,KAAA,KAAAD,SAAG,iGACHF,EAAAA,GAAAA,MAAA,KAAAE,SAAA,CAAG,0DAEDC,EAAAA,GAAAA,KAAA,KAAGG,KAAK,oCAAoCC,OAAO,SAASC,IAAI,aAAYN,SAAC,4CAKlFA,UAEDC,EAAAA,GAAAA,KAAA,QAAMF,UAAW,uBAAuBC,SAAC,mCAY7CF,EAAAA,GAAAA,MAAA,OAAKC,UAAW,8BAA8BC,SAAA,EAC5CC,EAAAA,GAAAA,KAACM,EAAAA,EAAO,CAACC,MAAM,2BAAOC,UAAU,OAAMT,UACpCC,EAAAA,GAAAA,KAACS,GAAAA,EAAM,CACLC,KAAK,QACLZ,UAAW,gCACXa,MAAW,OAAJ3M,QAAI,IAAJA,OAAI,EAAJA,EAAM/J,aACb2W,MAAO,CAAEC,MAAO,IAChBC,YAAU,EACVC,sBAAuB,IACvBC,aAAcA,CAACC,EAAOC,KAAY,IAADC,EAAAC,EAC/B,OAAa,OAANF,QAAM,IAANA,GAAa,QAAPC,EAAND,EAAQP,aAAK,IAAAQ,GAAY,QAAZC,EAAbD,EAAeE,kBAAU,IAAAD,OAAnB,EAANA,EAA2B9f,SAAS2f,MAAU,CAAK,EAE5DK,SAAWC,GAAMxC,EAAO,IAAK/K,EAAM/J,eAAIsX,IACvCC,QAASC,MAAMC,KAAK,CAAEtiB,OAAQ,MAAO,CAAC0C,EAAG3C,IAAMA,IAAG0B,KAAKO,IACrD,MAAMuf,EAAQ,IAAMvf,EACpB,MAAO,CACLuf,MAAOA,EACPgB,MAAO,GAAGhB,IACX,SAIPX,EAAAA,GAAAA,KAACM,EAAAA,EAAO,CAACC,MAAM,2BAAOC,UAAU,OAAMT,UACpCC,EAAAA,GAAAA,KAACS,GAAAA,EAAM,CACLC,KAAK,QACLZ,UAAW,gCACXa,MAAW,OAAJ3M,QAAI,IAAJA,OAAI,EAAJA,EAAM7J,aACbyW,MAAO,CAAEC,MAAO,IAChBC,YAAU,EACVC,sBAAuB,IACvBC,aAAcA,CAACC,EAAOC,KAAY,IAADU,EAAAC,EAC/B,OAAa,OAANX,QAAM,IAANA,GAAa,QAAPU,EAANV,EAAQP,aAAK,IAAAiB,GAAY,QAAZC,EAAbD,EAAeP,kBAAU,IAAAQ,OAAnB,EAANA,EAA2BvgB,SAAS2f,MAAU,CAAK,EAE5DK,SAAWC,GAAMxC,EAAO,IAAK/K,EAAM7J,eAAIoX,IACvCC,QAASC,MAAMC,KAAK,CAAEtiB,OAAQ,MAAO,CAAC0C,EAAG3C,IAAMA,IAAG0B,KAAKO,IACrD,MAAMuf,EAAQ,IAAMvf,EACpB,MAAO,CACLuf,MAAOA,EACPgB,MAAO,GAAGhB,IACX,SAIPX,EAAAA,GAAAA,KAACM,EAAAA,EAAO,CAACC,MAAM,2FAAqBC,UAAU,OAAMT,UAClDC,EAAAA,GAAAA,KAACS,GAAAA,EAAM,CACLC,KAAK,QACLZ,UAAW,gCACXa,MAAO9N,EACP+N,MAAO,CAAEC,MAAO,IAChBS,SAAUzC,EACV2C,QAASC,MAAMC,KAAK,CAAEtiB,OAAQ,KAAM,CAAC0C,EAAG3C,IAAMA,IAAG0B,KAAKO,IAC7C,CACLuf,MAAOvf,EACPugB,MAAO,GAAGvgB,mBAKlB4e,EAAAA,GAAAA,KAACS,GAAAA,EAAM,CACLC,KAAK,QACLZ,UAAW,gCACXa,MAAOvd,EACPke,SAAUxC,EACV0C,QAASC,MAAMC,KAAK,CAAEtiB,OAAQ,IAAK,CAAC0C,EAAG3C,IAAMA,IAAG0B,KAAKO,IAC5C,CACLuf,MAAOvf,EACPugB,MAAO,GAAGvgB,6BAIhB4e,EAAAA,GAAAA,KAACS,GAAAA,EAAM,CACLC,KAAK,QACLZ,UAAW,gCACXa,MAAOrO,EACPgP,SAAUtC,EACVwC,QAASM,EAAAA,MAEX9B,EAAAA,GAAAA,KAAC+B,GAAAA,EAAQ,CACPC,SACEnC,EAAAA,GAAAA,MAACoC,GAAAA,EAAI,CAAAlC,SAAA,CACyB,QADzB1B,EACFlc,EAAWsd,GAAU9N,UAAM,IAAA0M,OAAA,EAA3BA,EAA6Bxd,KAAKC,IAE/Bkf,EAAAA,GAAAA,KAACiC,GAAAA,EAAKC,KAAI,CAAgBC,QAASA,IAAM5C,EAAW,OAAJze,QAAI,IAAJA,OAAI,EAAJA,EAAM/C,cAAIgiB,SACnD,OAAJjf,QAAI,IAAJA,OAAI,EAAJA,EAAM/C,cADW,OAAJ+C,QAAI,IAAJA,OAAI,EAAJA,EAAM/C,gBAKD,QAAxBugB,EAAAnc,EAAW+c,EAAOvN,UAAM,IAAA2M,GAAxBA,EAA0Blf,OACvB+C,EAAW+c,EAAOvN,GAAO9Q,KAAI,CAACC,EAAMmS,KAEhC+M,EAAAA,GAAAA,KAACiC,GAAAA,EAAKC,KAAI,CAAaC,QAASA,IAAM5C,EAAW,OAAJze,QAAI,IAAJA,OAAI,EAAJA,EAAM/C,aAAI,sBAAOgiB,SACvD,OAAJjf,QAAI,IAAJA,OAAI,EAAJA,EAAM/C,cADOkV,KAKpB,MACJ+M,EAAAA,GAAAA,KAACoC,GAAAA,EAAO,CAACxB,MAAO,CAAEyB,OAAQ,YAC1BrC,EAAAA,GAAAA,KAACiC,GAAAA,EAAKC,KAAI,CAAaC,QArJtBG,KACXC,UAAUC,UAAUC,WAAWC,MAAMC,IACnC,GAAKA,EAEE,CACL,MACMhD,IADoB,OAAbgD,QAAa,IAAbA,OAAa,EAAbA,EAAezhB,MAAM,OACV,IACrBL,KAAKC,IAAU,IAAD8hB,EACb,OAAW,OAAJ3D,QAAI,IAAJA,GAAY,QAAR2D,EAAJ3D,EAAMlW,4CAAM,IAAA6Z,OAAR,EAAJA,EAAcra,MAAMnH,IAAO,OAADA,QAAC,IAADA,OAAC,EAADA,EAAGrE,4BAAS+D,GAAK,IAEnDwB,QAAQxB,GAASA,IAChB6e,EAAOvgB,QACTsf,EAAOiB,GACPkD,EAAAA,GAAQC,QAAQ,+CAEhBD,EAAAA,GAAQE,MAAM,qHAElB,MAdEF,EAAAA,GAAQE,MAAM,qHAchB,GACA,EAmI6ChD,SAAC,4BAAvB,YAIlBA,UAEDC,EAAAA,GAAAA,KAACgD,EAAAA,GAAM,CAACtC,KAAK,QAAOX,SAAC,gCAEvBC,EAAAA,GAAAA,KAACM,EAAAA,EAAO,CAACC,MAAO,uIAAyBR,UACvCC,EAAAA,GAAAA,KAACgD,EAAAA,GAAM,CAACtC,KAAK,QAAQyB,QAASA,IAAMxD,GAAS,GAAMoB,SAAC,gCAItDC,EAAAA,GAAAA,KAACgD,EAAAA,GAAM,CAACtC,KAAK,QAAQyB,QAASA,IAAM1D,IAAQwE,QAAM,EAAAlD,SAAC,8BAGnDC,EAAAA,GAAAA,KAACM,EAAAA,EAAO,CAACC,MAAM,0RAAmDR,UAChEC,EAAAA,GAAAA,KAACgD,EAAAA,GAAM,CACLtC,KAAK,QACLwC,KAAK,UACLf,QAASA,IAAM3D,GAAY,GAC3B2E,UAAe,OAAL5E,QAAK,IAALA,OAAK,EAALA,EAAOnf,QAAS,GAAsB,kBAAb,OAAJ6f,QAAI,IAAJA,OAAI,EAAJA,EAAM9M,sCAAgB4N,SACtD,4DAOX,E,eCjNA,SA5BA,SAAgBhO,GAAoB,IAADqR,EAAAC,EACjC,MAAM,uCAAEtZ,GAAWgI,EAEnB,OACE8N,EAAAA,GAAAA,MAAA,OAAKC,UAAW,uDAAuDC,SAAA,EACrEC,EAAAA,GAAAA,KAAA,OAAKF,UAAW,yBAAyBC,SAAC,kBAC1CF,EAAAA,GAAAA,MAAA,OAAKC,UAAW,+BAA+BC,SAAA,EAC7CF,EAAAA,GAAAA,MAAA,OAAKC,UAAW,+BAA+BC,SAAA,EAC7CC,EAAAA,GAAAA,KAAA,QAAAD,SAAM,kBACNC,EAAAA,GAAAA,KAACsD,GAAAA,EAAQ,CACPxD,UAAW,0BACXyD,QAASxhB,KAAK2I,MAAY,OAANX,QAAM,IAANA,GAAY,QAANqZ,EAANrZ,EAAQC,gCAAI,IAAAoZ,OAAN,EAANA,EAAcnZ,cAClCuZ,OAASD,GAAY,GAAGA,UAG5B1D,EAAAA,GAAAA,MAAA,OAAKC,UAAW,+BAA+BC,SAAA,EAC7CC,EAAAA,GAAAA,KAAA,QAAAD,SAAM,kBACNC,EAAAA,GAAAA,KAACsD,GAAAA,EAAQ,CACPxD,UAAW,0BACXyD,QAASxhB,KAAK2I,MAAY,OAANX,QAAM,IAANA,GAAY,QAANsZ,EAANtZ,EAAQC,gCAAI,IAAAqZ,OAAN,EAANA,EAAclZ,cAClCqZ,OAASD,GAAY,GAAGA,cAMpC,E,eCoFA,SAvGA,SAAcxR,GAAmB,IAAD0R,EAC9B,MAAM,MAAElD,EAAK,mBAAE7f,EAAM,kBAAEgjB,EAAQ,CAAC,EAAC,2BAAEC,EAAI,iCAAEC,GAAU7R,EAE7C8R,EAAWliB,OAAOC,KAAKlB,GAAQG,KAAKC,GAASJ,EAAOI,KACpDgjB,GAAaC,EAAAA,EAAAA,UAAQ,KAAO,IAADC,EAC/B,MAAM9kB,EAAM,IAAK2kB,GAAY,IAK7B,OAHQ,OAAJF,QAAI,IAAJA,GAAAA,EAAMriB,SAAS,iBAAe,OAANZ,QAAM,IAANA,GAAgB,QAAVsjB,EAANtjB,EAAS,mCAAO,IAAAsjB,GAAhBA,EAAkB3f,0BAC5CnF,EAAIoF,KAAa,OAARzG,QAAQ,IAARA,OAAQ,EAARA,EAAW,iBAEfqB,CAAG,GACT,CAAC2kB,EAAUnjB,EAAQijB,IAChBM,EAOF,QAPSR,EAAG9hB,OAAOC,KAAK8hB,GACzB7iB,KAAKC,IACJ,MAAMojB,EAAe,OAARrmB,QAAQ,IAARA,OAAQ,EAARA,EAAWiD,GACxB,MAAO,IACF4iB,EAAM5iB,MACNojB,EACJ,WACD,IAAAT,OAAA,EAPYA,EAQZnhB,QAAQxB,IAAI,IAAAqjB,EAAA,OAAS,OAAJrjB,QAAI,IAAJA,GAAW,QAAPqjB,EAAJrjB,EAAMsjB,sCAAK,IAAAD,OAAP,EAAJA,EAAa/kB,MAAM,IAExC,OACEygB,EAAAA,GAAAA,MAAA,OAAKC,UAAW,yDAAyDC,SAAA,EACvEC,EAAAA,GAAAA,KAAA,OAAKF,UAAW,yBAAyBC,SAAEQ,KAC3CV,EAAAA,GAAAA,MAACwE,GAAAA,EAAK,CAACvE,UAAW,6BAA8BY,KAAM,CAAC,EAAG,GAAI4D,MAAI,EAAAvE,SAAA,CACrD,OAAV+D,QAAU,IAAVA,GAAAA,EAAY1kB,OACT0kB,EAAWjjB,KAAKC,IACd,MACMyjB,GADUzjB,EAAKyO,0BAAQ,IAAMzO,EAAK7C,sCAAU,GAC5B2lB,GAAS,EACzBY,GAASD,EAAOjnB,EAAAA,IAAOmnB,QAAQ,GAC/BlT,EAAKzQ,EAAKuD,0BAAQ,EACxB,OACEwb,EAAAA,GAAAA,MAAA,OAAKC,UAAW,wBAAwBC,SAAA,EACtCF,EAAAA,GAAAA,MAAA,OAAKC,UAAW,6BAA6BC,SAAA,EAC3CC,EAAAA,GAAAA,KAACM,EAAAA,EAAO,CACNC,OACEV,EAAAA,GAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,GAAAA,KAAA0E,GAAAA,SAAA,CAAA3E,SAAG,GAAGjf,EAAK/C,eAAKwT,EAAK,EAAI,GAAGA,UAAQ,QACpCyO,EAAAA,GAAAA,KAAA,KAAAD,SAAIjf,EAAK5C,kBAEZ6hB,UAEDC,EAAAA,GAAAA,KAAA,OAAKF,UAAW,4BAA6B6E,IAAK7jB,EAAK3D,iBAExDoU,EAAK,GACJyO,EAAAA,GAAAA,KAAA,QAAMF,UAAW,8BAA8BC,SAAEjf,EAAKuD,2BACpD,SAEN2b,EAAAA,GAAAA,KAAA,KACEF,UAAW,iCACTyE,EAAe,EAARjnB,EAAAA,GAAY,qCAAuC,IACzDyiB,SAEU,6BAAZjf,EAAK/C,eAAkBymB,EAAQ,EAAIA,EAAgB,SArBV1jB,EAAK/C,aAuB7C,IAGV,KACI,OAAPkmB,QAAO,IAAPA,GAAAA,EAAS7kB,OACN6kB,EAAQpjB,KAAKC,IAAU,IAAD8jB,EACpB,MAAMC,GAAiB,QAAVD,EAAA9jB,EAAKsjB,sCAAK,IAAAQ,OAAA,EAAVA,EAAa9jB,EAAKsjB,+BAAMhlB,OAAS,KAAM,CAAC,EAE/CmlB,IADa,OAAJM,QAAI,IAAJA,OAAI,EAAJA,EAAMC,2BAAQ,GACPlB,GAAS,EACzBY,GAASD,EAAOjnB,EAAAA,IAAOmnB,QAAQ,GAC/BlT,EAAKsT,EAAKxgB,0BAAQ,EACxB,OACEwb,EAAAA,GAAAA,MAAA,OAAKC,UAAW,wBAAwBC,SAAA,EACtCF,EAAAA,GAAAA,MAAA,OAAKC,UAAW,6BAA6BC,SAAA,EAC3CC,EAAAA,GAAAA,KAACM,EAAAA,EAAO,CACNC,OACEV,EAAAA,GAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,GAAAA,KAAA,KAAAD,SAAI,GAAGjf,EAAK/C,eAAKwT,EAAK,EAAI,GAAGA,UAAQ,QACrCyO,EAAAA,GAAAA,KAAA,KAAAD,SAAIjf,EAAK5C,kBAEZ6hB,UAEDC,EAAAA,GAAAA,KAAA,OAAKF,UAAW,4BAA6B6E,IAAK7jB,EAAK3D,iBAExDoU,EAAK,GACJyO,EAAAA,GAAAA,KAAA,QAAMF,UAAW,8BAA8BC,SAAExO,IAC/C,SAENyO,EAAAA,GAAAA,KAAA,KACEF,UAAW,iCACTyE,EAAe,EAARjnB,EAAAA,GAAY,qCAAuC,IACzDyiB,SAEFyE,MArByC1jB,EAAK/C,aAuB7C,IAGV,KACM,OAAR8lB,QAAQ,IAARA,GAAAA,EAAUzkB,QAAkB,OAAP6kB,QAAO,IAAPA,GAAAA,EAAS7kB,OAE5B,MADF4gB,EAAAA,GAAAA,KAAA,KAAGF,UAAW,mBAAmBC,SAAC,gBAK5C,E,2DC1GA,MA6FA,GA7FuDhO,IAAW,IAADoC,EAC/D,MAAM,KAAE4Q,EAAI,SAAEC,EAAQ,QAAEC,GAAYlT,EAE9BmT,EAAU,CACd,CACE3E,MAAO,eACP4E,UAAW,eACXC,QAMC,QANMjR,EAAE,IACJ7L,EACH,CAAEvL,2BAAM,gBACR,CAAEA,2BAAM,gBACR,CAAEA,2BAAM,gBACR,CAAEA,2BAAM,oCACT,IAAAoX,OAAA,EANQA,EAMNtT,KAAKC,IACC,CACLukB,KAAU,OAAJvkB,QAAI,IAAJA,OAAI,EAAJA,EAAM/D,yBACZ4jB,MAAW,OAAJ7f,QAAI,IAAJA,OAAI,EAAJA,EAAM/D,6BAGjBuoB,SAAUA,CAAC3E,EAAY4E,KAAY,IAADC,EAAAC,EAChC,OAAgB,QAATD,EAAAD,EAAOplB,oBAAE,IAAAqlB,OAAA,EAATA,EAAWlkB,SAASqf,MAAgB,OAAN4E,QAAM,IAANA,GAAY,QAANE,EAANF,EAAQ1lB,gCAAI,IAAA4lB,OAAN,EAANA,EAAcnkB,SAASqf,GAAM,GAGtE,CACEJ,MAAO,2BACP4E,UAAW,2BACXC,QAAe,OAANxnB,QAAM,IAANA,OAAM,EAANA,EAAQiD,KAAKC,IACb,CACLukB,KAAMvkB,EACN6f,MAAO7f,MAGXwkB,SAAUA,CAAC3E,EAAY4E,IAA0C,IAA/BA,EAAO1lB,yBAAK6lB,QAAQ/E,IAExD,CACEJ,MAAO,mBACP4E,UAAW,mBACXQ,OAAQA,CAACC,EAAGL,KAAY,IAAD9Q,EACrB,MAAuB,6BAAhB8Q,EAAO1lB,2BAA0B,QAAR4U,EAACmR,GAAK,UAAE,IAAAnR,OAAA,EAARA,EAAWhT,KAAK,OAAc,GAAG,GAGrE,CACE8e,MAAO,qBACP4E,UAAW,2BACXQ,OAASC,GACAA,GAGX,CACErF,MAAO,qBACP4E,UAAW,qBACXQ,OAAQA,CAACC,EAAGC,KACA,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKxS,0BAAO/V,EAAAA,KAiBzB,OACE0iB,EAAAA,GAAAA,KAAC8F,EAAAA,EAAK,CACJhG,UAAU,wBACViF,KAAMA,EACNC,SAAUA,EACVzE,OACEP,EAAAA,GAAAA,KAAA,OAAKF,UAAW,+BAA+BC,UAC7CC,EAAAA,GAAAA,KAAA,MAAIF,UAAW,8BAA8BC,SAAC,+BAGlDc,MAAO,MACPkF,UAAQ,EACRC,QAAQ,EAAMjG,UAEdC,EAAAA,GAAAA,KAACiG,GAAAA,EAAK,CACJC,WAAYjB,EACZC,QAASA,EACTxE,KAAK,QACLyF,WAAY,CAAEC,SAAU,IAAKC,UAAYC,GAAUA,MAE/C,E,eCrFZ,MAmEA,GAnEyDvU,IACvD,MAAM,KAAEgT,EAAI,SAAEC,EAAQ,MAAEsB,EAAK,QAAEC,EAAO,QAAEtB,GAAYlT,GAE9C,iCAAEyU,EAAK,iCAAEC,EAAK,uCAAEC,EAAM,uCAAEC,IAAW5C,EAAAA,EAAAA,UAAQ,KAAO,IAAD5P,EAAAM,EACrD,MAAMmS,EAAqB,QAAjBzS,EAAI8Q,GAAW,UAAE,IAAA9Q,OAAA,EAAdA,EAAiB7R,QAAQxB,IAAU,IAADoS,EAAA2T,EAC7C,OAAW,OAAJ/lB,QAAI,IAAJA,GAAQ,QAAJoS,EAAJpS,EAAMX,oBAAE,IAAA+S,OAAJ,EAAJA,EAAU5R,SAAS,mBAAa,OAAJR,QAAI,IAAJA,GAAU,QAAN+lB,EAAJ/lB,EAAMjB,gCAAI,IAAAgnB,OAAN,EAAJA,EAAYvlB,SAAS,4BAAO,IAE3DwlB,EAAqB,QAAjBrS,EAAIwQ,GAAW,UAAE,IAAAxQ,OAAA,EAAdA,EAAiBnS,QAAQxB,IAAU,IAADimB,EAAAC,EAC7C,OAAW,OAAJlmB,QAAI,IAAJA,GAAQ,QAAJimB,EAAJjmB,EAAMX,oBAAE,IAAA4mB,OAAJ,EAAJA,EAAUzlB,SAAS,mBAAa,OAAJR,QAAI,IAAJA,GAAU,QAANkmB,EAAJlmB,EAAMjB,gCAAI,IAAAmnB,OAAN,EAAJA,EAAY1lB,SAAS,4BAAO,KAEzD2lB,qBAAKT,EAAOU,2BAAMR,GAAWS,GAAQP,IACrCK,qBAAKR,EAAOS,2BAAMP,GAAWQ,GAAQL,GAC7C,MAAO,CACLN,mCACAE,yCACAD,mCACAE,yCACD,GACA,CAAC1B,IAEJ,OACEjF,EAAAA,GAAAA,KAACoH,GAAAA,EAAI,CACH7G,OACEV,EAAAA,GAAAA,MAAA,OAAKC,UAAW,6CAA6CC,SAAA,EAC3DC,EAAAA,GAAAA,KAAA,MAAIF,UAAW,8BAA8BC,SAAC,8BAC9CC,EAAAA,GAAAA,KAACC,GAAAA,EAAO,CACNC,SACEL,EAAAA,GAAAA,MAAA,OAAKC,UAAU,uCAAsCC,SAAA,EACnDF,EAAAA,GAAAA,MAAA,OAAKC,UAAU,uCAAsCC,SAAA,EACnDF,EAAAA,GAAAA,MAAA,KAAAE,SAAA,CAAG,iCAAMyG,MACTxG,EAAAA,GAAAA,KAACoC,GAAAA,EAAO,CAACxB,MAAO,CAAEyB,OAAQ,WACzB1gB,OAAOC,KAAK8kB,GAAQ7lB,KAAKC,IAEtB+e,EAAAA,GAAAA,MAAA,KAAAE,SAAA,CAAuB,mBACjBjf,EAAK,SAAE4lB,EAAO5lB,GAAM,WADlB,2BAAOA,WAMrB+e,EAAAA,GAAAA,MAAA,OAAKC,UAAU,uCAAsCC,SAAA,EACnDF,EAAAA,GAAAA,MAAA,KAAAE,SAAA,CAAG,iCAAM0G,MACTzG,EAAAA,GAAAA,KAACoC,GAAAA,EAAO,CAACxB,MAAO,CAAEyB,OAAQ,WACzB1gB,OAAOC,KAAK+kB,GAAQ9lB,KAAKC,IAEtB+e,EAAAA,GAAAA,MAAA,KAAAE,SAAA,CAAuB,mBACjBjf,EAAK,SAAE6lB,EAAO7lB,GAAM,WADlB,2BAAOA,aAOxBif,UAEDC,EAAAA,GAAAA,KAAA,QAAMF,UAAW,uBAAuBC,SAAC,kCAI/CsH,2BAAM,CACJC,eAAIhB,EACJiB,mDAAUhB,GAEZiB,QAASzC,EACT0C,QAASA,IAAMzC,KACf,EAUAmC,GAAWO,IACf,IAAIC,EAAK,EAET,MAAMC,EAASF,EACZ7mB,KAAKC,IACJ,MAAM+mB,EATa1nB,KAAQ,IAAD2nB,EAC9B,OAAS,OAAF3nB,QAAE,IAAFA,GAAQ,QAAN2nB,EAAF3nB,EAAIV,gCAAI,IAAAqoB,OAAN,EAAFA,EAAUloB,2BAAQ,CAAC,EAQTmoB,CAASjnB,GAEtB,OADA6mB,GAAUE,EACHA,CAAI,IAEZvlB,QAAQxB,IAAmB,IAAVA,IAEdomB,EAAcU,EAQTI,QAAO,CAACC,EAAKC,KACtBD,EAAIC,GAAQD,EAAIC,KAAWD,EAAIC,GAAQ,EAChCD,IACN,CAAC,GAVJ,MAAO,CACLhB,qBAAKU,EACLT,6BACD,E,eCrGH,MAAMiB,GAAY,CAAC,2BAAQ,4BCwH3B,SA5GA,SAAwBpW,GACtB,MAAM,KAAEgT,EAAI,SAAEC,EAAQ,eAAE7kB,EAAE,iCAAEioB,GAAUrW,GAC/BsW,EAAWC,IAAgBC,EAAAA,EAAAA,YAC5BC,GAAgBC,EAAAA,EAAAA,WACfC,EAAKC,IAASJ,EAAAA,EAAAA,UAAc,CAAC,IAEpCK,EAAAA,EAAAA,YAAU,KACJ7D,GACF8D,YAAW,KACTC,GAAW,GACV,IAED/D,EACFyD,EAASO,SAAU,GAEnBP,EAASO,SAAU,EACnBJ,EAAM,CAAC,GACPL,OAAarkB,GACf,GACC,CAAC8gB,EAAM5kB,EAAIioB,IAEd,MAAMU,EAAYA,KAChB,GAAIN,EAASO,QACX,OAEFP,EAASO,SAAU,EAEnB,MAAMC,EAAQX,GAEV,IAAIY,GAAAA,GAAM,CACRC,UAAW,yBACXC,SAAS,EACTC,SAAU,SACVC,QAAS,CAAC,GAAI,IAAK,IAAK,OAG9BL,EAAMM,QAAQ,CACZC,YAAY,IAGTlB,GACHC,EAAaU,GAGf,MAAM9C,EAAasD,IAEnBR,EAAMS,OAAOvD,EAAY,CACvBjR,KAAM,CACJyU,UAAW,MAGfV,EAAMW,KAAK,OAAQ,CACjBhI,MAAO,CACLf,MAAO,CACLgJ,UAAW,SACXC,SAAU,OAKhB,MAAM5qB,EAAOuqB,IAEbR,EAAM/pB,KAAKA,GACX+pB,EAAMc,aAAaC,YACnBf,EAAMgB,WAAWC,SAAS,cAAcC,MAAM,QAAQvI,MAAM,QAAS,CAAEwI,OAAQ,KAE/EnB,EAAMrD,SAGNkD,YAAW,KACTL,EAASO,SAAU,CAAK,GACvB,GAAG,EAGFS,EAAgBA,KACpB,MAAM,mBAAEY,EAAM,qBAAE1B,GDrFK2B,EAAClqB,EAAgBioB,KAExC,MAAMgC,EAEF,CAAC,EACC1B,EAAM,CAAC,EAGb,IAAK,IAAIvpB,EAAI,EAAGA,EAAIgB,EAAGf,OAAQD,IAAK,CAAC,IAADmrB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAClC,IACmB,kCAAX,QAALL,EAAAnqB,EAAGhB,UAAE,IAAAmrB,OAAA,EAALA,EAAOzqB,2BAAuC,kCAAX,QAAL0qB,EAAApqB,EAAGhB,UAAE,IAAAorB,OAAA,EAALA,EAAO1qB,6BAChC,QAAL2qB,EAAArqB,EAAGhB,UAAE,IAAAqrB,GAAI,QAAJC,EAALD,EAAOrqB,oBAAE,IAAAsqB,GAATA,EAAWnpB,SAAS,iBAAc,QAATopB,EAAIvqB,EAAGhB,UAAE,IAAAurB,GAAI,QAAJC,EAALD,EAAOvqB,oBAAE,IAAAwqB,GAATA,EAAWrpB,SAAS,iBAClD,CAAC,IAADspB,EAAAC,EAAAC,EAAAC,EAEA,MAAMC,EAAe,QAARJ,EAAGzqB,EAAGhB,UAAE,IAAAyrB,OAAA,EAALA,EAAOzqB,aACjB+iB,EAAc,OAAP8H,QAAO,IAAPA,GAAAA,EAAS1pB,SAAS,gBAAQ,MAAQ,OACzC2pB,EAAoB,QAAT/H,EAAwB,OAAP8H,QAAO,IAAPA,GAAoB,QAAbH,EAAPG,EAAS9pB,MAAM,uBAAK,IAAA2pB,OAAb,EAAPA,EAAuB,GAAY,OAAPG,QAAO,IAAPA,GAAoB,QAAbF,EAAPE,EAAS9pB,MAAM,uBAAK,IAAA4pB,OAAb,EAAPA,EAAuB,GAC/EI,GAA2B,QAALH,EAAA5qB,EAAGhB,UAAE,IAAA4rB,OAAA,EAALA,EAAO1X,2BAAQ,EAGd,IAAD8X,EAF5B,GAAIF,IAAsB,OAAT9C,SAAS,IAATA,KAAAA,GAAW7mB,SAAS2pB,IACnC,GAAa,QAAT/H,EACQ,OAANkH,QAAM,IAANA,GAAAA,EAASa,IAEsC,QAA7CE,EAAAf,EAAOa,GAAUb,EAAOa,GAAU7rB,OAAS,UAAE,IAAA+rB,OAAA,EAA7CA,EAA+C/rB,QAAS,GAC1DgrB,EAAOa,GAAU3mB,KAAK,CAAC4mB,IAGzBd,EAAOa,GAAY,CAAC,CAACC,SAElB,GAAa,SAAThI,EAAiB,CACD,IAADkI,EAAAC,EAAd,OAANjB,QAAM,IAANA,GAAAA,EAASa,IACD,OAANb,QAAM,IAANA,GAAkB,QAAZgB,EAANhB,EAASa,UAAS,IAAAG,GAAlBA,GAA2B,OAANhB,QAAM,IAANA,GAAkB,QAAZiB,EAANjB,EAASa,UAAS,IAAAI,OAAZ,EAANA,EAAoBjsB,QAAS,IACpDgrB,EAAOa,GAAUb,EAAOa,GAAU7rB,OAAS,GAAGkF,KAAK4mB,EAGzD,CAEJ,CACF,CAuBA,OAnBAvpB,OAAOC,KAAKwoB,GAAQznB,SAASvC,IAAS,IAADkrB,EACnC,GAAe,QAAfA,EAAIlB,EAAOhqB,UAAI,IAAAkrB,GAAXA,EAAalsB,OAAQ,CAAC,IAADmsB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxX,EAEV,QAAXoX,EAAAnB,EAAOhqB,UAAI,IAAAmrB,GAAXA,GAAyB,QAAXC,EAAApB,EAAOhqB,UAAI,IAAAorB,OAAA,EAAXA,EAAapsB,QAAS,KACzB,QAAXqsB,EAAArB,EAAOhqB,UAAI,IAAAqrB,GAA2B,QAA3BC,EAAXD,GAAyB,QAAXE,EAAAvB,EAAOhqB,UAAI,IAAAurB,OAAA,EAAXA,EAAavsB,QAAS,UAAE,IAAAssB,OAA3B,EAAXA,EAAwCtsB,QAAS,GAEjDgrB,EAAOhqB,GAAKgqB,EAAOhqB,GAAKhB,OAAS,GAAGkF,KAAK8jB,GAG3C,IAAIwD,EAAQ,EACZ,IAAK,IAAIzsB,EAAI,EAAGA,EAAIirB,EAAOhqB,GAAKhB,OAAQD,IAClCirB,EAAOhqB,GAAKjB,IAAgC,IAA1BirB,EAAOhqB,GAAKjB,GAAGC,SACnCwsB,EAAQA,EAAQxB,EAAOhqB,GAAKjB,GAAG,GAAKirB,EAAOhqB,GAAKjB,GAAG,IAGvDupB,EAAItoB,GAA6B,QAAzB+T,EAAKyX,EAAQxD,EAAS,WAAG,IAAAjU,OAAA,EAAtBA,EAAyBsQ,QAAQ,EAC9C,KAGK,CACL2F,qBACA1B,uBACD,ECsByB2B,CAAUlqB,EAAIioB,GAEtC,OADAO,EAAMD,GDpBkB0B,KAC1B,MAAMlrB,EAAa,GAQnB,OAPAyC,OAAOC,KAAKwoB,GAAQznB,SAASvC,IAAS,IAADyrB,EACpB,QAAfA,EAAIzB,EAAOhqB,UAAI,IAAAyrB,GAAXA,EAAazsB,QACfgrB,EAAOhqB,GAAKuC,SAASmpB,IACnB5sB,EAAIoF,KAAK,CAAE4e,KAAM9iB,EAAK0rB,MAAOA,GAAQ,GAEzC,IAEK5sB,CAAG,ECYD6sB,CAAY3B,EAAO,EAG5B,OACEvK,EAAAA,GAAAA,MAACiG,EAAAA,EAAK,CACJf,KAAMA,EACNC,SAAUA,EACVzE,OACEP,EAAAA,GAAAA,KAAA,OAAKF,UAAW,+BAA+BC,UAC7CC,EAAAA,GAAAA,KAAA,MAAIF,UAAW,8BAA8BC,SAAC,mFAGlDc,MAAO,MACPkF,UAAQ,EACRC,QAAQ,EAAMjG,SAAA,EAEdC,EAAAA,GAAAA,KAACqE,GAAAA,EAAK,CAACvE,UAAU,wBAAwBY,KAAM,CAAC,GAAI,IAAK4D,MAAI,EAAAvE,SAC1Dpe,OAAOC,KAAK8mB,GAAK7nB,KAAKC,IAEnB+e,EAAAA,GAAAA,MAAA,OAAgBC,UAAW,6BAA6BC,SAAA,EACtDF,EAAAA,GAAAA,MAAA,QAAMC,UAAU,8BAA6BC,SAAA,CAAEjf,EAAK,aACpD+e,EAAAA,GAAAA,MAAA,QAAMC,UAAU,8BAA6BC,SAAA,CAAE2I,EAAI5nB,GAAM,SAFjDA,OAOfikB,GAAO/E,EAAAA,GAAAA,KAAA,OAAKgM,GAAG,yBAAyBlM,UAAW,2BAA+B,OAGzF,ECTA,SA7FA,SAAgB/N,GAAqB,IAADka,EAAAC,EAClC,MAAM,2BAAEjN,EAAI,2BAAEkN,EAAI,8BAAEC,GAAYra,GAEzBsa,EAAoBC,IAAyB/D,EAAAA,EAAAA,WAAkB,IAG/DgE,EAAcC,IAAmBjE,EAAAA,EAAAA,WAAkB,IAEnDkE,EAAYC,IAAiBnE,EAAAA,EAAAA,WAAkB,GAMtD,OACE1I,EAAAA,GAAAA,MAAA,OACEC,UAAW,sBACQ,kBAAb,OAAJb,QAAI,IAAJA,OAAI,EAAJA,EAAM9M,sCAAkB,0BAA4B,IACnD4N,SAAA,CAEe,kBAAb,OAAJd,QAAI,IAAJA,OAAI,EAAJA,EAAM9M,uCACL0N,EAAAA,GAAAA,MAAA,OAAKC,UAAW,sBAAsBC,SAAA,EACpCC,EAAAA,GAAAA,KAAA,MAAIF,UAAW,4BAA4BC,SAAC,8BAC5CC,EAAAA,GAAAA,KAAC2M,GAAAA,EAAK,CACJzJ,KAAK,QACL0J,UAAQ,EACR/J,QAAS,iCAAY,OAAJ5D,QAAI,IAAJA,GAAY,QAARgN,EAAJhN,EAAM7M,4CAAM,IAAA6Z,GAAM,QAANC,EAAZD,EAAc9d,gCAAI,IAAA+d,OAAd,EAAJA,EAAoBjpB,oBAGhC,OAAPmpB,QAAO,IAAPA,GAAAA,EAASS,cACX7M,EAAAA,GAAAA,KAAA,OAAKF,UAAW,wBAAwBC,UACtCF,EAAAA,GAAAA,MAAA,OAAKC,UAAW,gCAAgCC,SAAA,EAC9CC,EAAAA,GAAAA,KAAA,MAAIF,UAAW,oBAAoBC,SAAS,OAAPqM,QAAO,IAAPA,OAAO,EAAPA,EAASS,gBAC9ChN,EAAAA,GAAAA,MAAA,OAAKC,UAAW,qCAAqCC,SAAA,EACnDF,EAAAA,GAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,GAAAA,KAAA,QAAMF,UAAW,6BAA6BC,SAAC,8BAC/CF,EAAAA,GAAAA,MAAA,QAAMC,UAAW,6DAA6DC,SAAA,CACpE,OAAPqM,QAAO,IAAPA,OAAO,EAAPA,EAASU,qCAAO,gBAGrBjN,EAAAA,GAAAA,MAAA,OAAKC,UAAW,sBAAsBC,SAAA,EACpCC,EAAAA,GAAAA,KAACM,EAAAA,EAAO,CAACC,MAAM,mBAASC,UAAU,OAAMT,UACtCC,EAAAA,GAAAA,KAAC+M,GAAAA,EAAgB,CACfjN,UAAW,qBACXqC,QAASA,IAAMmK,GAAsB,QAGzCtM,EAAAA,GAAAA,KAACM,EAAAA,EAAO,CAACC,MAAM,2BAAOC,UAAU,OAAMT,UACpCC,EAAAA,GAAAA,KAACgN,GAAAA,EAAgB,CACflN,UAAW,qBACXqC,QAASA,IAAMqK,GAAgB,QAGnCxM,EAAAA,GAAAA,KAACM,EAAAA,EAAO,CAACC,MAAM,2BAAOC,UAAU,OAAMT,UACpCC,EAAAA,GAAAA,KAACiN,GAAAA,EAAiB,CAChBnN,UAAW,qBACXqC,QAASA,IAAMuK,GAAc,kBAOvC,MAIJ1M,EAAAA,GAAAA,KAACkN,GAAc,CACbnI,KAAMwH,EACNvH,SAAUA,IAAMwH,GAAgB,GAChCvH,QAASkH,KAGXnM,EAAAA,GAAAA,KAACmN,GAAe,CACdpI,KAAM0H,EACNzH,SAAUA,IAAM0H,GAAc,GAC9BnG,QAAgB,OAAP6F,QAAO,IAAPA,OAAO,EAAPA,EAAS7E,iDAClBjB,MAAc,OAAP8F,QAAO,IAAPA,OAAO,EAAPA,EAAS9E,aAChBrC,QAASkH,IAGVE,IACCrM,EAAAA,GAAAA,KAACoN,GAAc,CACbrI,KAAMsH,EACNrH,SAAUA,IAAMsH,GAAsB,GACtCnsB,eAAIgsB,EACJ/D,iCAAW,OAAJnJ,QAAI,IAAJA,OAAI,EAAJA,EAAM3Z,6BAKvB,ECpEA,SAvBA,SAAmByM,GACjB,MAAM,2BAAEkN,EAAI,2BAAEkN,EAAI,8BAAEC,EAAO,2BAAEzI,GAAS5R,EAEtC,OACE8N,EAAAA,GAAAA,MAAA,OAAKC,UAAW,mBAAmBC,SAAA,EACjCC,EAAAA,GAAAA,KAACqN,GAAM,CAACtjB,uCAAY,OAAJkV,QAAI,IAAJA,OAAI,EAAJA,EAAMlV,wCACtBiW,EAAAA,GAAAA,KAACsN,GAAI,CACH/M,MAAM,mBACN7f,mBAAY,OAAJue,QAAI,IAAJA,OAAI,EAAJA,EAAM7a,yCACdwf,iCAAW,OAAJ3E,QAAI,IAAJA,OAAI,EAAJA,EAAM3Z,yBACbqe,2BAAMA,GAAQ,MAEhB3D,EAAAA,GAAAA,KAACsN,GAAI,CACH/M,MAAM,mBACN7f,mBAAY,OAAJue,QAAI,IAAJA,OAAI,EAAJA,EAAM/Z,yCACdwe,kBAAW,OAAJzE,QAAI,IAAJA,OAAI,EAAJA,EAAMf,wCACb0F,iCAAW,OAAJ3E,QAAI,IAAJA,OAAI,EAAJA,EAAM3Z,4BAEf0a,EAAAA,GAAAA,KAACuN,GAAM,CAACtO,2BAAMA,EAAMkN,2BAAMA,EAAMC,8BAASA,MAG/C,E,+CC/BA,SALA,SAAiBjY,GAAqB,IAApB,KAAElV,KAASyX,GAAMvC,EACjC,MAAMtP,EAAe,OAARhH,QAAQ,IAARA,OAAQ,EAARA,EAAWoB,GACxB,OAAO4F,GAAOmb,EAAAA,GAAAA,KAAA,OAAK2E,IAAK9f,EAAK1H,gBAAQuZ,IAAW,IAClD,ECiJA,SAnIA,SAAwB3E,GAA6B,IAADka,EAAAuB,EAAAC,EAAAC,EAClD,MAAM,eACJ7Z,EAAE,uCACF8Z,EAAM,2BACN1O,EAAI,+BACJ2O,EAAQ,+BACRC,EAAQ,2CACRC,EAAU,uCACVC,GACEhc,EAEEic,GAAc,OAAFna,QAAE,IAAFA,GAAAA,EAAI2E,qCAAS3E,EAAG2E,qCAAS3E,EAAGgF,uCAAW,EACnDgE,EAAS,OAAFhJ,QAAE,IAAFA,GAAAA,EAAI2E,qCACbzW,KAAKC,QAAS6R,EAAGgF,sCAAU,IAAMhF,EAAG2E,sCAAU,IAAMlb,EAAAA,GAAS,KAAO,IACpE,EAEE2wB,GAAS,OAAFpa,QAAE,IAAFA,OAAE,EAAFA,EAAIZ,QAAS,EAEpBib,EAASnsB,KAAKC,OAAQgsB,GAAY,GAAK1wB,EAAAA,GAAS,KAAO,IACvD6wB,GAAQH,GAAY,IAAMna,EAAG0E,sCAAU,GAEvC6V,EAAMrsB,KAAKC,MAAOmsB,EAAO7wB,EAAAA,GAAS,KAAO,IAGzCoP,IAAU,OAAJuS,QAAI,IAAJA,GAAY,QAARgN,EAAJhN,EAAM7M,4CAAM,IAAA6Z,OAAR,EAAJA,EAAc5Z,2BAAQ,IAAM,EAClCgc,EAAwB,kBAAb,OAAJpP,QAAI,IAAJA,OAAI,EAAJA,EAAM9M,yCAAqB,OAAF0B,QAAE,IAAFA,OAAE,EAAFA,EAAIZ,QAAS,IAAMvG,EACnD4hB,EAAwB,kBAAb,OAAJrP,QAAI,IAAJA,OAAI,EAAJA,EAAM9M,yCAAqB,OAAF0B,QAAE,IAAFA,OAAE,EAAFA,EAAIZ,QAAS,KAAOvG,EAEpD6hB,GAAW,OAAF1a,QAAE,IAAFA,OAAE,EAAFA,EAAI+E,mDAAY,CAAC,EAe1B4V,GAAqBzK,EAAAA,EAAAA,UAAQ,MAE5B,OAAFlQ,QAAE,IAAFA,OAAE,EAAFA,EAAIgF,uCAAU,KAAc,OAAR+U,QAAQ,IAARA,OAAQ,EAARA,EAAW,OAC7B,OAAF/Z,QAAE,IAAFA,OAAE,EAAFA,EAAIgF,uCAAU,KAAc,OAAR+U,QAAQ,IAARA,OAAQ,EAARA,EAAW,KAChCK,GAAQJ,GAMT,CAACD,EAAUC,EAAUI,EAAMpa,IAExB4a,EAAMC,KACV,gCACAL,EAAO,sCAAwC,GAC/CG,EAAqB,0CAA4C,IAG7DrxB,GAAK4mB,EAAAA,EAAAA,UAAQ,IACVlQ,EAAG1W,cACT,CAAC0W,EAAI0a,IAEFI,EAAO,CACX,CACEvuB,IAAK,2BACLuhB,OACE9B,EAAAA,GAAAA,MAAA,QAAAE,SAAA,CAAM,UACHC,EAAAA,GAAAA,KAAA,QAAMF,UAAU,kCAAiCC,SAAC,iBAAS,+BAIlE,CACE3f,IAAK,2BACLuhB,OACE9B,EAAAA,GAAAA,MAAA,QAAAE,SAAA,CAAM,UACHC,EAAAA,GAAAA,KAAA,QAAMF,UAAU,iCAAgCC,SAAC,iBAAS,gCAMnE,OACEC,EAAAA,GAAAA,KAAC4O,GAAAA,EAAK,CAACC,MAAOT,EAAKjE,OAAQ,EAAE,GAAI,GAAIrK,UAAW,qCAAqCC,UACnFC,EAAAA,GAAAA,KAAC+B,GAAAA,EAAQ,CAAC+M,KAAM,CAAEC,MAAOJ,EAAMxM,QAAS4L,GAAUiB,QAAS,CAAC,eAAejP,UACzEF,EAAAA,GAAAA,MAAA,OAAKC,UAAW2O,EAAKQ,aAzDNC,KAAO,IAADC,EACKC,EAAAC,EAApB,OAANd,QAAM,IAANA,GAAgB,QAAVY,EAANZ,EAAQvd,oCAAQ,IAAAme,GAAhBA,EAAkB/pB,kBACpB0oB,EACE,CAAO,OAANS,QAAM,IAANA,GAAgB,QAAVa,EAANb,EAAQvd,oCAAQ,IAAAoe,OAAV,EAANA,EAAkB3pB,6BAAgB,OAAN8oB,QAAM,IAANA,GAAgB,QAAVc,EAANd,EAAQvd,oCAAQ,IAAAqe,OAAV,EAANA,EAAkB3pB,8BAC/CuoB,EAEJ,EAmDqDqB,aAhDpCC,KACjBzB,EAAW,GAAI,EAAE,EA+C6D/N,SAAA,EACxEC,EAAAA,GAAAA,KAACM,EAAAA,EAAO,CACNC,OACEV,EAAAA,GAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,GAAAA,KAAA,KAAAD,SAAM,OAAFlM,QAAE,IAAFA,OAAE,EAAFA,EAAI9W,2BACPmxB,GAASrO,EAAAA,GAAAA,MAAA,KAAAE,SAAA,CAAG,iCAAMmO,EAAO,YAAQ,KACjCK,EAAOiB,sCAAS3P,EAAAA,GAAAA,MAAA,KAAAE,SAAA,CAAG,iCAAMwO,EAAOiB,wCAAc,KAC9CpB,GAAMvO,EAAAA,GAAAA,MAAA,KAAAE,SAAA,CAAG,mCAAQqO,EAAI,YAAQ,KAC7BvR,GAAOgD,EAAAA,GAAAA,MAAA,KAAAE,SAAA,CAAG,qBAAIlD,EAAK,YAAQ,KACrB,OAAN0R,QAAM,IAANA,GAAgB,QAAVf,EAANe,EAAQ3pB,oCAAQ,IAAA4oB,GAAhBA,EAAkBpuB,QACjB4gB,EAAAA,GAAAA,KAACqE,GAAAA,EAAK,CAACvE,UAAW,+BAAgCY,KAAM,CAAC,EAAG,GAAI4D,MAAI,EAAAvE,SAC3D,OAANwO,QAAM,IAANA,OAAM,EAANA,EAAQ3pB,6BAAS/D,KAAKC,IAEnBkf,EAAAA,GAAAA,KAACyP,GAAQ,CACPxwB,KAAM6B,EAENgf,UAAW,qCADNhf,OAMX,KACHutB,EACCC,GACEzO,EAAAA,GAAAA,MAAA,KAAAE,SAAA,CAAG,qBAAQ,OAAJd,QAAI,IAAJA,GAAY,QAARwO,EAAJxO,EAAM7M,4CAAM,IAAAqb,GAAM,QAANC,EAAZD,EAActf,gCAAI,IAAAuf,OAAd,EAAJA,EAAoBzqB,iBAE3B+c,EAAAA,GAAAA,KAAA,KAAAD,SAAG,yCAEH,QAEPA,UAEDC,EAAAA,GAAAA,KAAA,OAAKF,UAAW,wCAAyC6E,IAAKxnB,OAEhE6iB,EAAAA,GAAAA,KAAC0P,GAAAA,EAAiB,CAChB5P,UAAW,sCACXqC,QAASA,IAAMwL,GAAS,OAAF9Z,QAAE,IAAFA,OAAE,EAAFA,EAAIZ,QAAS,WAM/C,E,qCC9HA,MAsEA,GAtE2DlB,IACzD,MAAM,eAAE8B,EAAE,2BAAEoL,EAAI,QAAEkD,EAAO,UAAErC,KAAcpJ,GAAS3E,EAE5C4d,EAASC,GAAY3Q,EAAMpL,GAC3Bgc,EAASC,GAAS7Q,EAAMpL,GAExB1F,GAAe4V,EAAAA,EAAAA,UAAQ,KAAO,IAADgM,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACjC,IAAIC,EAAO,CAAC,EACoD,IAADC,EAA/D,GAAiB,oCAAX,OAAFzc,QAAE,IAAFA,OAAE,EAAFA,EAAI9W,2BAAyB,OAAJkiB,QAAI,IAAJA,GAAgB,QAAZ8Q,EAAJ9Q,EAAM7a,gDAAU,IAAA2rB,GAAU,QAAVC,EAAhBD,EAAmB,mCAAO,IAAAC,GAA1BA,EAA4B3rB,yBAKlD,GAAiB,8BAAX,OAAFwP,QAAE,IAAFA,OAAE,EAAFA,EAAI9W,2BAAwB,OAAJkiB,QAAI,IAAJA,GAAgB,QAAZgR,EAAJhR,EAAM7a,gDAAU,IAAA6rB,GAAQ,QAARC,EAAhBD,EAAmB,uBAAK,IAAAC,GAAxBA,EAA0B7rB,0BAKtD,GAAiB,8BAAX,OAAFwP,QAAE,IAAFA,OAAE,EAAFA,EAAI9W,4BAAwB,OAAJkiB,QAAI,IAAJA,GAAgB,QAAZkR,EAAJlR,EAAM7a,gDAAU,IAAA+rB,GAAQ,QAARC,EAAhBD,EAAmB,uBAAK,IAAAC,IAAxBA,EAA0B/rB,0BAAM,CAAC,IAADksB,EACjEF,EAAO,CACLG,4BAAM,EACNC,2BAAkB,OAAZ1tB,QAAY,IAAZA,GAAoB,QAARwtB,EAAZxtB,EAAcG,wBAAM,IAAAqtB,OAAR,EAAZA,EAAsBttB,aAEhC,MAVmE,CAAC,IAADytB,EACjEL,EAAO,CACLG,4BAAM,EACNC,2BAAkB,OAAZ1tB,QAAY,IAAZA,GAAoB,QAAR2tB,EAAZ3tB,EAAcG,wBAAM,IAAAwtB,OAAR,EAAZA,EAAsBztB,aAEhC,MATEotB,EAAO,CACLG,4BAAM,EACNC,2BAAkB,OAAZ1tB,QAAY,IAAZA,GAAoB,QAARutB,EAAZvtB,EAAcG,wBAAM,IAAAotB,OAAR,EAAZA,EAAsBrtB,cAahC,OAAI0sB,EAAS,GAAO,OAAF9b,QAAE,IAAFA,GAAAA,EAAItW,uCAAY,OAAFsW,QAAE,IAAFA,OAAE,EAAFA,EAAItW,sCAAS,EACpC,IACF8yB,EACHM,2BAAMhB,EACNc,2BAAM,2EAAed,WAEdA,EAAS,EACX,IACFU,EACHM,2BAAMhB,EACNc,2BAAM,2EAAed,WAGhB,IAAKU,EACd,GACC,CAACV,EAAQ9b,EAAIoL,IAUVwP,EAAMC,KAAW5O,EAAe,OAAJ3R,QAAI,IAAJA,GAAAA,EAAMqiB,yBAAO,oCAAsC,IAE/EI,GAAS7M,EAAAA,EAAAA,UAAQ,IACdlQ,GACN,CAACA,EAAIoL,IAER,OACEY,EAAAA,GAAAA,MAAA,OAAKsC,QAde0O,KACZ,OAAJ1iB,QAAI,IAAJA,GAAAA,EAAMqiB,0BAGVrO,GAAS,EAUoBrC,UAAW2O,KAAS/X,EAAIqJ,SAAA,EACnDC,EAAAA,GAAAA,KAACM,EAAAA,EAAO,CAACC,OAAW,OAAJpS,QAAI,IAAJA,OAAI,EAAJA,EAAMsiB,4BAAU,OAAF5c,QAAE,IAAFA,OAAE,EAAFA,EAAIlW,eAAM,GAAGoiB,UACzCF,EAAAA,GAAAA,MAAC+O,GAAAA,EAAK,CAACC,MAAW,OAAJ1gB,QAAI,IAAJA,OAAI,EAAJA,EAAMwiB,yBAAM7Q,UAAW,qBAAsBqK,OAAQ,CAAC,EAAG,GAAGpK,SAAA,EACxEC,EAAAA,GAAAA,KAAA,OAAKF,UAAW,gBAAiB6E,IAAW,OAANiM,QAAM,IAANA,OAAM,EAANA,EAAQzzB,eAC3C,OAAF0W,QAAE,IAAFA,GAAAA,EAAItW,sCAAyB,KAAb,OAAFsW,QAAE,IAAFA,OAAE,EAAFA,EAAItW,uCACjByiB,EAAAA,GAAAA,KAAA,QAAMF,UAAW,sBAAsBC,SAAE8P,IACvC,WAGR7P,EAAAA,GAAAA,KAAA,KAAGF,UAAW,qBAAqBC,UAAQ,OAAN6Q,QAAM,IAANA,OAAM,EAANA,EAAQxzB,wCAAgB,OAANwzB,QAAM,IAANA,OAAM,EAANA,EAAQ7zB,8BAC3D,EAMJ6yB,GAAcA,CAAC3Q,EAAcpL,KAAoB,IAADid,EACpD,MAAMC,EAAa,OAAJ9R,QAAI,IAAJA,GAAe,QAAX6R,EAAJ7R,EAAMhB,8DAAS,IAAA6S,OAAX,EAAJA,EAAoB,OAAFjd,QAAE,IAAFA,OAAE,EAAFA,EAAI9W,0BAC/B0L,EAAe,OAANsoB,QAAM,IAANA,OAAM,EAANA,EAAQtoB,qCAEvB,GAAU,OAANA,QAAM,IAANA,GAAAA,EAAQrJ,OAAQ,CAClB,MAAM6N,EAAMR,GAAMoH,EAAIoL,EAAKb,uBAErBvI,IAAc,OAAJoJ,QAAI,IAAJA,OAAI,EAAJA,EAAM3Z,2BAAQ,IAAM2H,GAAO,GACrC+jB,EAAiB,OAANvoB,QAAM,IAANA,OAAM,EAANA,EAAS,GAC1B,GAAIuoB,EAAWnb,EAAQ,CACrB,MAAMxY,EAAO2zB,EAAWnb,EAGxB,OADY9T,KAAKC,MAAO3E,EAAOC,EAAAA,GAAS,KAAO,GAEjD,CACE,OAAO,CAEX,CACE,OAAO,CACT,EAGIwyB,GAAWA,CAAC7Q,EAAcpL,KAAoB,IAADod,EAAAC,EACjD,MAAMH,EAAa,OAAJ9R,QAAI,IAAJA,GAAe,QAAXgS,EAAJhS,EAAMhB,8DAAS,IAAAgT,OAAX,EAAJA,EAAoB,OAAFpd,QAAE,IAAFA,OAAE,EAAFA,EAAI9W,0BACrC,QAAU,OAAF8W,QAAE,IAAFA,OAAE,EAAFA,EAAItW,uCAAU,KAAY,OAANwzB,QAAM,IAANA,GAAc,QAARG,EAANH,EAAQtoB,4CAAM,IAAAyoB,OAAR,EAANA,EAAgB9xB,SAAU,EAAE,EAGpDqN,GAAQA,CAACoH,EAAgB3G,KAC7B,IAAIqI,EAAiB1B,EAAG5W,sBAIxB,GAHkB,iBAAd4W,EAAG5W,wBACLsY,EAAW,OAAF1B,QAAE,IAAFA,OAAE,EAAFA,EAAI9W,0BAEXwY,EAAQ,CAGV,OADYrI,EAAKqI,EAEnB,CACE,OAAO,CACT,ECrIW4b,GAAqB,CAChC,CACEpzB,eAAI,2BACJyE,2BAAM,CAAC,eAAM,eAAM,eAAM,eAAM,gBAC/B0nB,MAAO,QAET,CACEnsB,eAAI,2BACJyE,2BAAM,CAAC,eAAM,eAAM,eAAM,gBACzB0nB,MAAO,SAET,CACEnsB,eAAI,qBACJyE,2BAAM,CAAC,eAAM,eAAM,gBACnB0nB,MAAO,QAET,CACEnsB,eAAI,2BACJyE,2BAAM,CAAC,eAAM,2BAAQ,eAAM,gBAC3B0nB,MAAO,WAET,CACEnsB,eAAI,2BACJyE,2BAAM,CAAC,qBAAO,2BAAQ,eAAM,eAAM,eAAM,gBACxC0nB,MAAO,WAET,CACEnsB,eAAI,eACJyE,2BAAM,CAAC,qBAAO,4BACd0nB,MAAO,SCgIX,SA3IA,SAA2BnY,GAAgC,IAAD6Q,EAAAwO,EAAAC,EAAAC,EACxD,MAAM,uCACJC,EAAM,uCACNC,EAAM,mDACNC,EAAQ,2BACRxS,EAAI,iCACJtN,EAAK,2BACLgS,GAGE5R,EAgBJ,OACE8N,EAAAA,GAAAA,MAAA,OAAKC,UAAW,+BAA+BC,SAAA,EAC7CF,EAAAA,GAAAA,MAAA,OAAKC,UAAW,+BAA+BC,SAAA,EAC7CC,EAAAA,GAAAA,KAAA,QAAMF,UAAW,qBAAqBC,SAAC,wBACvCC,EAAAA,GAAAA,KAACqE,GAAAA,EAAK,CAACvE,UAAW,iCAAkCY,KAAM,CAAC,EAAG,IAAK4D,MAAI,EAAAvE,SAChE,OAAJd,QAAI,IAAJA,GAAY,QAAR2D,EAAJ3D,EAAMlW,4CAAM,IAAA6Z,OAAR,EAAJA,EACGtgB,QAAQxB,KACI,OAAJA,QAAI,IAAJA,GAAAA,EAAM4wB,6CAA0B,wBAAX,OAAJ5wB,QAAI,IAAJA,OAAI,EAAJA,EAAM5D,4BAEhC2D,KAAKC,IAEFkf,EAAAA,GAAAA,KAAC2R,GAAgB,CACfxP,QAASA,IAAMoP,EAAOzwB,GAEtBgf,UAAW,kCACX8R,4BAAc,OAARH,QAAQ,IAARA,OAAQ,EAARA,EAAUG,2BAAQ,GACxB/d,eAAI/S,EACJme,2BAAMA,GAJG,OAAJne,QAAI,IAAJA,OAAI,EAAJA,EAAM/D,kCAUvB8iB,EAAAA,GAAAA,MAAA,OAAKC,UAAW,+BAA+BC,SAAA,EAC7CC,EAAAA,GAAAA,KAAA,QAAMF,UAAW,qBAAqBC,SAAC,wBACvCC,EAAAA,GAAAA,KAACqE,GAAAA,EAAK,CAACvE,UAAW,iCAAkCY,KAAM,CAAC,EAAG,IAAK4D,MAAI,EAAAvE,SAChE,OAAJd,QAAI,IAAJA,GAAY,QAARmS,EAAJnS,EAAMlW,4CAAM,IAAAqoB,OAAR,EAAJA,EACG9uB,QAAQxB,KAAc,OAAJA,QAAI,IAAJA,GAAAA,EAAM4wB,6CAA0B,wBAAX,OAAJ5wB,QAAI,IAAJA,OAAI,EAAJA,EAAM5D,4BAC1C2D,KAAKC,IAEFkf,EAAAA,GAAAA,KAAC2R,GAAgB,CACfxP,QAASA,IAAMoP,EAAOzwB,GAEtBgf,UAAW,kCACX8R,4BAAc,OAARH,QAAQ,IAARA,OAAQ,EAARA,EAAUG,2BAAQ,GACxB/d,eAAI/S,EACJme,2BAAMA,GAJG,OAAJne,QAAI,IAAJA,OAAI,EAAJA,EAAM/D,kCAUvB8iB,EAAAA,GAAAA,MAAA,OAAKC,UAAW,+BAA+BC,SAAA,EAC7CC,EAAAA,GAAAA,KAAA,QAAMF,UAAW,qBAAqBC,SAAC,wBACvCC,EAAAA,GAAAA,KAACqE,GAAAA,EAAK,CAACvE,UAAW,iCAAkCY,KAAM,CAAC,EAAG,IAAK4D,MAAI,EAAAvE,SAChE,OAAJd,QAAI,IAAJA,GAAY,QAARoS,EAAJpS,EAAMlW,4CAAM,IAAAsoB,OAAR,EAAJA,EACG/uB,QAAQxB,KAAc,OAAJA,QAAI,IAAJA,GAAAA,EAAM4wB,6CAA0B,wBAAX,OAAJ5wB,QAAI,IAAJA,OAAI,EAAJA,EAAM5D,4BAC1C2D,KAAKC,IAEFkf,EAAAA,GAAAA,KAAC2R,GAAgB,CACfxP,QAASA,IAAMoP,EAAOzwB,GAEtBgf,UAAW,kCACX8R,4BAAc,OAARH,QAAQ,IAARA,OAAQ,EAARA,EAAUG,2BAAQ,GACxB/d,eAAI/S,EACJme,2BAAMA,GAJG,OAAJne,QAAI,IAAJA,OAAI,EAAJA,EAAM/D,kCAUvB8iB,EAAAA,GAAAA,MAAA,OAAKC,UAAW,+BAA+BC,SAAA,EAC7CC,EAAAA,GAAAA,KAAA,QAAMF,UAAW,qBAAqBC,SAAC,kBACvCC,EAAAA,GAAAA,KAACqE,GAAAA,EAAK,CAACvE,UAAW,iCAAkCY,KAAM,CAAC,EAAG,IAAK4D,MAAI,EAAAvE,SAChE,OAAJd,QAAI,IAAJA,GAAY,QAARqS,EAAJrS,EAAMlW,4CAAM,IAAAuoB,OAAR,EAAJA,EACGhvB,QAAQxB,IACR,IAAK6Q,GAAwB,oCAAX,OAAJ7Q,QAAI,IAAJA,OAAI,EAAJA,EAAMrD,0BAClB,OAAO,EAET,GAAmB,8BAAX,OAAJqD,QAAI,IAAJA,OAAI,EAAJA,EAAMrD,0BAAiB,CACzB,MAAMo0B,GAAW,OAAJ/wB,QAAI,IAAJA,OAAI,EAAJA,EAAMpD,kCAAa,OAAJoD,QAAI,IAAJA,OAAI,EAAJA,EAAM/D,0BAClC,OAAW,OAAJ4mB,QAAI,IAAJA,OAAI,EAAJA,EAAMriB,SAASuwB,EACxB,CACA,QAAY,OAAJ/wB,QAAI,IAAJA,GAAAA,EAAM4wB,6CAA0B,kBAAX,OAAJ5wB,QAAI,IAAJA,OAAI,EAAJA,EAAM5D,yBAAa,IAE7C2D,KAAKC,IAEFkf,EAAAA,GAAAA,KAAC2R,GAAgB,CACfxP,QAASA,IAAMoP,EAAOzwB,GAEtBgf,UAAW,kCACX8R,4BAAc,OAARH,QAAQ,IAARA,OAAQ,EAARA,EAAUG,2BAAQ,GACxB/d,eAAI/S,EACJme,2BAAMA,GAJG,OAAJne,QAAI,IAAJA,OAAI,EAAJA,EAAM/D,kCAUvB8iB,EAAAA,GAAAA,MAAA,OAAKC,UAAW,iEAAiEC,SAAA,EAC/EC,EAAAA,GAAAA,KAAA,QAAMF,UAAW,qBAAqBC,SAAC,8BACvCC,EAAAA,GAAAA,KAAC8R,GAAAA,EAAG,CAAChS,UAAW,gCAAiCiS,OAAQ,CAAC,GAAI,GAAGhS,SAC9DoR,GAAOtwB,KAAKC,IAETkf,EAAAA,GAAAA,KAACgS,GAAAA,EAAG,CAACC,KAAM,EAAElS,UAEXC,EAAAA,GAAAA,KAACkS,GAAAA,EAAG,CACFhI,OAAW,OAAJppB,QAAI,IAAJA,OAAI,EAAJA,EAAMopB,QAAS,OACtB/H,QAASA,IAhHPgQ,KAChB,MAAMC,EAAyB,OAAFD,QAAE,IAAFA,OAAE,EAAFA,EAAI3vB,yBAC9B3B,KAAKC,IAAU,IAAD8e,EACb,OAAW,OAAJX,QAAI,IAAJA,GAAY,QAARW,EAAJX,EAAMlW,4CAAM,IAAA6W,OAAR,EAAJA,EAAcrX,MAAMnH,GAAMA,EAAErE,2BAAS+D,MAAU,CAAC,CAAS,IAEjEwB,QAAQxB,GAASA,IACV,OAANsxB,QAAM,IAANA,GAAAA,EAAQhzB,QACVoyB,EAAOY,EACT,EAwG6BC,CAASvxB,GACxBgf,UAAW,qCAAqCC,SAE3C,OAAJjf,QAAI,IAAJA,OAAI,EAAJA,EAAM/C,gBAPY,OAAJ+C,QAAI,IAAJA,OAAI,EAAJA,EAAM/C,uBAiBvC,E,gDCnJA,MAAM,2BAAEu0B,KAASxgB,EAAAA,EAAAA,KAuKjB,SA/JA,SAA8BC,GAC5B,MAAM,MAAEwgB,GAAUC,EAAAA,EAAIC,UAEhB,yDAAEC,EAAS,qEAAElU,EAAW,6CAAEmU,GAAY5gB,GAErC6gB,EAASC,IAAatK,EAAAA,EAAAA,aAEtBuK,EAAWC,IAAexK,EAAAA,EAAAA,aAE1ByK,EAAOC,IAAW1K,EAAAA,EAAAA,aAElB2K,EAAMC,IAAU5K,EAAAA,EAAAA,UAAmB,CAAC,EAAG,EAAG,KAC1C6K,EAAMC,IAAU9K,EAAAA,EAAAA,UAAmB,CAAC,EAAG,EAAG,IAE3CrJ,GAAQC,EAAAA,EAAAA,IAAgBC,IAAK,IAAAC,EAAA,OAAU,OAALD,QAAK,IAALA,GAAW,QAANC,EAALD,EAAOngB,YAAI,IAAAogB,OAAN,EAALA,EAAaC,0CAAO,IAEtDgU,GAAWC,EAAAA,EAAAA,KAEXC,GAAOzP,EAAAA,EAAAA,UAAQ,KACXuO,IAAQ,IAAI9wB,OAAO0d,IAC1B,CAACA,EAAOoT,MAEX1J,EAAAA,EAAAA,YAAU,KACJ8J,EACO,OAALxT,QAAK,IAALA,GAAAA,EAAO9f,OACTyzB,EAAU,gBAEVA,EAAU,iBAGZA,OAAU5uB,GACV8uB,OAAY9uB,GACZgvB,OAAQhvB,GACV,GACC,CAACyuB,EAAWxT,IAEf,MAoBMuU,EAAQ11B,IACZu1B,GAASI,EAAAA,EAAAA,IAAYxU,EAAM5c,QAAQxB,GAASA,EAAK/C,eAAOA,KAAK,EAG/D,OACE8hB,EAAAA,GAAAA,MAACiG,EAAAA,EAAK,CACJC,UAAQ,EACRxF,MAAM,6CACNoT,cAAe,CACbxQ,WACgB,iBAAZyP,EAAmBI,EAAQF,MACxB,OAAJM,QAAI,IAAJA,GAAAA,EAAMh0B,WACF,OAAJ8zB,QAAI,IAAJA,GAAAA,EAAM9zB,SAEX2lB,KAAM2N,EACN1N,SAAUA,IAAMxG,GAAY,GAC5BoV,KApCaC,KAEflB,EADuB,iBAAZC,EAAmBI,EAAQF,EAC1BI,EAAME,EAAK,EAmCrBvS,MAAO,IACPiT,gBAAc,EACdhU,UAAW,0BAA0BC,SAAA,EAErCF,EAAAA,GAAAA,MAACkU,GAAAA,EAAI,CACHjU,UAAW,kCACXoD,KAAK,OACL8Q,UAAWpB,EACXtR,SAAUuR,EAAU9S,SAAA,EAEpBC,EAAAA,GAAAA,KAAC+T,GAAAA,EAAKE,QAAO,CAACC,IAAK,eAAKnU,UACtBC,EAAAA,GAAAA,KAACS,GAAAA,EAAM,CACLE,MAAOqS,EACP1R,SAAU2R,EACVkB,gBAAgB,QAChBC,YAAa,+DAAarU,SAEzBb,EAAMre,KAAKC,IAERkf,EAAAA,GAAAA,KAACS,GAAAA,EAAO4T,OAAM,CAAC1T,MAAO7f,EAAK/C,aAAkB4jB,MAAO7gB,EAAK/C,aAAGgiB,UAC1DF,EAAAA,GAAAA,MAAA,OAAKC,UAAW,0BAA0BC,SAAA,EACxCC,EAAAA,GAAAA,KAAA,QAAAD,SAAOjf,EAAK/C,gBACZiiB,EAAAA,GAAAA,KAAA,QACEmC,QAAUZ,GAtDd+S,EAAC/S,EAAGxjB,KAClBwjB,EAAEgT,kBACFhT,EAAEiT,iBAEFjC,EAAMkC,QAAQ,CACZlU,MAAO,mDAAWxiB,iBAClBmiB,QAAS,mDACTwU,OAAQ,2BACRd,KAAMe,UACJlB,EAAK11B,EAAG,GAEV,EA2CgCu2B,CAAQ/S,EAAGzgB,EAAK/C,cAChC+hB,UAAW,2BAA2BC,SACvC,qBAN+Bjf,EAAK/C,mBATpB,iBAwB7BiiB,EAAAA,GAAAA,KAAC+T,GAAAA,EAAKE,QAAO,CAACC,IAAK,eAAKnU,UACtBC,EAAAA,GAAAA,KAAC4U,GAAAA,EAAI,CAAA7U,UACHC,EAAAA,GAAAA,KAAC4U,GAAAA,EAAK1S,KAAI,CACR2S,MAAO,CACL,CACEC,UAAWA,CAAClP,EAAGjF,EAAOoU,KAChBpU,GACM,OAAJ6S,QAAI,IAAJA,GAAAA,EAAMryB,MAAML,IAAa,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM/C,gBAAO4iB,KACpCoU,EAAS,kFAGbA,GAAU,IAGdhV,UAEFC,EAAAA,GAAAA,KAACgV,GAAAA,EAAK,CACJrU,MAAOmS,EACPsB,YAAY,+DACZ9S,SAAWC,IAAC,IAAA0T,EAAA,OAAKlC,EAAa,OAADxR,QAAC,IAADA,GAAS,QAAR0T,EAAD1T,EAAGnB,cAAM,IAAA6U,OAAR,EAADA,EAAWtU,MAAM,SAnBzB,oBAyB/Bd,EAAAA,GAAAA,MAAA,OAAKC,UAAU,6BAA4BC,SAAA,EACzCC,EAAAA,GAAAA,KAAA,KAAAD,SAAG,kBACHC,EAAAA,GAAAA,KAACkV,GAAAA,EAASC,MAAK,CAACxU,MAAOuS,EAAM5R,SAAWC,GAAM4R,EAAO5R,GAAexB,SACjE0B,MAAMC,KAAK,CAAEtiB,OAAQ,IAAK,CAAC0C,EAAG3C,IAAMA,IAAG0B,KAAKO,IAEzCye,EAAAA,GAAAA,MAACqV,GAAAA,EAAQ,CAACvU,MAAOvf,EAAE2e,SAAA,CAChB3e,EAAE,WADoBA,QAM/B4e,EAAAA,GAAAA,KAAA,KAAAD,SAAG,kBACHC,EAAAA,GAAAA,KAACkV,GAAAA,EAASC,MAAK,CAACxU,MAAOyS,EAAM9R,SAAWC,GAAM8R,EAAO9R,GAAexB,SACjE+B,EAAAA,GAAKjhB,KAAKC,IAEPkf,EAAAA,GAAAA,KAACkV,GAAAA,EAAQ,CAACvU,MAAO7f,EAAK6f,MAAMZ,SACzBjf,EAAK6gB,OAD0B7gB,EAAK6f,eAO/CX,EAAAA,GAAAA,KAAC2M,GAAAA,EAAK,CAAC9J,QAAS,kLAGtB,E,eCtKA,MAAM,2BAAEuS,GAAO,KAAOtjB,EAAAA,EAAAA,KAiGtB,GAvFgDC,IAC9C,MAAMsjB,GAASlW,EAAAA,EAAAA,IAAgBC,IAAK,IAAAC,EAAA,OAAU,OAALD,QAAK,IAALA,GAAW,QAANC,EAALD,EAAOngB,YAAI,IAAAogB,OAAN,EAALA,EAAagW,oCAAM,KACtD,2BAAE1R,EAAI,uCAAE/E,EAAM,uCAAE0W,EAAM,mDAAE3W,GAAa5M,GAEpCwjB,GAAQX,GAAAA,EAAKY,UAEdC,EAAoBA,KACxB5M,YAAW,KACL,OAAJ0M,QAAI,IAAJA,GAAAA,EAAMG,iBAAiBhT,MAAMiT,IAC3B,MAAMC,EAAWj0B,OAAOC,KAAK+zB,GAAQ90B,KAAKT,GACjCu1B,EAAOv1B,KAEhBwe,EAAOgX,EAAS,GAChB,GACD,EAAE,EAcP,OAVAhN,EAAAA,EAAAA,YAAU,KACR,MAAMhmB,EAAM,CAAC,EACb+gB,EAAK9iB,KAAI,CAACC,EAAMmS,KACdrQ,EAAIqQ,GAASnS,GAAQu0B,EAAOpiB,EAAM,IAEhC,OAAJsiB,QAAI,IAAJA,GAAAA,EAAMM,eAAe,IAChBjzB,GACH,GACD,CAAC+gB,KAGF3D,EAAAA,GAAAA,KAAC8V,GAAAA,EAAM,CACLvV,MAAO,2BACPwE,KAAMuQ,EACN7N,QAASA,IAAM9I,GAAS,GACxB6B,UAAU,SACVuV,OAAQ,IACRC,MAAM,EACNlW,UAAW,wCAAwCC,UAEnDC,EAAAA,GAAAA,KAAC4U,GAAAA,EAAI,CAACW,KAAMA,EAAMzV,UAAW,kCAAkCC,SAC5DqV,GAAKv0B,KAAI,CAACo1B,EAAGhjB,KAEV+M,EAAAA,GAAAA,KAAC4U,GAAAA,EAAK1S,KAAI,CAACpC,UAAW,2BAA4BoW,KAAMjjB,EAAM8M,UAC5DC,EAAAA,GAAAA,KAACS,GAAAA,EAAM,CACLX,UAAW,kCACXwB,SAAUmU,EACVU,0BAA0B,EAC1BhC,gBAAgB,QAChBiC,WAAW,EACXC,eAAgB,wCAChBtW,SAEE,OAADkW,QAAC,IAADA,OAAC,EAADA,EAAGK,yBAAKz1B,KAAK6B,IAEVmd,EAAAA,GAAAA,MAACY,GAAAA,EAAO4T,OAAM,CACZ1T,MAAS,OAAFje,QAAE,IAAFA,OAAE,EAAFA,EAAI6zB,yBAEXzW,UAAW,yCACX6B,OACE9B,EAAAA,GAAAA,MAAA,OAAKC,UAAW,wBAAwBC,SAAA,EACtCC,EAAAA,GAAAA,KAAA,OAAKF,UAAW,4BAA6B6E,IAAO,OAAFjiB,QAAE,IAAFA,OAAE,EAAFA,EAAI8zB,4BACtDxW,EAAAA,GAAAA,KAAA,QAAMF,UAAW,6BAA6BC,SAAI,OAAFrd,QAAE,IAAFA,OAAE,EAAFA,EAAI6zB,8BAEvDxW,SAAA,EAEDC,EAAAA,GAAAA,KAAA,OAAKF,UAAU,2CAA0CC,UACvDC,EAAAA,GAAAA,KAAA,OACEF,UAAW,sCACX6E,IAAO,OAAFjiB,QAAE,IAAFA,OAAE,EAAFA,EAAI8zB,8BAGbxW,EAAAA,GAAAA,KAACM,EAAAA,EAAO,CAACC,OAAS,OAAF7d,QAAE,IAAFA,OAAE,EAAFA,EAAI+zB,2BAAQ,GAAIjW,UAAU,QAAOT,UAC/CC,EAAAA,GAAAA,KAAA,QAAMF,UAAW,uCAAuCC,SACnD,OAAFrd,QAAE,IAAFA,OAAE,EAAFA,EAAI6zB,+BAjBF,OAAF7zB,QAAE,IAAFA,OAAE,EAAFA,EAAI6zB,+BAdiDtjB,EAAQ,QA0C3E,EC5Cb,SAxCA,SAA4BlB,GAC1B,MAAM,mDACJ2kB,EAAQ,mDACRjF,EAAQ,2BACRxS,EAAI,iCACJtN,EAAK,2BACLgS,EAAI,2BACJgT,EAAI,mDACJC,EAAQ,2BACRC,GACE9kB,EAUJ,OACEiO,EAAAA,GAAAA,KAAC8V,GAAAA,EAAM,CACLvV,MAAM,2BACNC,UAAU,SACVuE,KAAM6R,EACNnP,QAASoP,EACTd,OAAQ,IAAIhW,UAEZC,EAAAA,GAAAA,KAAC8W,GAAiB,CAChBvF,uCAjBUzwB,IACd41B,EAAS,CAAC51B,GAAW,OAAJ61B,QAAI,IAAJA,OAAI,EAAJA,EAAMI,aAAQ,OAAJJ,QAAI,IAAJA,OAAI,EAAJA,EAAMjqB,aAAG,EAiBhC8kB,uCAdU1wB,IACd41B,EAAS51B,EAAU,OAAJ61B,QAAI,IAAJA,OAAI,EAAJA,EAAMI,aAAQ,OAAJJ,QAAI,IAAJA,OAAI,EAAJA,EAAMjqB,aAAG,EAc9B+kB,mDAAUA,EACVxS,2BAAMA,EACNtN,iCAAOA,EACPgS,2BAAMA,KAId,GCnBM,2BAAEqT,KAASllB,EAAAA,EAAAA,KAEXmlB,GAAS,CACb,EAAG,EACH,EAAG,IACH,EAAG,KACH,EAAG,MACH,EAAG,MACH,EAAG,OAQL,SAASC,GAAenlB,GAA6B,IAADolB,EAAAC,EAAAC,EAClD,MAAM,MAAE9E,GAAUC,EAAAA,EAAIC,UAChB,6CAAE6E,EAAO,SAAEnU,GAAapR,GACvBkT,EAASsS,IAAchP,EAAAA,EAAAA,UAAqB,KAE5C6D,EAASoL,IAAajP,EAAAA,EAAAA,UAAmB,CAC9CsE,eAAI,EACJvF,eAAI,EACJwF,uCAAQ,EACRvF,mDAAU,MAGLtI,EAAMwY,IAAUlP,EAAAA,EAAAA,UAAiB,CACtCxe,uCAAQ,CACNC,2BAAM,CAAEC,eAAI,IAAKE,eAAI,MAEvB7E,2BAAM,EACNlB,2CAAY,CAAC,EACbc,2CAAY,CAAC,EACbiN,uCAAQ,eACRC,uCAAQ,CAAC,EACTrJ,uCAAQ,IAAIT,GACZmK,uCAAQ,GACRwL,yDAAW,CAAC,EACZC,0CAAW,CAAC,EACZE,wBAAQ,CAAC,KAIJsZ,EAAgBC,IAAqBpP,EAAAA,EAAAA,WAAkB,IAEvDhK,EAAOqZ,IAAYrP,EAAAA,EAAAA,UAAuB,KAC1CmK,EAAWlU,IAAe+J,EAAAA,EAAAA,WAAkB,GAE7CsP,GAA4D,QAApDV,GAAAhY,EAAAA,EAAAA,IAAgBC,IAAK,IAAAC,EAAAyY,EAAA,OAAU,OAAL1Y,QAAK,IAALA,GAAW,QAANC,EAALD,EAAOngB,YAAI,IAAAogB,GAAM,QAANyY,EAAXzY,EAAa0Y,gCAAI,IAAAD,OAAZ,EAALA,EAAmBE,oCAAM,WAAC,IAAAb,OAAA,EAApDA,EAAsD/zB,2BAAQ,EACtE60B,GAAO9Y,EAAAA,EAAAA,IAAgBC,IAAK,IAAA8Y,EAAA,OAAU,OAAL9Y,QAAK,IAALA,GAAW,QAAN8Y,EAAL9Y,EAAOngB,YAAI,IAAAi5B,OAAN,EAALA,EAAa5lB,wBAAI,KAAK,EACvDX,IACgD,QAAnDylB,GAACjY,EAAAA,EAAAA,IAAgBC,IAAK,IAAA+Y,EAAAC,EAAA,OAAU,OAALhZ,QAAK,IAALA,GAAW,QAAN+Y,EAAL/Y,EAAOngB,YAAI,IAAAk5B,GAAM,QAANC,EAAXD,EAAaJ,gCAAI,IAAAK,OAAZ,EAALA,EAAmBC,wBAAI,WAAC,IAAAjB,IAAlDA,EAAoDkB,kCAAS,GAE1Dl1B,EAAM0b,IAAUyJ,EAAAA,EAAAA,UAAiB,IACjC1V,EAAOgM,IAAW0J,EAAAA,EAAAA,UAAiB,IACnCjW,EAAM0M,IAAUuJ,EAAAA,EAAAA,UAAiB,IACjCvU,EAAM+K,IAAUwJ,EAAAA,EAAAA,UAAqC,CAC1Dte,eAAI,IACJE,eAAI,MAIAmV,GAAUH,EAAAA,EAAAA,IAAgBC,IAAK,IAAAmZ,EAAA,OAAU,OAALnZ,QAAK,IAALA,GAAW,QAANmZ,EAALnZ,EAAOngB,YAAI,IAAAs5B,OAAN,EAALA,EAAajZ,0CAAO,IAExD3L,GAAMoQ,EAAAA,EAAAA,UAAQ,IACXkT,GAAO7zB,IAAS,GACtB,CAACA,IAGEo1B,GAAS,EAGTC,GAAiBtZ,EAAAA,EAAAA,IAAgBC,IAAK,IAAAsZ,EAAA,OAAU,OAALtZ,QAAK,IAALA,GAAW,QAANsZ,EAALtZ,EAAOngB,YAAI,IAAAy5B,OAAN,EAALA,EAAarD,oCAAM,KAC7D1R,EAAM/E,IAAU2J,EAAAA,EAAAA,UAAmB,KACnC+M,EAAQ3W,KAAY4J,EAAAA,EAAAA,WAAkB,IACtCqF,GAAUE,KAAcvF,EAAAA,EAAAA,UAAmB,KAC3CsF,GAAU8K,KAAcpQ,EAAAA,EAAAA,UAAiB,IAGzCqO,GAAUgC,KAAcrQ,EAAAA,EAAAA,WAAkB,IAC1CoO,GAAMkC,KAAUtQ,EAAAA,EAAAA,UAA6B,CAAEwO,eAAI,GAAIrqB,eAAI,IAE5D4mB,IAAWC,EAAAA,EAAAA,MAEjB3K,EAAAA,EAAAA,YAAU,KACJ8O,GAEF9Y,EAAO6Z,GACP3Z,GAAOpL,EAAAA,EAAAA,IAAOmkB,IACdhZ,EAAQ,GACRG,EAAOiZ,GACPlZ,EAAO,CAAE9U,eAAI,IAAKE,eAAI,QAEtBotB,EAAW,IACXI,GAAkB,GAClBC,EAAS,IACTJ,EAAU,CAAE3K,eAAI,EAAGvF,eAAI,EAAGwF,uCAAQ,EAAGvF,mDAAU,KACjD,GACC,CAACmQ,EAAgBe,EAAgBZ,KAEpCjP,EAAAA,EAAAA,YAAU,KACM8O,GACZoB,GAAU,CAAC,EACb,GACC,CAACpB,EAAgBnZ,EAAOia,EAAQlmB,EAAM0B,EAAML,EAAKd,EAAO8Q,IAE3D,MAAMmV,GAAa/mB,IACjB,MAAM,2BAAEgnB,EAAOplB,EAAG,2BAAEqlB,EAAO1mB,EAAI,2BAAE2mB,GAAO,EAAI,eAAEv2B,GAAOqP,EAC/C7S,EAAMoE,GAAK,CACfyJ,2BAAMwR,EAAM1d,KAAKC,GAAa,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM/D,4BAAS,GACzC4W,0BAAc1P,IAAT80B,EAAqBA,EAAOplB,EACjCrB,gCAAerO,IAAT+0B,EAAqBA,EAAO1mB,EAClC5P,eAAIA,GAAMihB,EACVhS,mCACAkB,mCACAmB,gCAGI,2BACJmK,EACA/Z,2CAAY80B,EACZh0B,2CAAYi0B,EACZpvB,uCAAQqvB,KACL1iB,GACDxX,EAWJ,OAVI+5B,IACF1B,EAAWpZ,GACXkb,GAAMlb,EAAU,OAAJzH,QAAI,IAAJA,OAAI,EAAJA,EAAMpR,0BAClBmyB,EAAO,CACLrzB,2CAAY80B,EACZh0B,2CAAYi0B,EACZpvB,uCAAQqvB,KACL1iB,KAGA,CAAEyH,gCAASzH,EAAM,EAIpB2iB,GAAQA,CAACp6B,EAAkBqG,KAC/B,MAAMg0B,EAAat6B,EAAYC,IACzB,eAAE4tB,EAAE,mDAAEtF,EAAQ,uCAAEuF,EAAM,eAAExF,GAAOgM,IACnCiG,EAAAA,EAAAA,GAAK,CACHC,mDAAUF,EACVG,uCAAQn0B,EAAOhI,EAAAA,GACfo8B,uCAAQ/V,KAGZ6T,EAAU,CACR3K,eAAIvnB,EAAO,EAAIunB,EAAK,EACpBvF,eAAIhiB,EAAO,EAAIgiB,EAAK,EACpBwF,uCAAQA,EACRvF,mDAAUA,GACV,EAIEkK,IAAW1N,EAAAA,EAAAA,UAAQ,KACvB,MAAM7kB,EAAgC,GAEhCy6B,EAAgB,OAALpb,QAAK,IAALA,OAAK,EAALA,EAAOhW,MAAMzH,GAAwB,kBAAX,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM/D,4BAwB7C,OAvBAwhB,EAAM1d,KAAI,CAACC,EAAMmS,KAAW,IAAD2mB,EACzB,MACM36B,EAAO,IACR6B,KAFkB,OAAJme,QAAI,IAAJA,GAAY,QAAR2a,EAAJ3a,EAAMxM,4CAAM,IAAAmnB,OAAR,EAAJA,EAAe3mB,IAMlC,GAAc,IAAVA,EACF/T,EAAO,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKE,QAAU,CAAC,IAAKH,EAAMgU,MAAOA,GAAS,QAC1C,CACL/T,GAAO,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKE,QAAS,GAAK,IAAKF,GAAO,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKE,QAAS,IAAM,GAAK,IAAKH,EAAMgU,MAAOA,GAAS,KAEnE0mB,EACE,kBAAX,OAAJ16B,QAAI,IAAJA,OAAI,EAAJA,EAAMlC,0BACS,wBAAX,OAAJkC,QAAI,IAAJA,OAAI,EAAJA,EAAMlC,6BAGRmC,EAAO,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKE,QAAU,GAEvB,CACA,OAAOH,CAAI,IAGN,CAAE46B,2BAAM36B,EAAK0yB,2BAAMrT,EAAO,GAChC,CAACA,EAAOU,IAuEL0O,GAAU1a,IACd,MAAM6mB,EAAW,IAAKvb,GAAS,IAC/Bub,EAASC,OAAO9mB,EAAO,GACvB2kB,EAASkC,EAAS,GAmIpBlR,EAAAA,EAAAA,YAAU,KAAO,IAADoR,EAEd,MAAMC,EAAO,CAAC,GACZ3a,GAAW,IAAI3c,SAAS7B,IACxBm5B,EAAKn5B,EAAK/C,cAAM,IACX+C,EACJ,IAES,QAAZk5B,EAAAE,oBAAY,IAAAF,GAAZA,EAAcG,QAAQnD,GAAK9X,+BAAOkb,KAAKC,UAAUJ,GAAM,GACtD,CAAC3a,EAASqE,IAOb,OACE9D,EAAAA,GAAAA,MAAA6E,GAAAA,SAAA,CAAA3E,SAAA,EACEC,EAAAA,GAAAA,KAACgD,EAAAA,GAAM,CACLC,QAAM,EACNvC,KAAK,QACLyC,SAAUA,EACVhB,QAASA,KACPwV,GAAkB,GAClBL,GAAWA,GAAS,EACpBvX,SACH,8BAGDF,EAAAA,GAAAA,MAACiG,EAAAA,EAAK,CACJhG,UAAU,uCACVwa,cAAc,EACdzZ,MAAO,OACPN,OACEP,EAAAA,GAAAA,KAACua,GAAgB,CACfhc,MAAOA,EACP5M,iCAAOA,EACP6M,qEAAaA,EACbC,2BAAMA,IAAMmZ,EAAS,IACrBlZ,uCAAStc,GAAOw1B,EAASx1B,GACzBwc,uCAAQA,EACRD,mDAAUA,GACVvb,2BAAMA,EACN0b,uCAAQA,EACRjM,iCAAOA,EACPgM,6CAASA,EACTvM,2BAAMA,EACN0M,uCAAQA,EACRC,2BAAMA,EACNjL,2BAAMA,EACN+K,uCAAQA,IAGZgH,UAAQ,EACRC,OAAQ,KACRjB,KAAM2S,EACN1S,SAAUA,IAAM2S,GAAkB,GAClC7D,gBAAc,EAAA/T,SAAA,EAEdF,EAAAA,GAAAA,MAAA,OAAKC,UAAW,0BAA0BC,SAAA,EAExCC,EAAAA,GAAAA,KAACwa,GAAS,CACRvb,2BAAMA,EACN2S,2BAAc,OAARH,SAAQ,IAARA,QAAQ,EAARA,GAAUG,yBAChBzF,2BAAMlH,EACNmH,8BAASA,EACTzI,2BAAMA,KAGR3D,EAAAA,GAAAA,KAAA,OAAKF,UAAW,8BAA8BC,SACnC,OAAR0R,SAAQ,IAARA,IAAc,QAAN4F,EAAR5F,GAAUoI,gCAAI,IAAAxC,GAAdA,EAAgBj4B,SACN,OAARqyB,SAAQ,IAARA,QAAQ,EAARA,GAAUoI,2BAAQ,IAAIh5B,KAAI,CAAC45B,EAAIxnB,IACrB,OAAFwnB,QAAE,IAAFA,GAAAA,EAAIr7B,QACT4gB,EAAAA,GAAAA,KAAA,OAAKF,UAAW,+CAA+CC,UAC7DF,EAAAA,GAAAA,MAAC6a,EAAAA,cAAa,CACZC,KAAMF,EAAG55B,KAAK1B,GACZwC,OAAOi5B,OAAOz7B,EAAG,CAAE6sB,GAAI,GAAI,OAAD7sB,QAAC,IAADA,OAAC,EAADA,EAAGpC,4BAAQkW,KAAU,OAAD9T,QAAC,IAADA,OAAC,EAADA,EAAG8T,YAEnD4nB,QAAUtZ,IAxRfuZ,EAACC,EAAS7X,KACvB,GAAY,sBAARA,EAAe,CAEjB,MAAM8X,EAAWD,EAAQ/S,QAAO,SAAUzd,EAAK3H,GAC7C,OAAOb,KAAKwI,IAAIA,EAAK3H,EAAIqQ,MAC3B,GAAGgoB,KAEGC,EAAWH,EAAQ/S,QAAO,SAAUzd,EAAK3H,GAC7C,OAAOb,KAAKuI,IAAIC,EAAK3H,EAAIqQ,MAC3B,GAAGkoB,OAAOC,mBAEJtB,EAAWvb,EAAM1d,KAAI,CAACC,EAAMmS,IAC5BA,EAAQ+nB,GAAY/nB,EAAQioB,EACvB,IAAKp6B,GAELi6B,EAAQ9nB,EAAQ+nB,KAI3BpD,EAASkC,EACX,MAAO,GAAa,yCAAT5W,EAAmB,CAC5B,MAAMhkB,EAAoB,GAC1B67B,EAAQp4B,SAAS7B,IACfA,EAAK6B,SAASvB,IACZ,GAAIA,EAAErE,yBAAM,CAAC,IAAD6iB,EACV,MAAM5I,EAAa,OAAJiI,QAAI,IAAJA,GAAY,QAARW,EAAJX,EAAMlW,4CAAM,IAAA6W,OAAR,EAAJA,EAAcrX,MAAMqT,IAAO,OAADA,QAAC,IAADA,OAAC,EAADA,EAAG7e,4BAASqE,EAAErE,2BACnDia,GACF9X,EAAIoF,KAAK0S,EAEb,IACA,IAEJ4gB,EAAS14B,EACX,GAwPoB47B,CAAOvZ,EAAG,qBAAM,EAElBzB,UAAU,oCACVub,UAAW,IACXC,UAAW,sCAAsCvb,SAAA,EAE/C0a,GAAM,IAAI55B,KAAKC,IAEbkf,EAAAA,GAAAA,KAACub,GAAc,CACb1nB,eAAI/S,EACJ6sB,uCAAQA,GAER1O,2BAAMA,EACN2O,+BAAUA,GACVC,+BAAUA,GACVC,2CAAYA,CAACvM,EAAG7U,KACdohB,GAAWvM,GACXoX,GAAWjsB,EAAG,EAEhBqhB,uCAASxM,GAvFpBwM,EAAC9uB,EAAMgU,KACpB4lB,GAAO,CAAE9B,eAAQ,OAAJ93B,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,IAAKsM,eAAIuG,IAC5B2lB,IAAW,EAAK,EAqFuB7K,CAAOxM,EAAO,OAAJzgB,QAAI,IAAJA,OAAI,EAAJA,EAAMmS,QAR1B,GAAO,OAAJnS,QAAI,IAAJA,OAAI,EAAJA,EAAM/D,4BAAQkW,KAAa,OAAJnS,QAAI,IAAJA,OAAI,EAAJA,EAAMmS,YAY3C4M,EAAAA,GAAAA,MAAA,OAAKC,UAAW,qBAAqBC,SAAA,EACnCC,EAAAA,GAAAA,KAACM,EAAAA,EAAO,CAACC,MAAM,yDAAWR,UACxBC,EAAAA,GAAAA,KAACwb,EAAAA,EAAa,CACZ1b,UAAW,yBACXc,MAAO,CAAEsJ,MAAO,WAChB/H,QAASA,IAlNhBsY,KACjBlI,EAAMkC,QAAQ,CACZlU,MAAO,iFACPqT,IAAAA,GAEE,MAAMsH,EAAWT,EAAGzS,QAAO,SAAUzd,EAAK3H,GACxC,OAAOb,KAAKuI,IAAIC,EAAK3H,EAAIqQ,MAC3B,GAAGkoB,OAAOC,mBAEJtB,EAAWvb,EAAMjc,QAAO,CAACxB,EAAMmS,IAC5BA,GAASioB,IAGlBtD,EAASkC,EACX,GACA,EAmMqC2B,CAAUhB,QAG7Bza,EAAAA,GAAAA,KAACM,EAAAA,EAAO,CAACC,MAAM,mDAAUR,UACvBC,EAAAA,GAAAA,KAAC0b,EAAAA,EAAY,CACX5b,UAAW,yBACXqC,QAASA,IAhPlBsY,KACf,IAAIX,EAAyB,GAC7BA,EAAW,IAAKvb,GAAS,IAAK/c,OAAOi5B,GACrC7C,EAASkC,EAAS,EA6OqB6B,CAAQlB,QAG3Bza,EAAAA,GAAAA,KAACM,EAAAA,EAAO,CAACC,MAAM,2BAAMR,UACnBC,EAAAA,GAAAA,KAAC4b,EAAAA,EAAc,CACb9b,UAAW,yBACXqC,QAASA,IA/OpBsY,KACb,MAAMO,EAAWP,EAAGzS,QAAO,SAAUzd,EAAK3H,GACxC,OAAOb,KAAKwI,IAAIA,EAAK3H,EAAIqQ,MAC3B,GAAGgoB,KAEGC,EAAWT,EAAGzS,QAAO,SAAUzd,EAAK3H,GACxC,OAAOb,KAAKuI,IAAIC,EAAK3H,EAAIqQ,MAC3B,GAAGkoB,OAAOC,mBAEJtB,EAAWvb,EAAMjc,QAAO,CAACxB,EAAMmS,IAC5BA,EAAQ+nB,GAAY/nB,EAAQioB,IAGrCtD,EAASkC,EAAS,EAkOqB+B,CAAMpB,cA9CsC,GAAGxnB,MAqDxE+M,EAAAA,GAAAA,KAAA,aAIJA,EAAAA,GAAAA,KAAA,KAAGF,UAAW,8BAA8BC,SAAC,iHAKnDC,EAAAA,GAAAA,KAAC8W,GAAiB,CAChBvF,uCA9SQzwB,IACd,IAAIg5B,EAAyB,GAC7BA,EAAW,IAAKvb,GAAS,GAAKzd,GAC9B82B,EAASkC,EAAS,EA4SZtI,uCAtRQ1wB,IACd,MAAMg7B,EAAY,IAAIh7B,GAChBg5B,EAAW,IAAKvb,GAAS,MAAQud,GACvClE,EAASkC,EAAS,EAoRZrI,mDAAUA,GACVxS,2BAAMA,EACNtN,iCAAOA,EACPgS,2BAAMA,KAGR3D,EAAAA,GAAAA,KAAC+b,GAAoB,CACnBrJ,yDAAWA,EACXlU,qEAAaA,EACbmU,6CAvOOqJ,CAACj+B,EAAIm1B,EAAME,KAExB,MAAM6I,EAAY,OAAJ7I,QAAI,IAAJA,GAAAA,EAAMh0B,OAASg0B,EAAO,CAAC,EAAG,EAAG,EAAG,GACxC8I,EAAY,OAAJhJ,QAAI,IAAJA,GAAAA,EAAM9zB,OAAS8zB,EAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAE9CiJ,EAAiB,GAEjBC,EAAc,GAEpBF,EAAMv5B,SAAS05B,IACb,MAAMC,EAAQrF,GAAOoF,GACrBJ,EAAMt5B,SAAS45B,IAEb,MAAMC,EAAO1D,GAAU,CACrBC,2BAAMoC,OAAOmB,GACbtD,2BAAMmC,OAAOoB,GACbtD,4BAAM,EACNv2B,eAAI,IAAIihB,KAEJ8Y,EAAW,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMre,yBACbhM,EAAa,OAAJqqB,QAAI,IAAJA,OAAI,EAAJA,EAAMrqB,qCAEfuqB,GAAU,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAMl3B,0BAAOhI,EAAAA,GACnBq/B,EAAS39B,EAAYy9B,GACZ,iBAAXtqB,EACFgqB,EAAO73B,KAAK,CACVs4B,uCAAQP,EACRQ,uCAAQN,EACRO,2BAAMJ,EACNK,2BAAMJ,IAGRP,EAAK93B,KAAK,CACR+3B,iBACAE,kBAEJ,GACA,IAGI,OAAJH,QAAI,IAAJA,GAAAA,EAAMh9B,QACRyjB,EAAAA,GAAQE,MACN,+JAA6BqZ,EAC1Bv7B,KAAKC,GACG,sBAAOA,EAAKu7B,uCAASv7B,EAAKy7B,kBAElC96B,KAAK,aAIZ,MAAMe,EAAO+b,EAAM1d,KAAKC,GAASA,EAAK/D,2BAEhCigC,EAAgB,OAAP1d,QAAO,IAAPA,GAAAA,EAASne,MAAML,IAAa,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM/C,gBAAOA,IAChDuhB,EAAQze,KAAKC,GACJA,EAAK/C,eAAOA,EACf,CACEA,iBACAk/B,eAAIl/B,EACJ+d,eAAI,qBACJohB,eAAI,qBACJC,2BAAMhB,EACNz5B,eAAIihB,EACJnhB,8BAEF1B,KAELwe,GAAW,IAAI9d,OAAO,CACrB,CACEzD,iBACAk/B,eAAIl/B,EACJ+d,eAAI,qBACJohB,eAAI,qBACJC,2BAAMhB,EACNz5B,eAAIihB,EACJnhB,gCAIR8wB,IAASI,EAAAA,EAAAA,IAAYsJ,IAErBxe,GAAY,GACZqE,EAAAA,GAAQC,QAAQ,2BAAO,KAyJnB9C,EAAAA,GAAAA,KAACod,GAAa,CACZzZ,2BAAMA,EACN/E,uCAAQA,EACR0W,uCAAQA,EACR3W,mDAAUA,MAGZqB,EAAAA,GAAAA,KAACqd,GAAkB,CACjB3G,mDA9TSA,CAAC51B,EAAoBw8B,EAAMC,KAC1C,IAAIzD,EAAyB,IAAKvb,GAAS,IACvCif,EAAyB,GAEhB,6BAATF,GAEFE,EAAW1D,EAAS2D,MAAM,EAAGF,GAAM/7B,OAAOV,EAAMg5B,EAAS2D,MAAMF,IAC/D1E,GAAO,IAAKlC,GAAMjqB,eAAIiqB,GAAKjqB,aAAK5L,EAAK1B,UAGrCo+B,EAAW1D,EACR2D,MAAM,EAAGF,EAAOz8B,EAAK1B,QACrBoC,OAAOV,EAAMg5B,EAAS2D,MAAMF,EAAOz8B,EAAK1B,SAG7C06B,EAAW,IAAI0D,GACf5F,EAASkC,EAAS,EA+SZrI,mDAAUA,GACVxS,2BAAMA,EACNtN,iCAAOA,EACPgS,2BAAMA,EACNgT,2BAAMA,GACNC,mDAAUA,GACVC,2BAAMA,KACJ+B,IAAW,GACXC,GAAO,CAAE9B,eAAI,GAAIrqB,eAAI,GAAI,SAMrC,CAEA,SAAegxB,EAAAA,KAAWxG,G","sources":["功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/constant/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/constant/skill.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/utils.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/utils.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/通用类/技能统一类.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/断脉/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/通用类/有CD技能通用类.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/截阳/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/引窍/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/破穴/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/雾刃飞光/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/骤风令/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/劈风令/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/骤风劈风/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/抟风令/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/抟风令断/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/雪重花满/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/朔风扬尘一/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/朔风扬尘二/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/风流云散/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/一阳来复/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/经脉循行/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/触发橙武/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/换行/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/main.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/constant/快速导入默认循环/模拟器_一阳来复_1延迟.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/constant/快速导入默认循环.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/components/CycleModalHeader/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/components/StatusBar/energy/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/components/StatusBar/buff/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/components/StatusBar/dpsRes/components/BattleLogModal.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/components/StatusBar/dpsRes/components/SkillCountModal.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/components/StatusBar/dpsRes/components/BuffCountModal/util.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/components/StatusBar/dpsRes/components/BuffCountModal/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/components/StatusBar/dpsRes/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/components/StatusBar/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/components/CycleSkillItem/BuffItem.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/components/CycleSkillItem/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/components/AddCycleSkillBtns/AddCycleSkillBtn.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/components/AddCycleSkillBtns/快捷添加.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/components/AddCycleSkillBtns/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/components/SaveCustomCycleModal/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/components/QixueSetModal/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/components/AddCycleSkillModal/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/index.tsx"],"sourcesContent":["// BUFF持续最大时间,视为永久\nexport const BUFF持续最大时间 = 99999999999\n\nexport const 基础GCD帧 = 24\n","import { Buff枚举, 循环基础技能数据类型, 日志类型 } from '../simulator/type'\nimport { 基础GCD帧 } from '.'\nimport { 每秒郭氏帧 } from '@/数据/常量'\n\n// 技能图标引入\n\nconst 循环模拟技能基础数据: 循环基础技能数据类型[] = [\n  {\n    技能名称: '断脉',\n    技能释放后添加GCD: 基础GCD帧,\n    技能GCD组: '公共',\n    技能类型: '一阳指',\n    图标: 'https://icon.jx3box.com/icon/22816.png',\n    技能原始名称: '断脉',\n  },\n  {\n    技能名称: '截阳',\n    技能释放后添加GCD: 基础GCD帧,\n    技能CD: 每秒郭氏帧 * 5, // 5秒CD\n    技能GCD组: '公共',\n    图标: 'https://icon.jx3box.com/icon/22817.png',\n    技能类型: '一阳指',\n    技能原始名称: '截阳',\n    最大充能层数: 3,\n    充能层数: 3,\n  },\n  {\n    技能名称: '引窍',\n    技能释放后添加GCD: 基础GCD帧,\n    技能CD: 每秒郭氏帧 * (9 - 2), //秘籍-2\n    技能GCD组: '公共',\n    技能类型: '一阳指',\n    最大充能层数: 2,\n    图标: 'https://icon.jx3box.com/icon/22820.png',\n    技能原始名称: '引窍',\n  },\n  {\n    技能名称: '破穴',\n    技能释放后添加GCD: 基础GCD帧,\n    技能CD: 每秒郭氏帧 * 12,\n    技能GCD组: '公共',\n    技能类型: '一阳指',\n    图标: 'https://icon.jx3box.com/icon/22819.png',\n    技能原始名称: '破穴',\n  },\n  // {\n  //   技能名称: '雾海萦空',\n  //   技能释放后添加GCD: 基础GCD帧,\n  //   技能CD: 每秒郭氏帧 * 20,\n  //   技能GCD组: '公共',\n  //   技能类型: '空蒙扇',\n  //   图标: 'https://icon.jx3box.com/icon/22811.png',\n  //   技能原始名称: '雾海萦空',\n  // },\n  // {\n  //   技能名称: '雾刃飞光',\n  //   // 技能释放后添加GCD: 基础GCD帧,\n  //   技能释放后添加GCD: 24 - 9,\n  //   技能CD: 每秒郭氏帧 * 20,\n  //   技能GCD组: '自身',\n  //   技能类型: '空蒙扇',\n  //   图标: 'https://icon.jx3box.com/icon/22812.png',\n  //   技能原始名称: '雾刃飞光',\n  // },\n  {\n    技能名称: '骤风令',\n    技能释放后添加GCD: 基础GCD帧 - 8,\n    技能CD: 每秒郭氏帧 * 25,\n    技能GCD组: '公共',\n    技能类型: '聘风令',\n    图标: 'https://icon.jx3box.com/icon/22815.png',\n    技能原始名称: '骤风令',\n  },\n  {\n    技能名称: '劈风令',\n    技能释放后添加GCD: 基础GCD帧,\n    技能CD: 每秒郭氏帧 * 8,\n    技能GCD组: '公共',\n    技能类型: '聘风令',\n    图标: 'https://icon.jx3box.com/icon/22813.png',\n    技能原始名称: '劈风令',\n    最大充能层数: 2,\n    充能层数: 2,\n  },\n  {\n    技能名称: '骤风劈风',\n    技能释放后添加GCD: 基础GCD帧,\n    技能GCD组: '自身',\n    技能类型: '聘风令',\n    图标: 'https://icon.jx3box.com/icon/22813.png',\n    技能原始名称: '骤风劈风',\n  },\n  {\n    技能名称: '抟风令',\n    技能释放后添加GCD: 基础GCD帧,\n    技能CD: 每秒郭氏帧 * 55,\n    技能GCD组: '公共',\n    技能类型: '聘风令',\n    图标: 'https://icon.jx3box.com/icon/22814.png',\n    技能原始名称: '抟风令',\n  },\n  {\n    技能名称: '风流云散',\n    技能释放后添加GCD: 基础GCD帧,\n    技能CD: 每秒郭氏帧 * 26,\n    显示类型: '奇穴技能',\n    依赖奇穴名: '出岫',\n    技能GCD组: '自身',\n    技能类型: '其他',\n    图标: 'https://icon.jx3box.com/icon/22807.png',\n    技能原始名称: '风流云散',\n  },\n  {\n    技能名称: '抟风令断',\n    技能释放后添加GCD: 基础GCD帧,\n    技能CD: 每秒郭氏帧 * 55,\n    技能GCD组: '公共',\n    技能类型: '聘风令',\n    图标: 'https://icon.jx3box.com/icon/22814.png',\n    技能原始名称: '抟风令断',\n  },\n  {\n    技能名称: '朔风扬尘一',\n    显示类型: '奇穴技能',\n    依赖奇穴名: '朔风扬尘',\n    技能释放后添加GCD: 基础GCD帧 - 10,\n    技能CD: 每秒郭氏帧 * 40,\n    技能GCD组: '公共',\n    技能类型: '其他',\n    图标: 'https://icon.jx3box.com/icon/22874.png',\n  },\n  {\n    技能名称: '朔风扬尘二',\n    显示类型: '奇穴技能',\n    依赖奇穴名: '朔风扬尘',\n    技能释放后添加GCD: 基础GCD帧 - 10,\n    技能GCD组: '公共',\n    技能类型: '其他',\n    图标: 'https://icon.jx3box.com/icon/22874.png',\n  },\n  {\n    技能名称: '一阳来复',\n    技能释放后添加GCD: 基础GCD帧,\n    依赖奇穴名: '一阳来复',\n    技能CD: 每秒郭氏帧 * 25,\n    技能GCD组: '自身',\n    显示类型: '奇穴技能',\n    技能类型: '其他',\n    图标: 'https://icon.jx3box.com/icon/22876.png',\n    技能原始名称: '一阳来复',\n  },\n  {\n    技能名称: '触发橙武',\n    技能释放后添加GCD: 0,\n    技能CD: 每秒郭氏帧 * 30,\n    技能GCD组: '自身',\n    技能类型: '其他',\n    显示类型: '大橙武模拟',\n    图标: 'https://icon.jx3box.com/icon/2589.png',\n  },\n  {\n    技能名称: '换行',\n    技能释放后添加GCD: 0,\n    技能CD: 0,\n    技能GCD组: '自身',\n    技能类型: '其他',\n    图标: 'https://icon.jx3box.com/icon/6932.png',\n    说明: '插入换行将只以”换行“作为展示换行。 若无\"换行\"则默认以”骤风令“作为展示换行.',\n  },\n]\n\nexport default 循环模拟技能基础数据\n\nexport const 日志类型数组: 日志类型[] = [\n  '释放技能',\n  '自身buff变动',\n  '目标buff变动',\n  '造成伤害',\n  '技能释放结果',\n  '等CD',\n  '循环异常',\n]\n\nexport enum 技能GCD组 {\n  公共,\n  自身,\n  换箭,\n}\n\n// Map预备数据\nexport const 原始Buff数据: Buff枚举 = {\n  // Buff\n  经脉循行: {\n    名称: '经脉循行',\n    最大层数: 1,\n    最大持续时间: 99999,\n    图标: 'https://icon.jx3box.com/icon/22818.png',\n    备注: '每秒回复任督脉3点，点奇穴后5点',\n  },\n  玉枕: {\n    名称: '玉枕',\n    最大层数: 1,\n    图标: 'https://icon.jx3box.com/icon/22955.png',\n    备注: '经脉循行期间无视防御50%',\n  },\n  茫缈: {\n    名称: '茫缈',\n    最大层数: 1,\n    最大持续时间: 每秒郭氏帧 * 2,\n    图标: 'https://icon.jx3box.com/icon/22971.png',\n    备注: '释放骤风令后2秒内可以释放无GCD劈风令',\n  },\n  神门: {\n    名称: '神门',\n    最大层数: 1,\n    最大持续时间: 每秒郭氏帧 * 23,\n    图标: 'https://icon.jx3box.com/icon/22961.png',\n    备注: '“经脉循行”状态下施展“破穴”后，基础攻击力提高20%，无双额外提高20%持续23秒。',\n  },\n  绝脉: {\n    名称: '绝脉',\n    最大层数: 10,\n    最大持续时间: 每秒郭氏帧 * 30,\n    图标: 'https://icon.jx3box.com/icon/22817.png',\n    备注: '可被引爆，最多10层，点奇穴15层',\n  },\n  封府断脉链: {\n    名称: '封府断脉链',\n    最大层数: 1,\n    最大持续时间: 每秒郭氏帧 * 2,\n    图标: 'https://icon.jx3box.com/icon/22816.png',\n    备注: '施展截阳可以造成封府伤害',\n  },\n  封府截阳链: {\n    名称: '封府截阳链',\n    最大层数: 1,\n    最大持续时间: 每秒郭氏帧 * 2,\n    图标: 'https://icon.jx3box.com/icon/22817.png',\n    备注: '施展断脉可以造成封府伤害',\n  },\n  骤风: {\n    名称: '骤风',\n    最大层数: 1,\n    最大持续时间: 每秒郭氏帧 * 8,\n    图标: 'https://icon.jx3box.com/icon/22815.png',\n    备注: '每0.75秒造成一次伤害',\n  },\n  出岫: {\n    名称: '出岫',\n    最大层数: 1,\n    最大持续时间: 每秒郭氏帧 * 2,\n    图标: 'https://icon.jx3box.com/icon/22976.png',\n    备注: '出岫',\n  },\n  朔风扬尘: {\n    名称: '朔风扬尘',\n    最大层数: 7,\n    最大持续时间: 每秒郭氏帧 * 7,\n    图标: 'https://icon.jx3box.com/icon/22874.png',\n    备注: '每层可以释放一次二式',\n  },\n  扬尘: {\n    名称: '扬尘',\n    最大层数: 7,\n    最大持续时间: 每秒郭氏帧 * 20,\n    图标: 'https://icon.jx3box.com/icon/22993.png',\n    备注: '每层提高经脉循行1点秒回',\n  },\n  扬尘增伤: {\n    名称: '扬尘增伤',\n    最大层数: 7,\n    最大持续时间: 每秒郭氏帧 * 2,\n    图标: 'https://icon.jx3box.com/icon/22993.png',\n    备注: '每层提高扬尘二式伤害',\n  },\n  横驱风靡: {\n    名称: '横驱风靡',\n    最大层数: 1,\n    最大持续时间: 每秒郭氏帧 * 8,\n    图标: 'https://icon.jx3box.com/icon/22814.png',\n    备注: '被抟风令强化，每0.75秒造成一次伤害',\n  },\n  橙武: {\n    名称: '橙武',\n    最大层数: 1,\n    最大持续时间: 每秒郭氏帧 * 8,\n    图标: 'https://icon.jx3box.com/icon/2589.png',\n    备注: '先写着玩的，假设施展“引窍”不消耗能量且无调息',\n  },\n  // 劲风簇追: {\n  //   名称: '劲风簇追',\n  //   最大层数: 1,\n  //   最大持续时间: 每秒郭氏帧 * 3, // GCD结束以后buff才上，这里省事写 2 + 1\n  //   图标: 引窍,\n  //   备注: '此时释放白羽流星为释放驰风鸣角',\n  // },\n  // 饮羽簇追: {\n  //   名称: '饮羽簇追',\n  //   最大层数: 1,\n  //   最大持续时间: 每秒郭氏帧 * 3.5, // GCD结束以后buff才上，这里省事写 2 + 1.5\n  //   图标: 破穴,\n  //   备注: '此时释放白羽流星为释放没石饮羽',\n  // },\n  // 佩弦: {\n  //   名称: '佩弦',\n  //   最大层数: 1,\n  //   最大持续时间: 每秒郭氏帧 * 10,\n  //   图标: peixian,\n  //   备注: '施展金乌见坠后下一次饮羽簇无需运功',\n  // },\n  // 橙武: {\n  //   名称: '橙武',\n  //   最大层数: 1,\n  //   最大持续时间: 每秒郭氏帧 * 8,\n  //   图标: zhuangshengxiaomeng,\n  //   备注: '“饮羽簇”无需运功且无调息，“饮羽簇”造成伤害时对目标造成一次额外伤害',\n  // },\n  // 苍梧引灵阵五重: {\n  //   名称: '苍梧引灵阵五重',\n  //   最大层数: 1,\n  //   最大持续时间: 每秒郭氏帧 * 6,\n  //   图标: 'https://icon.jx3box.com/icon/19614.png',\n  //   备注: '每次阵眼施展“白羽流星”强化招式时，使小队成员会心效果提高15%，持续6秒。',\n  // },\n  // 丛云隐月: {\n  //   名称: '丛云隐月',\n  //   最大层数: 1,\n  //   最大持续时间: 每秒郭氏帧 * 10,\n  //   图标: 'https://icon.jx3box.com/icon/20297.png',\n  //   备注: '招式内力消耗降低80%，“白羽流星”无调息时间',\n  // },\n  // 诸怀: {\n  //   名称: '诸怀',\n  //   最大层数: 1,\n  //   图标: 'https://icon.jx3box.com/icon/20281.png',\n  //   备注: '自身外功基础攻击提高10%，无视目标20%外功防御',\n  // },\n  // // DOT\n  // 贯穿: {\n  //   名称: '贯穿',\n  //   最大层数: 6,\n  //   最大作用次数: 4,\n  //   最大持续时间: 每秒郭氏帧 * 2,\n  //   伤害频率: 8,\n  //   是否吃加速: false, // 贯穿不吃加速 魔盒显示最小和最大作用间隔都为8 https://www.jx3box.com/app/database/?type=buff&query=26856&level=1\n  //   图标: guanchuan,\n  //   备注: '每0.5秒造成一次伤害，最大可叠加六层',\n  // },\n}\n","import { 循环技能详情, 技能增益列表数据 } from '@/@types/循环'\nimport { 循环日志数据类型 } from './simulator/type'\nimport { 每秒郭氏帧 } from '@/数据/常量'\n\nexport const getDpsCycle = (data: 循环日志数据类型[]): 循环技能详情[] => {\n  const res: { [key: string]: 循环技能详情 } = {}\n  for (let i = 0; i < data.length; i++) {\n    const 当前数据 = data[i]\n    const 本次造成伤害次数 = 当前数据?.其他数据?.伤害次数 || 1\n    const 本次技能等级 = 当前数据?.其他数据?.技能等级 || 1\n    if (当前数据?.日志类型 === '造成伤害') {\n      const 当前日志对应技能枚举 = 获取当前日志对应技能枚举(当前数据?.日志)\n\n      const key = `${当前日志对应技能枚举}_${本次技能等级}`\n\n      let 增益列表 = res[key]?.技能增益列表 || []\n      if (!增益列表?.length) {\n        if (当前数据?.buff列表?.length) {\n          增益列表 = 增益列表.concat([\n            {\n              增益名称: 当前数据?.buff列表?.join(','),\n              增益技能数: 本次造成伤害次数,\n            },\n          ])\n        }\n      } else {\n        if (当前数据?.buff列表?.length) {\n          let 不存在相同增益 = true\n          增益列表 = 增益列表.map((item) => {\n            const 技能增益列表 = item?.增益名称?.split(',') || []\n            if (\n              技能增益列表?.length === 当前数据?.buff列表?.length &&\n              !技能增益列表?.some((a) => !当前数据?.buff列表?.includes(a))\n            ) {\n              不存在相同增益 = false\n              return {\n                增益名称: item.增益名称,\n                增益技能数: item.增益技能数 + 本次造成伤害次数,\n              }\n            } else {\n              return {\n                ...item,\n              }\n            }\n          })\n          if (不存在相同增益) {\n            增益列表 = 增益列表.concat({\n              增益名称: 当前数据?.buff列表?.join(','),\n              增益技能数: 本次造成伤害次数,\n            })\n          }\n        }\n      }\n\n      res[key] = {\n        ...res[key],\n        技能名称: 当前日志对应技能枚举,\n        技能等级: 本次技能等级,\n        技能数量: (res[key]?.技能数量 || 0) + 本次造成伤害次数,\n        技能增益列表: [...增益列表],\n      }\n    }\n  }\n\n  const 结果循环 = Object.keys(res).map((item) => {\n    const v = res[item]\n    return {\n      ...v,\n      技能数量: Math.round(v.技能数量),\n      技能增益列表: v.技能增益列表?.map((d) => {\n        return {\n          ...d,\n          增益技能数: Math.round(d.增益技能数),\n        }\n      }),\n    }\n  })\n\n  return 结果循环\n}\n\nexport const getSingleSkillDpsCycle = (当前数据: 循环日志数据类型): 循环技能详情 => {\n  const 当前日志对应技能枚举 = 获取当前日志对应技能枚举(当前数据?.日志)\n  const 伤害次数 = 当前数据?.其他数据?.伤害次数 || 1\n  let 增益列表: 技能增益列表数据[] = []\n  if (!增益列表?.length) {\n    if (当前数据?.buff列表) {\n      增益列表 = 增益列表.concat({\n        增益名称: 当前数据?.buff列表?.join(','),\n        增益技能数: 伤害次数,\n      })\n    }\n  } else {\n    if (当前数据?.buff列表?.length) {\n      let 不存在相同增益 = true\n      增益列表 = 增益列表.map((item) => {\n        const 技能增益列表 = item?.增益名称?.split(',') || []\n        if (\n          技能增益列表?.length === 当前数据?.buff列表?.length &&\n          !技能增益列表?.some((a) => !当前数据?.buff列表?.includes(a))\n        ) {\n          不存在相同增益 = false\n          return {\n            增益名称: item.增益名称,\n            增益技能数: item.增益技能数 + 伤害次数,\n          }\n        } else {\n          return {\n            ...item,\n          }\n        }\n      })\n      if (不存在相同增益) {\n        增益列表 = 增益列表.concat({\n          增益名称: 当前数据?.buff列表?.join(','),\n          增益技能数: 伤害次数,\n        })\n      }\n    }\n  }\n\n  return {\n    技能名称: 当前日志对应技能枚举,\n    技能数量: 伤害次数,\n    技能增益列表: [...增益列表],\n  }\n}\n\nexport const 判断上一个同名技能 = (当前技能, 循环) => {\n  // 上一个同名技能\n  const 循环副本 = [...循环]\n  循环副本.reverse()\n  let 剩余CD = 0\n\n  const 上一个同名技能 = 循环副本?.find((item) => {\n    if (item?.实际技能) {\n      // 用下一个技能可以释放时间判断不是当前技能\n      return item?.实际技能 === 当前技能?.实际技能 && item?.下一个技能可以释放时间\n    } else {\n      const 正常技能判定 = item?.技能名称 === 当前技能?.技能名称 && item?.下一个技能可以释放时间\n      // 用下一个技能可以释放时间判断不是当前技能\n      return 正常技能判定\n    }\n  })\n\n  if (上一个同名技能) {\n    const 实际CD = 当前技能?.技能CD\n    const 上一个同名技能释放时间 = (上一个同名技能?.本技能实际释放时间 || 0) + (实际CD || 0)\n    const 下一个技能可以释放时间 = 循环[循环.length - 1]?.下一个技能可以释放时间\n\n    剩余CD =\n      上一个同名技能释放时间 - 下一个技能可以释放时间 > 0\n        ? 上一个同名技能释放时间 - 下一个技能可以释放时间\n        : 0\n  }\n\n  return { 上一个同名技能, 剩余CD }\n}\n\nexport const 获取总用时 = (时间) => {\n  const 用时秒 = Math.round((时间 / 每秒郭氏帧) * 100) / 100\n  return 用时秒\n}\n\nexport const 获取显示秒伤 = (最后一条伤害数据) => {\n  return Math.round((最后一条伤害数据?.造成总伤害 || 0) / (最后一条伤害数据?.日志时间 / 每秒郭氏帧))\n}\n\n// 没表明枚举就直接取原值\nexport const Skill_Cycle_Map = {}\n\nconst 获取当前日志对应技能枚举 = (日志) => {\n  return Skill_Cycle_Map[日志] || 日志\n}\n\nexport const 根据加速等级获取虚拟加速值 = (加速等级) => {\n  const 加速等级枚举 = {\n    0: 0,\n    1: 206,\n    2: 9230,\n    3: 19280,\n    4: 30151,\n    5: 42047,\n  }\n  return 加速等级枚举[加速等级]\n}\n\nexport const 判断有无橙武循环数据 = (循环, 大橙武启用) => {\n  if (!大橙武启用) {\n    return 循环.filter((item) => {\n      return !item?.技能序列?.includes('触发橙武')\n    })\n  } else {\n    return 循环\n  }\n}\n","import { 每秒郭氏帧 } from '@/数据/常量'\nimport 循环模拟技能基础数据, { 原始Buff数据 } from '../constant/skill'\nimport { 循环基础技能数据类型, DotDTO } from './type'\n\nexport const 根据奇穴修改buff数据 = (奇穴: string[]) => {\n  const res = {}\n  const 判断奇穴 = (val) => {\n    return 奇穴?.includes(val)\n  }\n\n  Object.keys(原始Buff数据).forEach((key) => {\n    const obj = 原始Buff数据[key]\n    switch (key) {\n      case '贯穿':\n        if (判断奇穴('桑柘')) {\n          // eslint-disable-next-line @typescript-eslint/no-extra-semi\n          ;(obj as DotDTO).最大作用次数 = 5\n          ;(obj as DotDTO).最大持续时间 = 40\n        } else {\n          // eslint-disable-next-line @typescript-eslint/no-extra-semi\n          ;(obj as DotDTO).最大作用次数 = 4\n          ;(obj as DotDTO).最大持续时间 = 32\n        }\n        break\n      default:\n        break\n    }\n    res[key] = obj\n  })\n\n  return res\n}\n\nexport const 根据奇穴修改技能数据 = (奇穴: string[]): 循环基础技能数据类型[] => {\n  const 判断奇穴 = (val) => {\n    return 奇穴?.includes(val)\n  }\n\n  const res: 循环基础技能数据类型[] = 循环模拟技能基础数据.map((技能) => {\n    if (技能?.技能名称 === '引窍') {\n      return 判断奇穴('悬枢')\n        ? {\n            ...技能,\n            最大充能层数: 2,\n          }\n        : 技能\n    } else if (技能?.技能名称 === '风流云散') {\n      let 技能原始CD = 技能.技能CD || 0\n      let 最大充能层数 = 技能.最大充能层数 || 1\n\n      if (判断奇穴('出岫')) {\n        技能原始CD = 每秒郭氏帧 * 18 - 每秒郭氏帧 * 4\n        最大充能层数 = 2\n      }\n\n      return {\n        ...技能,\n        技能CD: 技能原始CD,\n        最大充能层数,\n      }\n    } else if (技能?.技能名称 === '劈风令') {\n      return 判断奇穴('见飓')\n        ? {\n            ...技能,\n            最大充能层数: 3,\n          }\n        : 技能\n    } else if (技能?.技能名称 === '抟风令') {\n      let 技能原始CD = 技能.技能CD || 0\n      if (判断奇穴('清激')) {\n        技能原始CD = 技能原始CD - 每秒郭氏帧 * 10\n      }\n      return {\n        ...技能,\n        技能CD: 技能原始CD,\n      }\n    } else if (技能?.技能名称 === '抟风令断') {\n      let 技能原始CD = 技能.技能CD || 0\n      if (判断奇穴('清激')) {\n        技能原始CD = 技能原始CD - 每秒郭氏帧 * 10\n      }\n      return {\n        ...技能,\n        技能CD: 技能原始CD,\n      }\n    } else {\n      return 技能\n    }\n  })\n\n  return res\n}\n\nexport const ERROR_ACTION = {\n  充能不足: {\n    信息: '当前技能没有可释放层数',\n  },\n  BUFF错误: {\n    信息: '当前没有对应的BUFF',\n  },\n}\n\nexport const 根据加速等级获取虚拟加速值 = (加速等级) => {\n  const 加速等级枚举 = {\n    0: 0,\n    1: 206,\n    2: 9230,\n    3: 19280,\n    4: 30151,\n    5: 42047,\n  }\n  return 加速等级枚举[加速等级]\n}\n\nexport const 转化buff和增益名称 = (增益名称, buff列表) => {\n  return buff列表?.[增益名称]\n}\n","import 循环主类类型 from '../main'\nimport { 技能释放记录结果 } from '../type'\n\nclass 技能统一类 {\n  模拟循环: 循环主类类型 = {} as any\n  本次释放记录: 技能释放记录结果 = {}\n\n  constructor(模拟循环) {\n    this.模拟循环 = 模拟循环\n    return\n  }\n\n  释放前初始化() {\n    // 重置释放记录\n    this.本次释放记录 = {}\n  }\n\n  触发伤害行为(\n    伤害名称,\n    伤害次数 = 1,\n    额外增益列表: string[] = [],\n    触发伤害时间: number | undefined = undefined,\n    技能等级 = 1\n  ) {\n    // 判断玉枕\n    const 增益列表 = [...额外增益列表]\n    // 当前技能数据?.宠物伤害\n    if (\n      this.模拟循环.校验奇穴是否存在('玉枕') &&\n      this.模拟循环.当前自身buff列表?.['经脉循行']?.当前层数\n    ) {\n      增益列表.push('玉枕')\n    }\n    this.模拟循环.技能造成伤害?.(伤害名称, 伤害次数, 增益列表, 触发伤害时间, false, 技能等级)\n  }\n\n  获取技能释放记录结果() {\n    return {\n      ...this.本次释放记录,\n    }\n  }\n\n  获取当前重要buff列表(技能依赖自身buff列表: string[] = [], 技能依赖目标buff列表: string[] = []) {\n    const 重要buff列表: string[] = []\n    技能依赖自身buff列表.forEach((buff) => {\n      if (this.模拟循环.当前自身buff列表?.[buff]?.当前层数) {\n        重要buff列表.push(buff)\n      }\n    })\n    技能依赖目标buff列表.forEach((buff) => {\n      if (this.模拟循环.当前目标buff列表?.[buff]?.当前层数) {\n        重要buff列表.push(buff)\n      }\n    })\n    return 重要buff列表 || []\n  }\n\n  获取施加重要buff信息(buff名称) {\n    const 当前时间 = this.模拟循环.当前时间 || 0\n    const buff对象 = this.模拟循环.Buff和Dot数据?.[buff名称]\n\n    return buff对象\n      ? {\n          buff名称: buff名称,\n          buff开始时间: 当前时间,\n          buff结束时间: 当前时间 + (buff对象?.最大持续时间 || 0),\n        }\n      : null\n  }\n}\n\nexport default 技能统一类\n","import { 每秒郭氏帧 } from '@/数据/常量'\nimport 循环模拟技能基础数据 from '../../../constant/skill'\nimport 技能统一类 from '../../通用类/技能统一类'\n\nclass 断脉 extends 技能统一类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '断脉')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  释放() {\n    return\n  }\n\n  命中() {\n    this?.模拟循环?.回复能量(15, '任脉')\n    this.触发伤害行为?.('断脉')\n\n    // 触发封府\n    if (this?.模拟循环?.当前自身buff列表?.['封府截阳链']?.当前层数) {\n      this.触发伤害行为?.('封府')\n      this.模拟循环.卸除buff?.({ 名称: '封府截阳链', 对象: '自身', 卸除层数: 1 })\n    }\n\n    if (this.模拟循环.校验奇穴是否存在?.('封府')) {\n      this.模拟循环.添加buff?.({ 名称: '封府断脉链', 对象: '自身' })\n    }\n\n    if (this.模拟循环.校验奇穴是否存在?.('反朴')) {\n      this.模拟循环.技能类实例集合?.引窍?.减少调息时间?.(每秒郭氏帧 * 1)\n      this.模拟循环.技能类实例集合?.截阳?.减少调息时间?.(每秒郭氏帧 * 1)\n    }\n\n    if (this.模拟循环.校验奇穴是否存在?.('卫分')) {\n      if (!this?.模拟循环?.当前目标buff列表?.['绝脉']?.当前层数) {\n        this?.模拟循环?.回复能量(15, '任脉')\n      }\n    }\n\n    this.模拟循环.判断逆脉()\n    this.模拟循环.判断扬尘()\n    this.保存释放记录()\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表(['出岫']),\n    }\n  }\n}\n\nexport default 断脉\n\nexport const 断脉类型 = typeof 断脉\n","import { 技能运行数据类型 } from '../type'\nimport 技能统一类 from './技能统一类'\n\nclass 有CD技能通用类 extends 技能统一类 {\n  技能运行数据: 技能运行数据类型 = {\n    待充能时间点: [],\n  }\n\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  初始化技能运行数据() {\n    this.技能运行数据.待充能时间点 = []\n  }\n\n  更新技能运行数据(新数据) {\n    this.技能运行数据 = {\n      ...this.技能运行数据,\n      ...新数据,\n    }\n  }\n}\n\nexport default 有CD技能通用类\n","import 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 截阳 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '截阳')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n\n    //\n    截阳.技能数据 = 模拟循环?.技能基础数据?.find((item) => item.技能名称 === '截阳')\n\n    this.初始化技能运行数据()\n  }\n\n  减少调息时间(减少帧数) {\n    const 待充能时间点 = this.技能运行数据.待充能时间点\n    if (待充能时间点?.length) {\n      const 新待充能时间点 = 待充能时间点\n        .map((item) => {\n          return item - 减少帧数\n        })\n        ?.filter((item) => {\n          return item > this.模拟循环.当前时间\n        })\n      this.更新技能运行数据({ 待充能时间点: 新待充能时间点 })\n    }\n  }\n\n  命中() {\n    this?.模拟循环?.回复能量(20, '督脉')\n    this.触发伤害行为?.('截阳')\n\n    this.模拟循环.添加buff?.({ 名称: '绝脉', 对象: '目标' })\n    this.模拟循环.添加buff?.({ 名称: '绝脉', 对象: '目标' })\n    this.模拟循环.添加buff?.({ 名称: '绝脉', 对象: '目标' })\n\n    // 触发封府\n    if (this?.模拟循环?.当前自身buff列表?.['封府断脉链']?.当前层数) {\n      this.触发伤害行为?.('封府')\n      this.模拟循环.卸除buff?.({ 名称: '封府断脉链', 对象: '自身', 卸除层数: 1 })\n    }\n\n    if (this.模拟循环.校验奇穴是否存在?.('封府')) {\n      this.模拟循环.添加buff?.({ 名称: '封府截阳链', 对象: '自身' })\n    }\n\n    this.模拟循环.判断扬尘()\n\n    this.保存释放记录()\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表(['出岫']),\n    }\n  }\n}\n\nexport default 截阳\n\nexport const 截阳类型 = typeof 截阳\n","import 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 引窍 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '引窍')\n  static 释放重置 = false\n\n  constructor(模拟循环) {\n    super(模拟循环)\n\n    //\n    引窍.技能数据 = 模拟循环?.技能基础数据?.find((item) => item.技能名称 === '引窍')\n\n    this.初始化技能运行数据()\n  }\n\n  减少调息时间(减少帧数) {\n    const 待充能时间点 = this.技能运行数据.待充能时间点\n    if (待充能时间点?.length) {\n      const 新待充能时间点 = 待充能时间点\n        .map((item) => {\n          return item - 减少帧数\n        })\n        ?.filter((item) => {\n          return item > this.模拟循环.当前时间\n        })\n      this.更新技能运行数据({ 待充能时间点: 新待充能时间点 })\n    }\n  }\n\n  重置调息时间() {\n    this.更新技能运行数据({ 待充能时间点: [] })\n  }\n\n  释放后() {\n    if (引窍.释放重置) {\n      this.更新技能运行数据({ 待充能时间点: [] })\n    }\n    引窍.释放重置 = false\n  }\n\n  命中() {\n    引窍.释放重置 = false\n\n    if (this.模拟循环.校验奇穴是否存在('悬枢')) {\n      this.模拟循环.添加buff?.({ 名称: '绝脉', 对象: '目标' })\n      this.模拟循环.添加buff?.({ 名称: '绝脉', 对象: '目标' })\n    }\n\n    // 这一行要放在触发悬枢的前面，能否引爆看释放前绝脉数量\n    const 当前绝脉层数 = this.模拟循环.当前目标buff列表?.['绝脉']?.当前层数 || 0\n\n    this.触发伤害行为('绝脉', 1, [], undefined, 2)\n    this.模拟循环.添加战斗日志({\n      日志: `引窍引爆绝脉等级${2}`,\n      日志类型: '技能释放结果',\n    })\n\n    this.模拟循环.卸除buff?.({ 名称: '绝脉', 对象: '目标', 卸除层数: 2 })\n\n    const 存在CWBuff = this.模拟循环.当前自身buff列表?.['橙武']?.当前层数\n    const 当前任脉值 = this.模拟循环.角色状态信息.能量信息.任脉\n    const 当前督脉值 = this.模拟循环.角色状态信息.能量信息.督脉\n    const 伤害等级 = Math.ceil(Math.max(Math.min(当前任脉值 * 0.5, 50), 1)) + 1\n\n    if (当前任脉值 > 0) {\n      this.触发伤害行为('引窍', 1, [], undefined, 伤害等级)\n      this.触发伤害行为('破', 1, [], undefined, 伤害等级)\n    } else {\n      this.触发伤害行为('引窍', 1, [], undefined, 1)\n      this.触发伤害行为('破', 1, [], undefined, 1)\n    }\n\n    this.模拟循环.添加战斗日志({\n      日志: `引窍伤害等级${伤害等级}`,\n      日志类型: '技能释放结果',\n    })\n\n    if (\n      (this.模拟循环.技能类实例集合?.经脉循行.经脉循行状态校验() &&\n        this.模拟循环.校验奇穴是否存在('丘墟')) ||\n      存在CWBuff\n    ) {\n      引窍.释放重置 = true\n    }\n\n    const 引爆绝脉次数 = Math.floor(Math.min(当前绝脉层数, 当前督脉值 * 0.1))\n\n    if (引爆绝脉次数) {\n      this.触发伤害行为('绝脉', 1, [], undefined, 引爆绝脉次数)\n      this.模拟循环.添加战斗日志({\n        日志: `引窍引爆绝脉等级${引爆绝脉次数}`,\n        日志类型: '技能释放结果',\n      })\n\n      this.模拟循环.卸除buff?.({ 名称: '绝脉', 对象: '目标', 卸除层数: 引爆绝脉次数 })\n    }\n\n    const 神封校验结果 = this.模拟循环.神封校验()\n\n    this.模拟循环.消耗当前一半能量()\n    if (神封校验结果) {\n      this.模拟循环.神封触发()\n    }\n\n    if (存在CWBuff) {\n      this?.模拟循环?.回复能量(30, '任脉')\n      this?.模拟循环?.回复能量(30, '督脉')\n    }\n\n    this.模拟循环.技能类实例集合?.经脉循行.经脉循行卸除校验()\n\n    this.模拟循环.判断扬尘()\n\n    this.保存释放记录()\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表(['出岫']),\n    }\n  }\n}\n\nexport default 引窍\n\nexport const 引窍类型 = typeof 引窍\n","import { 每秒郭氏帧 } from '@/数据/常量'\nimport 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 破穴 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '破穴')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n\n    //\n    破穴.技能数据 = 模拟循环?.技能基础数据?.find((item) => item.技能名称 === '破穴')\n\n    this.初始化技能运行数据()\n  }\n\n  命中() {\n    // 神门\n    if (\n      this.模拟循环.校验奇穴是否存在?.('神门') &&\n      this.模拟循环.技能类实例集合?.经脉循行.经脉循行状态校验()\n    ) {\n      this.模拟循环.添加buff?.({ 名称: '神门', 对象: '自身' })\n    }\n\n    this.触发伤害行为?.('破穴')\n\n    if (this.模拟循环.技能类实例集合?.经脉循行?.经脉循行状态校验()) {\n      const 当前任脉值 = this.模拟循环.角色状态信息.能量信息.任脉\n      const 伤害等级 = Math.ceil(Math.max(Math.min(当前任脉值 * 0.5, 50), 1)) + 1\n      this.触发伤害行为('破', 1, [], undefined, 伤害等级 || 1)\n\n      const 神封校验结果 = this.模拟循环.神封校验()\n      this.模拟循环.消耗当前一半能量()\n      if (神封校验结果) {\n        this.模拟循环.神封触发()\n      }\n      this.模拟循环.技能类实例集合?.经脉循行.经脉循行卸除校验()\n    } else {\n      if (this.模拟循环.校验奇穴是否存在?.('然谷')) {\n        this?.模拟循环?.回复能量(30, '任脉')\n        this?.模拟循环?.回复能量(30, '督脉')\n      } else {\n        this?.模拟循环?.回复能量(15, '任脉')\n        this?.模拟循环?.回复能量(15, '督脉')\n      }\n    }\n\n    this.模拟循环.技能类实例集合?.一阳来复?.减少调息时间?.(每秒郭氏帧 * 8)\n\n    this.模拟循环.判断扬尘()\n\n    this.保存释放记录()\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表(['出岫']),\n    }\n  }\n}\n\nexport default 破穴\n\nexport const 破穴类型 = typeof 破穴\n","import 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 雾刃飞光 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '雾刃飞光')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n\n    //\n    雾刃飞光.技能数据 = 模拟循环?.技能基础数据?.find((item) => item.技能名称 === '雾刃飞光')\n\n    this.初始化技能运行数据()\n  }\n\n  释放() {\n    return\n  }\n}\n\nexport default 雾刃飞光\n\nexport const 雾刃飞光类型 = typeof 雾刃飞光\n","import { 按数字生成数组 } from '@/工具函数/help'\nimport 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\nimport { 根据加速等级获取虚拟加速值 } from '../../utils'\nimport { 获取实际帧数 } from '@/工具函数/data'\nimport { 每秒郭氏帧 } from '@/数据/常量'\n\nclass 骤风令 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '骤风令')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n\n    骤风令.技能数据 = 模拟循环?.技能基础数据?.find((item) => item.技能名称 === '骤风令')\n    const 循环加速值 = 根据加速等级获取虚拟加速值(this.模拟循环.加速等级)\n    if (骤风令?.技能数据?.技能CD) {\n      const 原始CD = 每秒郭氏帧 * 25\n      const 加速后帧数 = 获取实际帧数(原始CD, 循环加速值)\n      骤风令.技能数据.技能CD = 加速后帧数\n    }\n    this.初始化技能运行数据()\n  }\n\n  命中() {\n    this.创建NPC骤风持续造成伤害()\n\n    if (this.模拟循环.校验奇穴是否存在('茫缈')) {\n      this.模拟循环.添加buff({ 名称: '茫缈', 对象: '自身' })\n    }\n  }\n\n  减少调息时间(减少帧数) {\n    const 待充能时间点 = this.技能运行数据.待充能时间点\n    if (待充能时间点?.length) {\n      const 新待充能时间点 = 待充能时间点\n        .map((item) => {\n          return item - 减少帧数\n        })\n        ?.filter((item) => {\n          return item > this.模拟循环.当前时间\n        })\n      this.更新技能运行数据({ 待充能时间点: 新待充能时间点 })\n    }\n  }\n\n  创建NPC骤风持续造成伤害() {\n    const 当前时间 = this.模拟循环.当前时间 || 0\n\n    // 正常创建的风是8跳\n    const 作用次数 = 10\n    // 每12帧数一次,共8秒\n    const 待生效事件 = 按数字生成数组(作用次数).map((次数) => {\n      return {\n        事件名称: `骤风造成伤害`,\n        事件时间: 当前时间 + 12 * 次数,\n      }\n    })\n\n    this.模拟循环.添加待生效事件队列(待生效事件)\n    this.模拟循环.添加buff({ 名称: '骤风', 对象: '目标' })\n  }\n\n  骤风造成伤害() {\n    this.触发伤害行为('骤风')\n  }\n}\n\nexport default 骤风令\n\nexport const 骤风令类型 = typeof 骤风令\n","import { 获取实际帧数 } from '@/工具函数/data'\nimport 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\nimport { 根据加速等级获取虚拟加速值 } from '../../utils'\nimport { 每秒郭氏帧 } from '@/数据/常量'\n\nclass 劈风令 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '劈风令')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n\n    劈风令.技能数据 = 模拟循环?.技能基础数据?.find((item) => item.技能名称 === '劈风令')\n    const 循环加速值 = 根据加速等级获取虚拟加速值(this.模拟循环.加速等级)\n    if (劈风令?.技能数据?.技能CD) {\n      const 原始CD = 每秒郭氏帧 * 8\n      const 加速后帧数 = 获取实际帧数(原始CD, 循环加速值)\n      劈风令.技能数据.技能CD = 加速后帧数\n    }\n\n    this.初始化技能运行数据()\n  }\n\n  检查GCD(索引) {\n    // 骤风劈的劈风令卡GCD释放\n    const 前一个技能 = this.模拟循环?.测试循环?.[索引 - 1]\n    const 后一个技能 = this.模拟循环?.测试循环?.[索引 + 1]\n    let GCD = this.模拟循环?.GCD组?.['公共'] || 0\n\n    // 如果存在后面的技能，判断后面的技能当前的GCD为多少，推进到后一个技能。这样可以让灭卡在后面的技能释放前释放\n    if (后一个技能 && 前一个技能 === '风流云散' && this.模拟循环.校验奇穴是否存在('茫缈')) {\n      const 当前技能 = this?.模拟循环?.技能基础数据?.find((item) => item?.技能名称 === 后一个技能)\n      if (当前技能 && 当前技能?.技能GCD组) {\n        const 技能实例 = this?.模拟循环?.技能类实例集合?.[当前技能?.技能名称]\n        GCD = this.模拟循环?.检查GCD?.(当前技能, 技能实例, 索引 + 1) || 0\n      }\n    }\n    return GCD\n  }\n\n  释放() {\n    return\n  }\n\n  重置调息时间() {\n    this.更新技能运行数据({ 待充能时间点: [] })\n  }\n\n  命中() {\n    if (\n      this.模拟循环.当前目标buff列表?.['骤风']?.当前层数 ||\n      this.模拟循环.当前目标buff列表?.['横驱风靡']?.当前层数\n    ) {\n      this.触发伤害行为('劈风刃')\n      this.触发伤害行为('劈风令·骤')\n    } else {\n      this.触发伤害行为('劈风刃')\n    }\n\n    if (this.模拟循环.校验奇穴是否存在('纷飙')) {\n      this.模拟循环.技能类实例集合?.抟风令?.纷飙触发减少CD?.()\n      this.模拟循环.技能类实例集合?.抟风令断?.纷飙触发减少CD?.()\n    }\n\n    if (this.模拟循环.校验奇穴是否存在('摧烟')) {\n      this.触发伤害行为('催烟')\n    }\n\n    this.触发伤害行为('破', 1, [], undefined, 25)\n\n    this.保存释放记录()\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表(['出岫']),\n    }\n  }\n}\n\nexport default 劈风令\n\nexport const 劈风令类型 = typeof 劈风令\n","import 循环模拟技能基础数据 from '../../../constant/skill'\nimport { ERROR_ACTION } from '../../utils'\n\nimport 技能统一类 from '../../通用类/技能统一类'\n\nclass 骤风劈风 extends 技能统一类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '骤风劈风')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  检查GCD(索引) {\n    // 骤风劈的骤风劈风卡GCD释放\n    const 前一个技能 = this.模拟循环?.测试循环?.[索引 - 1]\n    const 后一个技能 = this.模拟循环?.测试循环?.[索引 + 1]\n    let GCD = this.模拟循环?.GCD组?.['公共'] || 0\n\n    // 如果存在后面的技能，判断后面的技能当前的GCD为多少，推进到后一个技能。这样可以让灭卡在后面的技能释放前释放\n    if (后一个技能 && 前一个技能 === '风流云散' && this.模拟循环.校验奇穴是否存在('茫缈')) {\n      const 当前技能 = this?.模拟循环?.技能基础数据?.find((item) => item?.技能名称 === 后一个技能)\n      if (当前技能 && 当前技能?.技能GCD组) {\n        const 技能实例 = this?.模拟循环?.技能类实例集合?.[当前技能?.技能名称]\n        GCD = this.模拟循环?.检查GCD?.(当前技能, 技能实例, 索引 + 1) || 0\n      }\n      return GCD || 0\n    } else {\n      return 0\n    }\n  }\n\n  释放() {\n    if (!this.模拟循环.当前自身buff列表?.['茫缈']?.当前层数) {\n      return {\n        可以释放: false,\n        异常信息: ERROR_ACTION.BUFF错误,\n      }\n    } else {\n      return { 可以释放: true }\n    }\n  }\n\n  命中() {\n    if (\n      this.模拟循环.当前目标buff列表?.['骤风']?.当前层数 ||\n      this.模拟循环.当前目标buff列表?.['横驱风靡']?.当前层数\n    ) {\n      this.触发伤害行为('劈风刃')\n      this.触发伤害行为('劈风令·骤')\n    } else {\n      this.触发伤害行为('劈风刃')\n    }\n\n    if (this.模拟循环.校验奇穴是否存在('纷飙')) {\n      this.模拟循环.技能类实例集合?.抟风令?.纷飙触发减少CD?.()\n      this.模拟循环.技能类实例集合?.抟风令断?.纷飙触发减少CD?.()\n    }\n\n    if (this.模拟循环.校验奇穴是否存在('摧烟')) {\n      this.触发伤害行为('催烟')\n    }\n\n    this.触发伤害行为('破', 1, [], undefined, 25)\n\n    this.模拟循环.卸除buff({ 名称: '茫缈', 对象: '自身' })\n\n    this.保存释放记录()\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表(['出岫']),\n    }\n  }\n}\n\nexport default 骤风劈风\n\nexport const 骤风劈风类型 = typeof 骤风劈风\n","import { 获取实际帧数 } from '@/工具函数/data'\nimport 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\nimport { 根据加速等级获取虚拟加速值 } from '../../utils'\nimport { 待生效事件 } from '../../type'\nimport { 每秒郭氏帧 } from '@/数据/常量'\nimport { 按数字生成数组 } from '@/工具函数/help'\n\nclass 抟风令 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '抟风令')\n  static 总作用帧 = 32\n\n  constructor(模拟循环) {\n    super(模拟循环)\n\n    //\n    抟风令.技能数据 = 模拟循环?.技能基础数据?.find((item) => item.技能名称 === '抟风令')\n    const 循环加速值 = 根据加速等级获取虚拟加速值(this.模拟循环.加速等级)\n    抟风令.总作用帧 = 获取实际帧数(32, 循环加速值)\n\n    if (抟风令?.技能数据?.技能CD) {\n      const 原始CD = 每秒郭氏帧 * 55\n      let 加速后帧数 = 获取实际帧数(原始CD, 循环加速值)\n      if (this.模拟循环.校验奇穴是否存在('清激')) {\n        加速后帧数 = 加速后帧数 - 每秒郭氏帧 * 10\n      }\n      抟风令.技能数据.技能CD = 加速后帧数\n    }\n\n    this.初始化技能运行数据()\n  }\n\n  获取读条时间() {\n    const 读条持续时间 = 抟风令.总作用帧\n    return 读条持续时间\n  }\n\n  纷飙触发减少CD() {\n    const 待充能时间点 = this.技能运行数据.待充能时间点\n    const 计划下次充能时间点 = 待充能时间点?.[0]\n    // 没有层数才需要处理\n    if (计划下次充能时间点 > this.模拟循环.当前时间) {\n      const 剩余总时间 = 计划下次充能时间点 - (this.模拟循环.当前时间 || 0)\n      if (剩余总时间 > 0) {\n        const 减少时间 = Math.floor(剩余总时间 * 0.05)\n        const 减少后充能节点 = Math.max(计划下次充能时间点 - 减少时间, 0)\n        if (减少后充能节点 <= (this.模拟循环.当前时间 || 0)) {\n          this.更新技能运行数据({ 待充能时间点: [] })\n        } else {\n          this.更新技能运行数据({ 待充能时间点: [减少后充能节点] })\n        }\n        this.模拟循环.添加战斗日志?.({\n          日志: `纷飙触发减少抟风令调息时间，释放CD时间变为${减少后充能节点}`,\n          日志类型: '技能释放结果',\n        })\n      }\n    }\n  }\n\n  读条(读条开始时间) {\n    this.触发伤害行为('抟风令')\n    if (this.模拟循环.校验奇穴是否存在('摧烟')) {\n      this.模拟循环.技能类实例集合?.劈风令?.重置调息时间?.()\n    }\n    // 在刚开始释放就会处理骤风令\n    this.处理骤风令(读条开始时间)\n    // 开始读条\n    this.读条抟风令(读条开始时间)\n  }\n\n  处理骤风令(开始时间) {\n    this.模拟循环.待生效事件结算(开始时间)\n\n    const 骤风数据 = this?.模拟循环?.当前目标buff列表?.['骤风']\n    if (骤风数据?.当前层数) {\n      const 剩余时间 = (骤风数据?.刷新时间 || 0) + 8 * 每秒郭氏帧 - 开始时间\n      // 计算骤风令当前剩余buff时间\n      const 实际总Buff帧数 = 剩余时间 + 8 * 每秒郭氏帧\n      // 单次作用间隔为12，不吃加速\n      const 实际生效跳数 = Math.min(Math.floor(实际总Buff帧数 / 12), 11)\n      this.续费NPC骤风持续造成伤害(实际生效跳数, 开始时间)\n      this.模拟循环.添加战斗日志({\n        日志: `抟风令续费骤风令${实际生效跳数}次`,\n        日志类型: '技能释放结果',\n      })\n    }\n  }\n\n  续费NPC骤风持续造成伤害(续费次数, 开始时间) {\n    // 每12帧数一次,共8秒\n    const 待生效事件 = 按数字生成数组(续费次数).map((次数) => {\n      return {\n        事件名称: `横驱风靡造成伤害`,\n        事件时间: 开始时间 + 12 * 次数,\n      }\n    })\n\n    this.模拟循环.添加待生效事件队列(待生效事件)\n    this.模拟循环.删除待生效事件队列('骤风造成伤害')\n    this.模拟循环.卸除buff({ 名称: '骤风', 对象: '目标' })\n    this.模拟循环.添加buff({ 名称: '横驱风靡', 对象: '目标' })\n  }\n\n  读条抟风令(读条开始时间) {\n    const 待生效事件队列: 待生效事件[] = [\n      {\n        事件名称: '技能读条',\n        事件时间: 读条开始时间 + 抟风令.总作用帧,\n        事件备注: {\n          技能名称: '抟风令',\n        },\n      },\n    ]\n    this.模拟循环.添加待生效事件队列(待生效事件队列)\n  }\n\n  // 顺序不可随意更改\n  读条伤害() {\n    this.触发伤害行为('抟风令·爆')\n  }\n\n  横驱风靡造成伤害() {\n    this.触发伤害行为('横驱风靡')\n  }\n}\n\nexport default 抟风令\n\nexport const 抟风令类型 = typeof 抟风令\n","import 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\nimport { 待生效事件 } from '../../type'\nimport { 每秒郭氏帧 } from '@/数据/常量'\nimport { 按数字生成数组 } from '@/工具函数/help'\nimport { 根据加速等级获取虚拟加速值 } from '../../utils'\nimport { 获取实际帧数 } from '@/工具函数/data'\n\nclass 抟风令断 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '抟风令')\n  // static 总作用帧 = 32\n  // 因为可以通过提前中断来操作，实际其他效果完全生效，这里模拟暂时写死1.5秒\n  static 总作用帧 = 24\n\n  constructor(模拟循环) {\n    super(模拟循环)\n    抟风令断.技能数据 = 模拟循环?.技能基础数据?.find((item) => item.技能名称 === '抟风令')\n    const 循环加速值 = 根据加速等级获取虚拟加速值(this.模拟循环.加速等级)\n\n    if (抟风令断?.技能数据?.技能CD) {\n      const 原始CD = 每秒郭氏帧 * 55\n      let 加速后帧数 = 获取实际帧数(原始CD, 循环加速值)\n      if (this.模拟循环.校验奇穴是否存在('清激')) {\n        加速后帧数 = 加速后帧数 - 每秒郭氏帧 * 10\n      }\n      抟风令断.技能数据.技能CD = 加速后帧数\n    }\n\n    this.初始化技能运行数据()\n  }\n\n  获取读条时间() {\n    const 读条持续时间 = 抟风令断.总作用帧\n    return 读条持续时间\n  }\n\n  纷飙触发减少CD() {\n    const 待充能时间点 = this.技能运行数据.待充能时间点\n    const 计划下次充能时间点 = 待充能时间点?.[0]\n    // 没有层数才需要处理\n    if (计划下次充能时间点 > this.模拟循环.当前时间) {\n      const 剩余总时间 = 计划下次充能时间点 - (this.模拟循环.当前时间 || 0)\n      if (剩余总时间 > 0) {\n        const 减少时间 = Math.floor(剩余总时间 * 0.05)\n        const 减少后充能节点 = Math.max(计划下次充能时间点 - 减少时间, 0)\n        if (减少后充能节点 <= (this.模拟循环.当前时间 || 0)) {\n          this.更新技能运行数据({ 待充能时间点: [] })\n        } else {\n          this.更新技能运行数据({ 待充能时间点: [减少后充能节点] })\n        }\n        this.模拟循环.添加战斗日志?.({\n          日志: `纷飙触发减少抟风令调息时间，释放CD时间变为${减少后充能节点}`,\n          日志类型: '技能释放结果',\n        })\n      }\n    }\n  }\n\n  读条(读条开始时间) {\n    this.触发伤害行为('抟风令')\n    if (this.模拟循环.校验奇穴是否存在('摧烟')) {\n      this.模拟循环.技能类实例集合?.劈风令?.重置调息时间?.()\n    }\n    // 在刚开始释放就会处理骤风令\n    this.处理骤风令(读条开始时间)\n    // 开始读条\n    this.读条抟风令(读条开始时间)\n  }\n\n  处理骤风令(开始时间) {\n    this.模拟循环.待生效事件结算(开始时间)\n\n    const 骤风数据 = this?.模拟循环?.当前目标buff列表?.['骤风']\n    if (骤风数据?.当前层数) {\n      const 剩余时间 = (骤风数据?.刷新时间 || 0) + 8 * 每秒郭氏帧 - 开始时间\n      // 计算骤风令当前剩余buff时间\n      const 实际总Buff帧数 = 剩余时间 + 8 * 每秒郭氏帧\n      // 单次作用间隔为12，不吃加速\n      const 实际生效跳数 = Math.min(Math.floor(实际总Buff帧数 / 12), 11)\n      this.续费NPC骤风持续造成伤害(实际生效跳数, 开始时间)\n      this.模拟循环.添加战斗日志({\n        日志: `抟风令断续费骤风令${实际生效跳数}次`,\n        日志类型: '技能释放结果',\n      })\n    }\n  }\n\n  续费NPC骤风持续造成伤害(续费次数, 开始时间) {\n    // 每12帧数一次,共8秒\n    const 待生效事件 = 按数字生成数组(续费次数).map((次数) => {\n      return {\n        事件名称: `横驱风靡造成伤害`,\n        事件时间: 开始时间 + 12 * 次数,\n      }\n    })\n\n    this.模拟循环.添加待生效事件队列(待生效事件)\n    this.模拟循环.删除待生效事件队列('骤风造成伤害')\n    this.模拟循环.卸除buff({ 名称: '骤风', 对象: '目标' })\n    this.模拟循环.添加buff({ 名称: '横驱风靡', 对象: '目标' })\n  }\n\n  读条抟风令(读条开始时间) {\n    const 待生效事件队列: 待生效事件[] = [\n      {\n        事件名称: '技能读条',\n        事件时间: 读条开始时间 + 抟风令断.总作用帧,\n        事件备注: {\n          技能名称: '抟风令',\n        },\n      },\n    ]\n    this.模拟循环.添加待生效事件队列(待生效事件队列)\n  }\n\n  // 顺序不可随意更改\n  读条伤害() {\n    this.触发伤害行为('抟风令·爆')\n  }\n\n  横驱风靡造成伤害() {\n    this.触发伤害行为('横驱风靡')\n  }\n}\n\nexport default 抟风令断\n\nexport const 抟风令类型 = typeof 抟风令断\n","import 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 雪重花满 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '雪重花满')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n\n    //\n    雪重花满.技能数据 = 模拟循环?.技能基础数据?.find((item) => item.技能名称 === '雪重花满')\n\n    this.初始化技能运行数据()\n  }\n\n  释放() {\n    return\n  }\n}\n\nexport default 雪重花满\n\nexport const 雪重花满类型 = typeof 雪重花满\n","import 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 朔风扬尘一 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '朔风扬尘一')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n\n    //\n    朔风扬尘一.技能数据 = 模拟循环?.技能基础数据?.find((item) => item.技能名称 === '朔风扬尘一')\n\n    this.初始化技能运行数据()\n  }\n\n  释放() {\n    return\n  }\n\n  命中() {\n    this.模拟循环?.添加buff({ 名称: '朔风扬尘', 对象: '自身', 新增层数: 7 })\n  }\n}\n\nexport default 朔风扬尘一\n\nexport const 朔风扬尘一段类型 = typeof 朔风扬尘一\n","import 循环模拟技能基础数据 from '../../../constant/skill'\nimport { ERROR_ACTION } from '../../utils'\nimport 技能统一类 from '../../通用类/技能统一类'\n\nclass 朔风扬尘二 extends 技能统一类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '朔风扬尘二')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  释放() {\n    if (!this.模拟循环.当前自身buff列表?.['朔风扬尘']?.当前层数) {\n      return {\n        可以释放: false,\n        异常信息: ERROR_ACTION.BUFF错误,\n      }\n    } else {\n      return { 可以释放: true }\n    }\n  }\n\n  命中() {\n    // 只卸除层数不刷新时间\n    if (this.模拟循环.当前自身buff列表?.['朔风扬尘']?.当前层数) {\n      const 当前层数 = this.模拟循环.当前自身buff列表?.['朔风扬尘']?.当前层数 || 1\n      this.模拟循环.当前自身buff列表['朔风扬尘'] = {\n        ...this.模拟循环.当前自身buff列表?.['朔风扬尘'],\n        当前层数: 当前层数 - 1,\n      }\n    }\n\n    this.模拟循环?.添加buff({ 名称: '扬尘', 对象: '自身', 新增层数: 1 })\n    this.模拟循环?.添加buff({ 名称: '扬尘增伤', 对象: '自身', 新增层数: 1 })\n    this.模拟循环.回复能量(5, '任脉')\n    this.模拟循环.回复能量(5, '督脉')\n\n    const 当前扬尘层数 = this?.模拟循环?.当前自身buff列表['扬尘增伤']?.当前层数 || 0\n\n    const 当前扬尘伤害等级 = 1 + 当前扬尘层数\n\n    this.触发伤害行为('朔风扬尘', 1, [], undefined, 当前扬尘伤害等级 || 1)\n\n    if (当前扬尘层数 === 7) {\n      this.模拟循环?.卸除buff({ 名称: '扬尘增伤', 对象: '自身', 卸除层数: 7 })\n    }\n  }\n}\n\nexport default 朔风扬尘二\n\nexport const 朔风扬尘二类型 = typeof 朔风扬尘二\n","import 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 风流云散 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '风流云散')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n\n    //\n    风流云散.技能数据 = 模拟循环?.技能基础数据?.find((item) => item.技能名称 === '风流云散')\n\n    this.初始化技能运行数据()\n  }\n\n  释放() {\n    return\n  }\n\n  // 这里单独写风流云散的卡GCD释放逻辑\n  检查GCD(索引) {\n    const 后一个技能 = this.模拟循环?.测试循环?.[索引 + 1]\n    let GCD = this.模拟循环?.GCD组?.['风流云散'] || 0\n\n    // 如果存在后面的技能，判断后面的技能当前的GCD为多少，推进到后一个技能。这样可以让灭卡在后面的技能释放前释放\n    if (后一个技能) {\n      const 当前技能 = this?.模拟循环?.技能基础数据?.find((item) => item?.技能名称 === 后一个技能)\n      if (当前技能 && 当前技能?.技能GCD组) {\n        const 技能实例 = this?.模拟循环?.技能类实例集合?.[当前技能?.技能名称]\n        GCD = this.模拟循环?.检查GCD?.(当前技能, 技能实例, 索引 + 1) || 0\n      }\n    }\n    return GCD\n  }\n\n  命中() {\n    if (this.模拟循环.校验奇穴是否存在?.('出岫')) {\n      this?.模拟循环?.添加buff({ 名称: '出岫', 对象: '自身' })\n    }\n\n    this.保存释放记录()\n  }\n\n  保存释放记录() {\n    const 造成buff数据 = this.获取施加重要buff信息('出岫')\n    this.本次释放记录 = 造成buff数据 ? { 造成buff数据 } : {}\n  }\n}\n\nexport default 风流云散\n\nexport const 风流云散类型 = typeof 风流云散\n","import 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 一阳来复 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '一阳来复')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n\n    一阳来复.技能数据 = 模拟循环?.技能基础数据?.find((item) => item.技能名称 === '一阳来复')\n\n    this.初始化技能运行数据()\n  }\n\n  释放() {\n    return\n  }\n\n  减少调息时间(减少帧数) {\n    const 待充能时间点 = this.技能运行数据.待充能时间点\n    if (待充能时间点?.length) {\n      const 新待充能时间点 = 待充能时间点\n        .map((item) => {\n          return item - 减少帧数\n        })\n        ?.filter((item) => {\n          return item > this.模拟循环.当前时间\n        })\n      this.更新技能运行数据({ 待充能时间点: 新待充能时间点 })\n    }\n  }\n\n  命中() {\n    this.模拟循环.回复能量(50, '任脉')\n    this.模拟循环.回复能量(50, '督脉')\n  }\n}\n\nexport default 一阳来复\n\nexport const 一阳来复类型 = typeof 一阳来复\n","import { 按数字生成数组 } from '@/工具函数/help'\nimport 技能统一类 from '../../通用类/技能统一类'\nimport { 每秒郭氏帧 } from '@/数据/常量'\n\nclass 经脉循行 extends 技能统一类 {\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  释放() {\n    return\n  }\n\n  获得经脉循行() {\n    const 当前身上有经脉循行 = this.经脉循行状态校验()\n    this.模拟循环.添加buff?.({ 名称: '经脉循行', 对象: '自身' })\n    if (!当前身上有经脉循行) {\n      this.添加经脉循行每秒回复事件()\n    }\n  }\n\n  添加经脉循行每秒回复事件(初始时间 = 8) {\n    let 当前时间 = this.模拟循环.当前时间 || 0\n    // 生成100个事件，理论上100秒内必定续费，简单处理\n\n    // 如果是第一次添加，为了错位，提前设置8帧\n    if (当前时间 === 0) {\n      当前时间 = -(每秒郭氏帧 - 初始时间)\n    }\n    const 待生效事件 = 按数字生成数组(1000).map((次数) => {\n      return {\n        事件名称: `经脉循行_秒回`,\n        事件时间: 当前时间 + 每秒郭氏帧 * 次数,\n      }\n    })\n    this.模拟循环.添加待生效事件队列(待生效事件)\n  }\n\n  经脉循行每秒回复() {\n    this.模拟循环.回复能量(3, '任脉')\n    this.模拟循环.回复能量(3, '督脉')\n    if (this.模拟循环.校验奇穴是否存在('相息')) {\n      this.模拟循环.回复能量(2, '任脉')\n      this.模拟循环.回复能量(2, '督脉')\n    }\n    if (this?.模拟循环?.当前自身buff列表?.['扬尘']?.当前层数) {\n      const 层数 = this?.模拟循环?.当前自身buff列表?.['扬尘']?.当前层数 || 1\n      this.模拟循环.回复能量(层数, '任脉')\n      this.模拟循环.回复能量(层数, '督脉')\n    }\n  }\n\n  初始化经脉循行(初始时间) {\n    this.添加经脉循行每秒回复事件(初始时间)\n  }\n\n  经脉循行状态校验() {\n    return !!this?.模拟循环.当前自身buff列表?.['经脉循行']?.当前层数\n  }\n\n  经脉循行添加校验() {\n    if (\n      this.模拟循环.角色状态信息.能量信息.任脉 >= 50 &&\n      this.模拟循环.角色状态信息.能量信息.督脉 >= 50\n    ) {\n      this.获得经脉循行()\n    }\n  }\n\n  经脉循行卸除校验() {\n    if (\n      this.模拟循环.角色状态信息.能量信息.任脉 < 50 ||\n      this.模拟循环.角色状态信息.能量信息.督脉 < 50\n    ) {\n      this.模拟循环.卸除buff?.({ 名称: '经脉循行', 对象: '自身', 卸除层数: 1 })\n      this.模拟循环.删除待生效事件队列(`经脉循行_秒回`)\n    }\n  }\n}\n\nexport default 经脉循行\n\nexport const 经脉循行类型 = typeof 经脉循行\n","// import 循环主类 from '../main'\nimport 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 触发橙武 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '触发橙武')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n\n    this.初始化技能运行数据()\n  }\n\n  命中() {\n    if (this.模拟循环.大橙武模拟) {\n      this.模拟循环.添加buff?.({ 名称: '橙武', 对象: '自身', 新增层数: 1 })\n\n      // 重置引窍时间\n      this.模拟循环.技能类实例集合?.引窍?.重置调息时间?.()\n\n      // 假设触发CW回满能量\n      this?.模拟循环?.回复能量(100, '任脉')\n      this?.模拟循环?.回复能量(100, '督脉')\n    }\n  }\n}\n\nexport default 触发橙武\n\nexport const 触发橙武类型 = typeof 触发橙武\n","import 循环模拟技能基础数据 from '../../../constant/skill'\nimport 技能统一类 from '../../通用类/技能统一类'\n\nclass 换行 extends 技能统一类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '换行')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n}\n\nexport default 换行\n\nexport const 换行类型 = typeof 换行\n","/**\n * 定义模拟循环类\n */\n\n// import { 每秒郭氏帧 } from '../constant'\nimport {\n  // ERROR_ACTION,\n  根据奇穴修改buff数据,\n  根据奇穴修改技能数据,\n  转化buff和增益名称,\n} from './utils'\n\nimport {\n  技能GCD组,\n  技能类实例集合,\n  检查运行数据实例类型,\n  Buff枚举,\n  循环日志数据类型,\n  循环基础技能数据类型,\n  角色状态信息类型,\n  技能释放记录数据,\n  待生效事件,\n  技能运行数据类型,\n} from './type'\n\nimport 断脉 from './技能类/断脉'\nimport 截阳 from './技能类/截阳'\nimport 引窍 from './技能类/引窍'\nimport 破穴 from './技能类/破穴'\n// import 雾海萦空 from './技能类/雾海萦空'\nimport 雾刃飞光 from './技能类/雾刃飞光'\nimport 骤风令 from './技能类/骤风令'\nimport 劈风令 from './技能类/劈风令'\nimport 骤风劈风 from './技能类/骤风劈风'\nimport 抟风令 from './技能类/抟风令'\nimport 抟风令断 from './技能类/抟风令断'\nimport 雪重花满 from './技能类/雪重花满'\nimport 朔风扬尘一 from './技能类/朔风扬尘一'\nimport 朔风扬尘二 from './技能类/朔风扬尘二'\nimport 风流云散 from './技能类/风流云散'\nimport 一阳来复 from './技能类/一阳来复'\nimport 经脉循行 from './技能类/经脉循行'\n// import { 箭形态枚举 } from '../constant/enum'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport { 获取加速等级 } from '@/工具函数/data'\nimport 触发橙武 from './技能类/触发橙武'\nimport 换行 from './技能类/换行'\n\nconst { 技能系数 } = 获取当前数据()\n\nexport interface SimulatorCycleProps {\n  测试循环: string[]\n  加速值: number\n  网络延迟: number\n  奇穴: string[]\n  大橙武模拟: boolean\n  角色状态信息?: 角色状态信息类型\n  起手回能帧?: number\n  起手能量: { 任脉: number; 督脉: number }\n}\n\nclass 循环主类 {\n  循环执行结果: '成功' | '异常' = '成功'\n  循环异常信息 = { 异常索引: 0, 异常信息: '' }\n  测试循环: string[] = []\n  奇穴: string[] = []\n  加速等级 = 0\n  网络延迟 = 0\n  // 网络按键延迟 = 0\n  角色状态信息: 角色状态信息类型 = {\n    能量信息: { 任脉: 100, 督脉: 100 },\n  }\n  当前自身buff列表: Buff枚举 = {}\n  当前目标buff列表: Buff枚举 = {}\n  当前时间 = 0\n  开始释放上一个技能的时间 = 0\n  战斗日志: 循环日志数据类型[] = []\n  技能释放记录: 技能释放记录数据[] = []\n  Buff和Dot数据: Buff枚举 = {}\n  技能基础数据: 循环基础技能数据类型[] = []\n  GCD组: 技能GCD组 = {\n    公共: 0,\n    自身: 0,\n  }\n  技能类实例集合: 技能类实例集合 = {}\n  风矢上次造成伤害时间: number | undefined = undefined\n  大橙武模拟 = false\n  待生效事件队列: 待生效事件[] = []\n  起手回能帧 = 8\n\n  // 初始化创建\n  constructor(props: SimulatorCycleProps) {\n    // 模拟开始后不会变动的数据\n    this.测试循环 = props.测试循环\n    this.大橙武模拟 = props.大橙武模拟\n    this.奇穴 = props.奇穴\n    this.加速等级 = 获取加速等级(props.加速值)\n    this.网络延迟 = props.网络延迟\n    // 根据奇穴和装备情况修改buff的数据\n    this.Buff和Dot数据 = 根据奇穴修改buff数据(this.奇穴)\n    // 根据奇穴和装备情况修改技能的数据\n    this.技能基础数据 = 根据奇穴修改技能数据(this.奇穴)\n\n    this.当前自身buff列表 = {\n      经脉循行: {\n        ...this.Buff和Dot数据?.['经脉循行'],\n        当前层数: 1,\n        刷新时间: 99999,\n      },\n    }\n    this.当前目标buff列表 = {}\n    this.角色状态信息 = {\n      能量信息: { 任脉: props?.起手能量?.任脉, 督脉: props?.起手能量?.督脉 },\n    }\n    this.起手回能帧 = props.起手回能帧 || 8\n    this.待生效事件队列 = []\n    // 模拟初始化\n    this.初始化技能实例类()\n    this.重置循环执行结果()\n  }\n\n  // ----------------- 通用函数 start----------------- //\n  重置循环执行结果() {\n    this.循环执行结果 = '成功'\n    this.循环异常信息 = { 异常索引: 0, 异常信息: '' }\n  }\n\n  初始化技能实例类() {\n    this.技能类实例集合 = {\n      断脉: new 断脉(this),\n      截阳: new 截阳(this),\n      引窍: new 引窍(this),\n      破穴: new 破穴(this),\n      // 雾海萦空: new 雾海萦空(this),\n      雾刃飞光: new 雾刃飞光(this),\n      骤风令: new 骤风令(this),\n      劈风令: new 劈风令(this),\n      骤风劈风: new 骤风劈风(this),\n      抟风令: new 抟风令(this),\n      抟风令断: new 抟风令断(this),\n      雪重花满: new 雪重花满(this),\n      风流云散: new 风流云散(this),\n      一阳来复: new 一阳来复(this),\n      朔风扬尘一: new 朔风扬尘一(this),\n      朔风扬尘二: new 朔风扬尘二(this),\n      换行: new 换行(this),\n      经脉循行: new 经脉循行(this),\n      触发橙武: new 触发橙武(this),\n    }\n  }\n\n  添加buff({\n    名称,\n    对象 = '目标',\n    事件时间 = this.当前时间,\n    新增层数 = 1,\n    覆盖层数 = 0,\n    只添加日志 = false,\n  }) {\n    const 当前层数 =\n      对象 === '自身'\n        ? this.当前自身buff列表[名称]?.当前层数\n        : this.当前目标buff列表[名称]?.当前层数\n\n    const 新buff对象 = {\n      ...this.Buff和Dot数据[名称],\n      当前层数: 覆盖层数\n        ? 覆盖层数\n        : Math.min((当前层数 || 0) + 新增层数, this.Buff和Dot数据[名称].最大层数 || 1),\n      刷新时间: 事件时间,\n    }\n    if ((新buff对象.当前层数 !== 当前层数 && 新buff对象.当前层数 !== 1) || 名称 === '标鹄') {\n      this.添加战斗日志({\n        日志: `${名称}层数变为【${新buff对象.当前层数}】`,\n        日志类型: 对象 === '自身' ? '自身buff变动' : '目标buff变动',\n        日志时间: 事件时间,\n      })\n    } else {\n      this.添加战斗日志({\n        日志: `${对象}获得${名称}`,\n        日志类型: 对象 === '自身' ? '自身buff变动' : '目标buff变动',\n        日志时间: 事件时间,\n      })\n    }\n\n    if (!只添加日志) {\n      if (对象 === '自身') {\n        this.当前自身buff列表[名称] = { ...新buff对象 }\n      } else {\n        this.当前目标buff列表[名称] = { ...新buff对象 }\n      }\n    }\n  }\n\n  卸除buff({\n    名称,\n    buff刷新时间 = 0,\n    对象 = '目标',\n    事件时间 = this.当前时间,\n    卸除层数 = 1,\n    只添加日志 = false,\n  }) {\n    const 当前层数 =\n      (对象 === '自身'\n        ? this.当前自身buff列表[名称]?.当前层数\n        : this.当前目标buff列表[名称]?.当前层数) || 0\n\n    if ((当前层数 && 当前层数 >= 0) || 只添加日志) {\n      if (当前层数 - 卸除层数 > 0) {\n        this.添加战斗日志({\n          日志: `${名称}层数变为【${当前层数 - 卸除层数}】`,\n          日志类型: 对象 === '自身' ? '自身buff变动' : '目标buff变动',\n          日志时间: 事件时间,\n        })\n        if (!只添加日志) {\n          const 新buff对象 = {\n            ...this.Buff和Dot数据[名称],\n            当前层数: 当前层数 - 卸除层数,\n            刷新时间: buff刷新时间 || 事件时间,\n          }\n          if (对象 === '自身') {\n            this.当前自身buff列表[名称] = { ...新buff对象 }\n          } else {\n            this.当前目标buff列表[名称] = { ...新buff对象 }\n          }\n        }\n      } else {\n        this.添加战斗日志({\n          日志: `${对象}失去${名称}`,\n          日志类型: 对象 === '自身' ? '自身buff变动' : '目标buff变动',\n          日志时间: 事件时间,\n        })\n        if (!只添加日志) {\n          if (对象 === '自身') {\n            delete this.当前自身buff列表[名称]\n          } else {\n            delete this.当前目标buff列表[名称]\n          }\n        }\n      }\n    }\n  }\n\n  // 校验奇穴是否存在\n  校验奇穴是否存在(待判断奇穴) {\n    return this?.奇穴?.includes(待判断奇穴)\n  }\n\n  // 能量校验\n  能量校验() {\n    return { 可以释放: true }\n  }\n\n  // ----------------- 时间、GCD、CD相关算法 start----------------- //\n  /**\n   *\n   * @param 增加时间方法\n   * @description 每次增加时间方法都要同步推进GCD\n   */\n  增加时间(time) {\n    if (time > 0) {\n      this.跳过全部GCD时间(time)\n      // 增加时间\n      this.当前时间 = this.当前时间 + (time > 0 ? time : 0 || 0)\n      this.DOT结算与更新()\n      this.清空已经消失的buff()\n    }\n  }\n\n  跳过全部GCD时间(time) {\n    // 减少GCD剩余时间\n    const 新GCD组: 技能GCD组 = { 公共: 0, 自身: 0 }\n    Object.keys(this.GCD组).map((key) => {\n      新GCD组[key] = Math.max((this.GCD组[key] || 0) - time, 0)\n    })\n    this.GCD组 = { ...新GCD组 }\n  }\n\n  技能释放前检查GCD统一方法(当前技能: 循环基础技能数据类型) {\n    let 校验GCD组: string = 当前技能.技能GCD组 as string\n    if (当前技能.技能GCD组 === '自身') {\n      校验GCD组 = 当前技能?.技能名称\n    }\n    if (校验GCD组) {\n      // 大部分技能只检查自己的GCD\n      const GCD = this.GCD组[校验GCD组]\n      // 增加GCD\n      return GCD || 0\n    }\n    return 0\n  }\n\n  // 对所有有CD技能检查和充能\n  对所有有CD技能检查和充能() {\n    Object.keys(this.技能类实例集合).forEach((key) => {\n      const 实例 = this.技能类实例集合[key]\n      if (实例?.技能运行数据) {\n        const 运行数据: 技能运行数据类型 = 实例?.技能运行数据\n        const 待充能时间点 = 运行数据?.待充能时间点\n        if (待充能时间点?.length) {\n          const 新待充能时间点 = 待充能时间点?.filter((item) => item > this.当前时间)\n          实例?.更新技能运行数据({ 待充能时间点: 新待充能时间点 })\n        }\n      }\n    })\n  }\n\n  技能释放前检查运行数据(当前技能: 循环基础技能数据类型, 技能实例: 检查运行数据实例类型, GCD) {\n    let 等待CD时间 = 0\n    const 可以释放时间 = this.当前时间 + GCD || 0\n    if (技能实例?.技能运行数据) {\n      const 待充能时间点 = 技能实例?.技能运行数据?.待充能时间点\n      if (待充能时间点?.length >= (当前技能?.最大充能层数 || 1)) {\n        const 可释放时间 = 待充能时间点?.[0]\n        // 当前没有层数可用，需要等待充能\n        if (可释放时间 > 可以释放时间) {\n          等待CD时间 = 可释放时间 - 可以释放时间\n        }\n      }\n    }\n    return 等待CD时间\n  }\n\n  技能GCD和CD处理(\n    等待CD,\n    技能预估释放时间,\n    当前技能: 循环基础技能数据类型,\n    技能实例: 检查运行数据实例类型\n  ) {\n    // 判断在处理完特殊事件以后，剩余的待定时间还有多少\n    const 时间差 = 技能预估释放时间 - this.当前时间\n    if (时间差 && 时间差 > 0) {\n      this.增加时间(时间差)\n    }\n    if (等待CD) {\n      this.添加战斗日志({\n        日志: `【${当前技能?.技能名称}】等技能CD【${等待CD}】帧`,\n        日志类型: '等CD',\n        日志时间: 技能预估释放时间,\n      })\n      // const 当前层数 = 技能实例?.技能运行数据?.当前层数\n      // const 新层数 = Math.min(当前层数 + 1, 当前技能?.最大充能层数 || 1)\n      // 技能实例?.更新技能运行数据({ 当前层数: 新层数, 充能满第一次释放时间点: 技能预估释放时间 })\n    }\n    const 待充能时间点 = 技能实例?.技能运行数据?.待充能时间点\n    const 新待充能时间点 = 待充能时间点?.filter((item) => item > 技能预估释放时间)\n    技能实例?.更新技能运行数据?.({ 待充能时间点: 新待充能时间点 })\n  }\n\n  技能释放后更新运行数据(当前技能: 循环基础技能数据类型, 技能实例: 检查运行数据实例类型) {\n    if (技能实例?.技能运行数据) {\n      const 待充能时间点 = 技能实例?.技能运行数据?.待充能时间点 || []\n      // const 是否为充满后第一次释放 = !待充能时间点?.length\n      // const 当前时间 = this.当前时间 || 0\n\n      const 本次释放充能 =\n        (待充能时间点?.[待充能时间点.length - 1] || this.当前时间) + (当前技能?.技能CD || 0)\n      const 新待充能时间点 = [...待充能时间点, 本次释放充能]\n      技能实例?.更新技能运行数据({\n        待充能时间点: 新待充能时间点,\n      })\n    }\n  }\n\n  // ----------------- 时间、GCD、CD相关算法 end----------------- //\n\n  // 添加战斗日志\n  添加战斗日志(log: 循环日志数据类型) {\n    const { 日志时间 = this.当前时间, ...rest } = log\n    this.战斗日志 = [\n      ...(this.战斗日志 || []),\n      {\n        日志时间: 日志时间,\n        ...rest,\n      },\n    ]\n  }\n\n  // 造成伤害\n  技能造成伤害(\n    来源,\n    伤害次数 = 1,\n    额外增益列表: string[] = [],\n    造成时间 = this.当前时间,\n    隐藏日志 = false,\n    技能等级 = 1\n  ) {\n    const 当前技能数据 = 技能系数?.find((item) => item.技能名称 === 来源)\n    const 技能增益列表 = 当前技能数据?.技能增益列表 || []\n    const 有关的buff列表 =\n      技能增益列表\n        ?.filter((item) => {\n          const 当前增益数据 = 转化buff和增益名称(item.增益名称, this.当前自身buff列表)\n          if (当前增益数据) {\n            if (造成时间) {\n              const 增益消失时间 = (当前增益数据?.刷新时间 || 0) + (当前增益数据?.最大持续时间 || 0)\n              return 造成时间 <= 增益消失时间 && !!当前增益数据\n            } else {\n              return !!当前增益数据?.当前层数\n            }\n          } else {\n            return false\n          }\n        })\n        ?.map((item) => item.增益名称) || []\n\n    const 总增益列表 = 有关的buff列表.concat(额外增益列表)\n\n    if (!隐藏日志) {\n      this.添加战斗日志({\n        日志: 来源,\n        日志类型: '造成伤害',\n        日志时间: 造成时间,\n        buff列表: 总增益列表 || [],\n        其他数据: {\n          伤害次数: 伤害次数,\n          技能等级: 技能等级,\n        },\n      })\n    }\n  }\n\n  检查GCD(当前技能: 循环基础技能数据类型, 技能实例, i) {\n    let GCD = 0\n    if (技能实例?.检查GCD) {\n      GCD = 技能实例?.检查GCD?.(i)\n    } else {\n      GCD = this.技能释放前检查GCD统一方法(当前技能)\n    }\n    return GCD\n  }\n\n  // 判断GCD，技能CD等\n  技能释放前(当前技能: 循环基础技能数据类型, 技能实例, i) {\n    let GCD = 0\n    let 等待CD = 0\n\n    // 判断是否为当前箭袋第一个技能\n    if (i >= 0) {\n      // 判断上一个技能对于本技能是否有GCD限制\n      if (当前技能?.技能GCD组) {\n        GCD = this.检查GCD(当前技能, 技能实例, i)\n      }\n      // 判断技能CD，如果存在CD。增加等待时间\n      if (当前技能?.技能CD) {\n        等待CD = this.技能释放前检查运行数据(当前技能, 技能实例, GCD)\n      }\n    }\n\n    const 是否是倒读条技能 = 当前技能?.是否为倒读条技能\n    const 是否为额外免费劈风令 =\n      当前技能?.技能名称 === '骤风劈风' && !!this.当前自身buff列表?.['茫缈']?.当前层数\n\n    const 延迟等待 =\n      this.当前时间 && 当前技能?.技能GCD组 !== '自身' && !是否是倒读条技能 && !是否为额外免费劈风令\n        ? this.网络延迟\n        : 0\n\n    const 技能计划释放时间 = this.当前时间 + GCD + 延迟等待\n    return {\n      技能计划释放时间: 技能计划释放时间,\n      技能预估释放时间: 技能计划释放时间 + 等待CD,\n      等待CD,\n    }\n  }\n\n  // 增加技能GCD\n  增加技能GCD(当前技能: 循环基础技能数据类型) {\n    // GCD处理\n    if (当前技能?.技能GCD组) {\n      let 待更新GCD组: string = 当前技能.技能GCD组 as string\n      if (当前技能.技能GCD组 === '自身') {\n        待更新GCD组 = 当前技能?.技能名称\n      }\n      if (待更新GCD组) {\n        this.GCD组[待更新GCD组] =\n          (this.GCD组[待更新GCD组] || 0) + 当前技能?.技能释放后添加GCD - this.加速等级\n      }\n    }\n  }\n\n  // 增加技能CD\n  增加技能CD(当前技能: 循环基础技能数据类型, 技能实例) {\n    // 技能CD处理\n    if (当前技能?.技能CD) {\n      if (技能实例?.技能释放后更新运行数据) {\n        技能实例.技能释放后更新运行数据?.()\n      } else {\n        this.技能释放后更新运行数据(当前技能, 技能实例)\n      }\n    }\n  }\n\n  技能成功开始释放(当前技能: 循环基础技能数据类型, 技能实例, 是否为读条技能) {\n    this.增加技能GCD(当前技能)\n    if (当前技能.技能名称 === '饮羽簇') {\n      // 读条引在读条结束以后进入CD\n      if (!this.当前自身buff列表?.['橙武']?.当前层数 && !是否为读条技能) {\n        this.增加技能CD(当前技能, 技能实例)\n      }\n    } else {\n      this.增加技能CD(当前技能, 技能实例)\n    }\n  }\n\n  // 判断添加GCD等\n  技能释放后(\n    当前技能: 循环基础技能数据类型,\n    计划释放时间: number,\n    开始读条时间,\n    开始释放时间,\n    是否为读条技能,\n    技能实例,\n    释放时标鹄层数: number\n  ) {\n    const 技能释放记录结果 = 技能实例?.获取技能释放记录结果?.() || {}\n\n    // 技能释放记录\n    this.技能释放记录.push({\n      技能名称: 当前技能?.技能名称,\n      计划释放时间,\n      实际释放时间: 开始释放时间,\n      开始读条时间: 开始读条时间,\n      是否为读条技能: 是否为读条技能,\n      技能释放记录结果: {\n        ...技能释放记录结果,\n        释放时标鹄层数,\n      },\n    })\n  }\n\n  清空buff调用函数(对象: '自身' | '目标') {\n    const buff列表 = 对象 === '自身' ? this.当前自身buff列表 : this.当前目标buff列表\n\n    // 更新目标buff\n    Object.keys(buff列表).forEach((key) => {\n      const buff对象 = buff列表[key]\n      const buff应该消失时间 = (buff对象?.刷新时间 || 0) + (buff对象?.最大持续时间 || 0)\n      const 消失层数 = buff对象?.自然消失失去层数 || buff对象?.最大层数\n      if (buff应该消失时间 < this.当前时间) {\n        this.卸除buff({ 名称: key, 对象, 事件时间: buff应该消失时间, 卸除层数: 消失层数 })\n      }\n    })\n  }\n\n  清空已经消失的buff() {\n    // 更新目标buff\n    this.清空buff调用函数('目标')\n    // 更新自身buff\n    this.清空buff调用函数('自身')\n  }\n\n  // 对当前的DOT进行已过期的结算和剩余时间更新\n  DOT结算与更新() {\n    // this.技能类实例集合?.贯穿?.结算贯穿伤害()\n  }\n\n  // 模拟轮次开始\n  本轮模拟开始前() {\n    // 增加网络延迟，0时不增加延迟\n    this.重置循环执行结果()\n    this.事件结算()\n  }\n\n  // 事件结算\n  事件结算() {\n    this.待生效事件结算()\n    // this.清空已经消失的buff()\n    this.DOT结算与更新()\n    // this.普通攻击结算()\n  }\n\n  // 模拟轮次释放结束\n  本轮模拟结束后() {\n    // 判断buff列表，清空已经消失的buff\n    this.清空已经消失的buff()\n    this.对所有有CD技能检查和充能()\n  }\n\n  // 技能释放校验\n  技能释放校验(技能实例, 当前技能) {\n    const 体态校验结果: any = this.能量校验()\n    const 释放判断结果 = 技能实例.释放\n      ? 技能实例.释放?.() || { 可以释放: true }\n      : { 可以释放: true }\n    const 校验结果 = {\n      可以释放: 体态校验结果.可以释放 && 释放判断结果.可以释放,\n      异常信息: 体态校验结果.异常信息 || 释放判断结果.异常信息,\n    }\n    if (校验结果.可以释放) {\n      this.添加战斗日志?.({\n        日志: 当前技能?.技能名称,\n        日志类型: '释放技能',\n      })\n    }\n    return 校验结果\n  }\n\n  // 技能释放异常\n  技能释放异常(校验结果, 当前技能, i) {\n    this.添加战斗日志({\n      日志: `循环在第${i + 1}个技能${当前技能?.技能名称}异常终止`,\n      日志类型: '循环异常',\n    })\n    this.循环执行结果 = '异常'\n    if (校验结果?.异常信息) {\n      this.循环异常信息 = {\n        异常索引: i + 1,\n        异常信息: 校验结果?.异常信息,\n      }\n    }\n  }\n\n  待生效事件结算(结算判断时间 = this.当前时间) {\n    if (this.待生效事件队列.length) {\n      // 轮训执行完成所有的事件\n      const 轮训执行事件 = () => {\n        if (this.待生效事件队列[0]?.事件时间 <= 结算判断时间) {\n          // 先推进时间到事件时间\n          const 当前事件 = this.待生效事件队列[0]\n          this.DOT结算与更新()\n          this.增加时间(当前事件.事件时间 - this.当前时间)\n          this.添加战斗日志?.({\n            日志: `事件【${当前事件.事件名称}】触发`,\n            日志类型: '技能释放结果',\n            日志时间: this.当前时间,\n          })\n          if (当前事件.事件名称?.includes('技能读条')) {\n            const 技能名称 = 当前事件?.事件备注?.技能名称\n            if (技能名称 && this.技能类实例集合?.[技能名称]) {\n              this.技能类实例集合?.[技能名称]?.读条伤害()\n            }\n          } else if (当前事件.事件名称?.includes('卸除buff')) {\n            if (当前事件?.事件备注?.buff名称) {\n              this.卸除buff({\n                名称: 当前事件?.事件备注?.buff名称,\n                对象: 当前事件?.事件备注?.buff对象,\n                卸除层数: 当前事件?.事件备注?.卸除层数,\n              })\n            }\n          } else if (当前事件.事件名称?.includes('经脉循行_秒回')) {\n            this.技能类实例集合?.经脉循行?.经脉循行每秒回复()\n          } else if (当前事件.事件名称?.includes('骤风造成伤害')) {\n            this.技能类实例集合?.骤风令?.骤风造成伤害()\n          } else if (当前事件.事件名称?.includes('横驱风靡造成伤害')) {\n            this.技能类实例集合?.抟风令?.横驱风靡造成伤害()\n          }\n          this.待生效事件队列?.shift()\n          if (this.待生效事件队列.length) {\n            轮训执行事件()\n          }\n        }\n      }\n\n      轮训执行事件()\n      // this.待生效事件队列 = [...未生效事件]\n    }\n  }\n\n  添加待生效事件队列(传入数据: 待生效事件[], 事件覆盖 = false) {\n    let 新待生效事件队列: 待生效事件[] = []\n    // 把原来事件中的同名事件修改时间\n    if (事件覆盖) {\n      if (this.待生效事件队列?.some((item) => item.事件名称 === 传入数据?.[0]?.事件名称)) {\n        新待生效事件队列 = this.待生效事件队列.map((item) => {\n          if (item.事件名称 === 传入数据?.[0]?.事件名称) {\n            return 传入数据?.[0]\n          } else {\n            return item\n          }\n        })\n      } else {\n        新待生效事件队列 = (this.待生效事件队列 || []).concat(传入数据 || [])\n      }\n    } else {\n      新待生效事件队列 = (this.待生效事件队列 || []).concat(传入数据 || [])\n    }\n    // 由于不确定待生效事件时间分布，重新排序\n    新待生效事件队列.sort((a, b) => {\n      return (a?.事件时间 || 0) - (b?.事件时间 || 0)\n    })\n    this.待生效事件队列 = [...新待生效事件队列]\n  }\n\n  删除待生效事件队列(事件名称) {\n    const 新待生效事件队列: 待生效事件[] = [...(this.待生效事件队列 || [])].filter(\n      (item) => item.事件名称 !== 事件名称\n    )\n    // 由于不确定待生效事件时间分布，重新排序\n    新待生效事件队列.sort((a, b) => {\n      return (a?.事件时间 || 0) - (b?.事件时间 || 0)\n    })\n    this.待生效事件队列 = [...新待生效事件队列]\n  }\n\n  // ----------------- 通用函数 end----------------- //\n\n  // ----------------- 职业特殊函数 start----------------- //\n  回复能量(数值, 类型: '任脉' | '督脉' = '任脉') {\n    this.角色状态信息.能量信息[类型] = Math.min(this.角色状态信息.能量信息[类型] + 数值, 100)\n    this.技能类实例集合.经脉循行.经脉循行添加校验()\n    this.添加战斗日志({\n      日志: `${类型}值增加变为${this.角色状态信息.能量信息[类型]}`,\n      日志类型: '技能释放结果',\n    })\n  }\n\n  消耗能量(数值, 类型: '任脉' | '督脉' = '任脉') {\n    this.角色状态信息.能量信息[类型] = Math.max(this.角色状态信息.能量信息[类型] - 数值, 0)\n    this.技能类实例集合.经脉循行.经脉循行卸除校验()\n    this.添加战斗日志({\n      日志: `${类型}值减少变为${this.角色状态信息.能量信息[类型]}`,\n      日志类型: '技能释放结果',\n    })\n  }\n\n  神封校验() {\n    if (this.校验奇穴是否存在('神封')) {\n      const 当前总能量 = this.角色状态信息.能量信息.任脉 + this.角色状态信息.能量信息.督脉\n\n      return 当前总能量 >= 60\n    } else {\n      return false\n    }\n  }\n\n  神封触发() {\n    this?.回复能量(5, '任脉')\n    this?.回复能量(5, '督脉')\n  }\n\n  消耗当前一半能量() {\n    this.角色状态信息.能量信息.任脉 = this.角色状态信息.能量信息.任脉 * 0.5\n    this.角色状态信息.能量信息.督脉 = this.角色状态信息.能量信息.督脉 * 0.5\n  }\n\n  判断逆脉() {\n    if (this.校验奇穴是否存在('逆脉')) {\n      if (!this.当前目标buff列表?.['绝脉']?.当前层数) {\n        this.添加buff?.({ 名称: '绝脉', 对象: '目标' })\n        this.添加buff?.({ 名称: '绝脉', 对象: '目标' })\n        this.添加buff?.({ 名称: '绝脉', 对象: '目标' })\n      }\n    }\n  }\n\n  判断扬尘() {\n    if (this?.当前自身buff列表?.['扬尘']?.当前层数) {\n      this?.卸除buff({ 名称: '扬尘', 对象: '自身', 卸除层数: 1 })\n    }\n  }\n\n  // ----------------- 职业特殊函数 end ----------------- //\n\n  // 其他调用函数，供外层调用\n  // 模拟函数，一个技能的释放生命周期\n  模拟() {\n    for (let i = 0; i < this.测试循环.length; i++) {\n      if (i === 0) {\n        this.技能类实例集合.经脉循行.初始化经脉循行(this.起手回能帧)\n      }\n      this.本轮模拟开始前()\n      const 当前技能 = this?.技能基础数据?.find((item) => item?.技能名称 === this.测试循环[i])\n      if (当前技能) {\n        const 技能实例 = this.技能类实例集合[当前技能?.技能名称]\n        if (技能实例) {\n          技能实例?.释放前初始化?.()\n          // 获取预估技能释放时间，处理预估时间前的所有待生效事件，推进时间轴\n          const { 技能计划释放时间, 等待CD, 技能预估释放时间 } = this.技能释放前(\n            当前技能,\n            技能实例,\n            i\n          )\n          const 读条时间 = 技能实例?.获取读条时间?.(i) || 0\n          const 是否为读条技能 = !!读条时间\n          if (读条时间) {\n            技能实例?.读条?.(技能预估释放时间)\n          }\n          this.待生效事件结算(技能预估释放时间)\n          this.技能GCD和CD处理(等待CD, 技能预估释放时间, 当前技能, 技能实例)\n          // this.清空已经消失的buff()\n          const 开始读条时间 = 是否为读条技能 ? 技能预估释放时间 : undefined\n          const 结束读条时间 = 是否为读条技能 ? 技能预估释放时间 + 读条时间 : 0\n          this.技能成功开始释放(当前技能, 技能实例, 是否为读条技能)\n          const 释放校验结果 = this.技能释放校验(技能实例, 当前技能)\n          const 是否为最后一个技能 = i === this.测试循环.length - 1\n          const 开始释放时间 = this.当前时间\n          const 释放时标鹄层数 = this.当前目标buff列表?.['标鹄']?.当前层数 || 0\n          this.清空已经消失的buff()\n          if (释放校验结果?.可以释放) {\n            技能实例.命中?.(是否为最后一个技能)\n            技能实例.造成伤害?.(i)\n            // 推进到读条结束时间\n            if (结束读条时间 && 结束读条时间 > this.当前时间) {\n              this.待生效事件结算(结束读条时间)\n            }\n            技能实例.释放后?.()\n          } else {\n            this.技能释放异常(释放校验结果, 当前技能, i)\n            break\n          }\n          this.技能释放后(\n            当前技能,\n            技能计划释放时间,\n            开始读条时间,\n            开始释放时间,\n            是否为读条技能,\n            技能实例,\n            释放时标鹄层数\n          )\n        }\n      }\n      this.本轮模拟结束后()\n    }\n  }\n\n  // 将日志按时间排序\n  日志排序() {\n    const 新日志 = [...(this.战斗日志 || [])]\n\n    新日志.sort((a, b) => {\n      return (a?.日志时间 || 0) - (b?.日志时间 || 0)\n    })\n\n    // const 普通攻击处理日志 = this.普通攻击日志(新日志)\n\n    // 普通攻击处理日志.sort((a, b) => {\n    //   return (a?.日志时间 || 0) - (b?.日志时间 || 0)\n    // })\n\n    // this.战斗日志 = [...(普通攻击处理日志 || [])]\n\n    this.战斗日志 = [...(新日志 || [])]\n  }\n\n  // 普通攻击日志\n  普通攻击日志 = (战斗日志: 循环日志数据类型[]) => {\n    const 所有释放技能数组: any = 战斗日志.filter((item) => {\n      return item?.日志类型 === '释放技能'\n    })\n    // 读条期间不释放普通攻击\n    const 找出所有读条技能的区间: Array<{ 开始时间: number; 结束时间: number; 是否读条: boolean }> =\n      所有释放技能数组\n        .map((item, index) => {\n          const 是否读条 = item?.日志?.includes('抟风令')\n          return {\n            开始时间: item?.日志时间,\n            结束时间: 所有释放技能数组[index + 1]\n              ? 所有释放技能数组[index + 1]?.日志时间\n              : item?.日志时间,\n            是否读条: 是否读条,\n          }\n        })\n        .filter((item: any) => {\n          return item?.是否读条\n        })\n    const 战斗最大时间 = this.当前时间\n    const 战斗日志副本 = [...战斗日志]\n    const 普通攻击时间列表: number[] = []\n    // console.info('找出所有读条技能的区间', 找出所有读条技能的区间)\n\n    for (let i = 0; i < 战斗最大时间; i++) {\n      // 扇子武器攻击速度 MeleeWeaponAttackSpeed 是 16\n      if (\n        (普通攻击时间列表[普通攻击时间列表.length - 1] || 0) + 16 <= i ||\n        !普通攻击时间列表?.length\n      ) {\n        // 判断本帧是否在读条技能时间内\n        if (!找出所有读条技能的区间?.some((item) => item?.开始时间 < i && item?.结束时间 > i)) {\n          普通攻击时间列表.push(i)\n        }\n      }\n    }\n\n    普通攻击时间列表.forEach((item) => {\n      战斗日志副本.push({\n        日志: `云合扇法`,\n        日志类型: '造成伤害',\n        日志时间: item,\n        buff列表: ['玉枕', '神门'],\n      })\n    })\n\n    return 战斗日志副本\n  }\n\n  获取当前各技能的运行状态() {\n    const 各技能当前运行状态 = {}\n    ;(Object.keys(this.技能类实例集合) || []).forEach((key) => {\n      各技能当前运行状态[key] = this.技能类实例集合[key]?.技能运行数据 || {}\n    })\n    return 各技能当前运行状态\n  }\n\n  获取各DOT的运行状态() {\n    const DOT运行数据 = {}\n    ;(Object.keys(this.技能类实例集合) || []).forEach((key) => {\n      if (this.技能类实例集合[key]?.DOT运行数据) {\n        DOT运行数据[key] = this.技能类实例集合[key]?.DOT运行数据 || {}\n      }\n    })\n    return DOT运行数据\n  }\n}\n\nexport default 循环主类\n\nexport type 循环主类类型 = typeof 循环主类\n","/**\n * 定义模拟循环类\n */\n\nimport 循环主类 from './main'\nimport type { SimulatorCycleProps } from './main'\n\nconst 模拟循环 = (props: SimulatorCycleProps) => {\n  const 模拟实例 = new 循环主类(props)\n  模拟实例.模拟()\n\n  模拟实例.日志排序()\n\n  const 当前各技能运行状态 = 模拟实例.获取当前各技能的运行状态()\n  const 当前DOT运行状态 = 模拟实例.获取各DOT的运行状态()\n\n  return {\n    最终日志: 模拟实例.战斗日志,\n    当前自身buff列表: 模拟实例.当前自身buff列表,\n    当前目标buff列表: 模拟实例.当前目标buff列表,\n    角色状态信息: 模拟实例.角色状态信息,\n    当前时间: 模拟实例.当前时间,\n    循环执行结果: 模拟实例.循环执行结果,\n    循环异常信息: 模拟实例.循环异常信息,\n    技能释放记录: 模拟实例.技能释放记录,\n    当前各技能运行状态,\n    当前DOT运行状态,\n    当前GCD组: 模拟实例.GCD组,\n    技能基础数据: 模拟实例.技能基础数据,\n  }\n}\n\nexport default 模拟循环\n","import { 循环数据 } from '@/@types/循环'\n\nconst 模拟器_一阳来复_1延迟: Partial<循环数据> = {\n  名称: '模拟器_一阳来复_1延迟',\n  奇穴: [\n    '阳池',\n    '涌泉',\n    '封府',\n    '反朴',\n    '神封',\n    '悬枢',\n    '神门',\n    '出岫',\n    '玉枕',\n    '茫缈',\n    '丘墟',\n    '一阳来复',\n  ],\n  技能序列: [\n    '引窍',\n    '破穴',\n    '一阳来复',\n    '风流云散',\n    '骤风令',\n    '劈风令',\n    '引窍',\n    '断脉',\n    '截阳',\n    '断脉',\n    '抟风令断',\n    '引窍',\n    '断脉',\n    '截阳',\n    '断脉',\n    '引窍',\n    '破穴',\n    '一阳来复',\n    '截阳',\n    '引窍',\n    '断脉',\n    '截阳',\n    '断脉',\n    '风流云散',\n    '引窍',\n    '骤风令',\n    '劈风令',\n    '断脉',\n    '截阳',\n    '断脉',\n    '引窍',\n    '破穴',\n    '一阳来复',\n    '截阳',\n    '引窍',\n    '断脉',\n    '截阳',\n    '断脉',\n    '引窍',\n    '断脉',\n    '截阳',\n    '断脉',\n    '风流云散',\n    '截阳',\n    '引窍',\n    '破穴',\n    '一阳来复',\n    '截阳',\n    '引窍',\n    '骤风令',\n    '劈风令',\n    '断脉',\n    '截阳',\n    '断脉',\n    '引窍',\n    '抟风令断',\n    '断脉',\n    '截阳',\n    '断脉',\n    '引窍',\n    '破穴',\n    '一阳来复',\n    '风流云散',\n    '截阳',\n    '引窍',\n    '断脉',\n    '截阳',\n    '断脉',\n    '引窍',\n    '骤风令',\n    '劈风令',\n    '断脉',\n    '截阳',\n    '断脉',\n    '引窍',\n    '破穴',\n    '一阳来复',\n    '截阳',\n    '引窍',\n    '断脉',\n    '截阳',\n    '断脉',\n    '风流云散',\n    '引窍',\n    '断脉',\n    '截阳',\n    '断脉',\n    '截阳',\n    '引窍',\n    '破穴',\n    '一阳来复',\n    '截阳',\n    '引窍',\n    '骤风令',\n    '劈风令',\n    '断脉',\n    '截阳',\n    '断脉',\n    '引窍',\n    '抟风令断',\n    '断脉',\n    '截阳',\n    '断脉',\n    '引窍',\n    '破穴',\n    '一阳来复',\n    '风流云散',\n    '截阳',\n    '引窍',\n    '断脉',\n    '截阳',\n    '断脉',\n    '引窍',\n    '骤风令',\n    '劈风令',\n    '断脉',\n    '截阳',\n    '断脉',\n    '引窍',\n    '破穴',\n    '一阳来复',\n    '截阳',\n    '引窍',\n    '断脉',\n    '截阳',\n    '断脉',\n    '风流云散',\n    '引窍',\n    '断脉',\n    '截阳',\n    '断脉',\n    '截阳',\n    '引窍',\n    '破穴',\n    '一阳来复',\n    '截阳',\n    '引窍',\n    '骤风令',\n    '劈风令',\n    '断脉',\n    '截阳',\n    '断脉',\n    '引窍',\n    '抟风令断',\n    '断脉',\n    '截阳',\n    '断脉',\n    '引窍',\n    '破穴',\n    '一阳来复',\n    '风流云散',\n    '截阳',\n    '引窍',\n  ],\n}\n\nexport default 模拟器_一阳来复_1延迟\n","// import 模拟器_新手工整 from './快速导入默认循环/模拟器_新手工整'\nimport 模拟器_一阳来复_1延迟 from './快速导入默认循环/模拟器_一阳来复_1延迟'\n\nexport default [模拟器_一阳来复_1延迟]\n","import { Button, Divider, Dropdown, Menu, message, Popover, Select, Tooltip } from 'antd'\nimport React from 'react'\nimport { 循环基础技能数据类型, 模拟信息类型 } from '../../simulator/type'\nimport 快速导入默认循环 from '../../constant/快速导入默认循环'\nimport { useAppSelector } from '@/hooks'\nimport { 延迟设定 } from '@/数据/常量'\nimport { 判断有无橙武循环数据 } from '../../utils'\nimport './index.css'\n\ninterface CycleModalHeaderProps {\n  cycle: 循环基础技能数据类型[]\n  设置自定义循环保存弹窗: (e: boolean) => void\n  清空循环: () => void\n  快速导入循环: (e: 循环基础技能数据类型[]) => void\n  更新奇穴弹窗展示: (e: boolean) => void\n  更新奇穴信息: (e: string[]) => void\n  起手回能帧: number\n  更新起手回能帧: (e: number) => void\n  加速等级: number\n  更新加速等级: (e: number) => void\n  网络延迟: number\n  更新网络延迟: (e: number) => void\n  起手能量: { 任脉: number; 督脉: number }\n  更新起手能量: (e: { 任脉: number; 督脉: number }) => void\n  模拟信息: 模拟信息类型\n  大橙武模拟: boolean\n}\n\nfunction CycleModalHeader(props: CycleModalHeaderProps) {\n  const {\n    cycle,\n    设置自定义循环保存弹窗,\n    清空循环,\n    快速导入循环,\n    更新奇穴弹窗展示,\n    更新奇穴信息,\n    起手回能帧,\n    更新起手回能帧,\n    加速等级,\n    更新加速等级,\n    // 更新宠物顺序,\n    起手能量,\n    更新起手能量,\n    网络延迟,\n    更新网络延迟,\n    模拟信息,\n    大橙武模拟,\n  } = props\n\n  const 自定义循环 = useAppSelector((state) => state?.data?.自定义循环列表)\n\n  const 快捷添加循环 = (名称, 类型 = '默认') => {\n    const 数据源 = 类型 === '默认' ? 快速导入默认循环 : 自定义循环\n\n    const 当前循环数据 = 数据源?.find((item) => item.名称 === 名称)\n\n    const 技能序列信息 = (当前循环数据?.技能序列 || [])\n      .map((item) => {\n        return 模拟信息?.技能基础数据?.find((a) => a?.技能名称 === item) as 循环基础技能数据类型\n      })\n      .filter((item) => item)\n\n    快速导入循环(技能序列信息)\n    if (当前循环数据?.奇穴) {\n      更新奇穴信息(当前循环数据?.奇穴)\n    }\n  }\n\n  const 粘贴导入 = () => {\n    navigator.clipboard.readText().then((clipboardData) => {\n      if (!clipboardData) {\n        message.error('粘贴板内无可导入数据，请检查或重新复制')\n      } else {\n        const list = clipboardData?.split(',')\n        const 技能序列信息 = (list || [])\n          .map((item) => {\n            return 模拟信息?.技能基础数据?.find((a) => a?.技能名称 === item) as 循环基础技能数据类型\n          })\n          .filter((item) => item)\n        if (技能序列信息.length) {\n          快速导入循环(技能序列信息)\n          message.success('数据已全部导入')\n        } else {\n          message.error('粘贴板内无可导入数据，请检查或重新复制')\n        }\n      }\n    })\n  }\n\n  return (\n    <div className={'cycle-simulator-modal-header space-between'}>\n      <div className={'cycle-simulator-modal-title-wrapper'}>\n        <h1 className={'cycle-simulator-modal-title'}>循环模拟</h1>\n        <Popover\n          content={\n            <div>\n              <p>1、点击下方技能按钮添加至循环内</p>\n              <p>2、可以整行删除、复制本行到最后一行</p>\n              <p>3、可以在单行内拖动改变技能顺序</p>\n              <p>\n                更多使用说明详见：\n                <a href='https://www.jx3box.com/tool/75292' target='_blank' rel='noreferrer'>\n                  使用手册及FAQ\n                </a>\n              </p>\n            </div>\n          }\n        >\n          <span className={'cycle-simulator-help'}>如何使用</span>\n        </Popover>\n        {/* <Popover\n          content={\n            <div>\n              目前未支持的功能\n            </div>\n          }\n        >\n          <span className={'cycle-not-support'}>未支持功能</span>\n        </Popover> */}\n      </div>\n      <div className={'cycle-simulator-header-btns'}>\n        <Tooltip title='起手任脉' placement='left'>\n          <Select\n            size='small'\n            className={'cycle-simulator-header-select'}\n            value={起手能量?.任脉}\n            style={{ width: 70 }}\n            showSearch\n            popupMatchSelectWidth={120}\n            filterOption={(input, option) => {\n              return option?.value?.toString()?.includes(input) || false\n            }}\n            onChange={(e) => 更新起手能量({ ...起手能量, 任脉: e })}\n            options={Array.from({ length: 101 }, (v, i) => i).map((a) => {\n              const value = 100 - a\n              return {\n                value: value,\n                label: `${value}`,\n              }\n            })}\n          />\n        </Tooltip>\n        <Tooltip title='起手督脉' placement='left'>\n          <Select\n            size='small'\n            className={'cycle-simulator-header-select'}\n            value={起手能量?.督脉}\n            style={{ width: 70 }}\n            showSearch\n            popupMatchSelectWidth={120}\n            filterOption={(input, option) => {\n              return option?.value?.toString()?.includes(input) || false\n            }}\n            onChange={(e) => 更新起手能量({ ...起手能量, 督脉: e })}\n            options={Array.from({ length: 101 }, (v, i) => i).map((a) => {\n              const value = 100 - a\n              return {\n                value: value,\n                label: `${value}`,\n              }\n            })}\n          />\n        </Tooltip>\n        <Tooltip title='起手第一次经脉循行Buff回能帧节点' placement='left'>\n          <Select\n            size='small'\n            className={'cycle-simulator-header-select'}\n            value={起手回能帧}\n            style={{ width: 70 }}\n            onChange={更新起手回能帧}\n            options={Array.from({ length: 16 }, (v, i) => i).map((a) => {\n              return {\n                value: a,\n                label: `${a}帧`,\n              }\n            })}\n          />\n        </Tooltip>\n        <Select\n          size='small'\n          className={'cycle-simulator-header-select'}\n          value={加速等级}\n          onChange={更新加速等级}\n          options={Array.from({ length: 6 }, (v, i) => i).map((a) => {\n            return {\n              value: a,\n              label: `${a}段加速`,\n            }\n          })}\n        />\n        <Select\n          size='small'\n          className={'cycle-simulator-header-select'}\n          value={网络延迟}\n          onChange={更新网络延迟}\n          options={延迟设定}\n        />\n        <Dropdown\n          overlay={\n            <Menu>\n              {判断有无橙武循环数据(快速导入默认循环, 大橙武模拟)?.map((item) => {\n                return (\n                  <Menu.Item key={item?.名称} onClick={() => 快捷添加循环(item?.名称)}>\n                    {item?.名称}\n                  </Menu.Item>\n                )\n              })}\n              {判断有无橙武循环数据(自定义循环, 大橙武模拟)?.length\n                ? 判断有无橙武循环数据(自定义循环, 大橙武模拟).map((item, index) => {\n                    return (\n                      <Menu.Item key={index} onClick={() => 快捷添加循环(item?.名称, '自定义')}>\n                        {item?.名称}\n                      </Menu.Item>\n                    )\n                  })\n                : null}\n              <Divider style={{ margin: '4px 0' }} />\n              <Menu.Item key='ctrlv' onClick={粘贴导入}>\n                粘贴导入\n              </Menu.Item>\n            </Menu>\n          }\n        >\n          <Button size='small'>导入循环</Button>\n        </Dropdown>\n        <Tooltip title={'本奇穴设置只会在循环模拟器内生效，不影响外部'}>\n          <Button size='small' onClick={() => 更新奇穴弹窗展示(true)}>\n            奇穴设置\n          </Button>\n        </Tooltip>\n        <Button size='small' onClick={() => 清空循环()} danger>\n          清空循环\n        </Button>\n        <Tooltip title='自定义循环和原计算器其他循环的dps会心期望计算方式不同。会导致最终数值偏差。请勿进行跨循环比较。'>\n          <Button\n            size='small'\n            type='primary'\n            onClick={() => 设置自定义循环保存弹窗(true)}\n            disabled={cycle?.length < 1 || 模拟信息?.循环执行结果 === '异常'}\n          >\n            保存为自定义循环\n          </Button>\n        </Tooltip>\n      </div>\n    </div>\n  )\n}\n\nexport default CycleModalHeader\n","import React from 'react'\nimport { 角色状态信息类型 } from '../../../simulator/type'\nimport { Progress } from 'antd'\nimport './index.css'\n\ninterface TitaiProps {\n  角色状态信息: 角色状态信息类型\n}\n\nfunction Enerty(props: TitaiProps) {\n  const { 角色状态信息 } = props\n\n  return (\n    <div className={'cycle-status-bar-content cycle-status-energy-content'}>\n      <div className={'cycle-status-bar-title'}>能量</div>\n      <div className={'cycle-status-bar-enerty-wrap'}>\n        <div className={'cycle-status-bar-enerty-item'}>\n          <span>任脉</span>\n          <Progress\n            className={'cycle-status-bar-enerty'}\n            percent={Math.floor(角色状态信息?.能量信息?.任脉)}\n            format={(percent) => `${percent}`}\n          />\n        </div>\n        <div className={'cycle-status-bar-enerty-item'}>\n          <span>督脉</span>\n          <Progress\n            className={'cycle-status-bar-enerty'}\n            percent={Math.floor(角色状态信息?.能量信息?.督脉)}\n            format={(percent) => `${percent}`}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Enerty\n","import React, { useMemo } from 'react'\n\nimport { Space, Tooltip } from 'antd'\nimport { 每秒郭氏帧 } from '@/数据/常量'\nimport { Buff枚举, DOT列表 } from '../../../simulator/type'\nimport { 原始Buff数据 } from '../../../constant/skill'\nimport './index.css'\n\ninterface BuffProps {\n  title: string\n  buff列表: Buff枚举\n  DOT列表?: DOT列表\n  当前时间点: number\n  奇穴信息?: string[]\n}\n\nfunction Buff(props: BuffProps) {\n  const { title, buff列表, DOT列表 = {}, 奇穴信息, 当前时间点 } = props\n\n  const 当前buff列表 = Object.keys(buff列表).map((item) => buff列表[item])\n  const 最终显示buff列表 = useMemo(() => {\n    const res = [...(当前buff列表 || [])]\n    // 判断经脉循行\n    if (奇穴信息?.includes('玉枕') && buff列表?.['经脉循行']?.当前层数) {\n      res.push(原始Buff数据?.['玉枕'])\n    }\n    return res\n  }, [当前buff列表, buff列表, 奇穴信息])\n  const 当前Dot列表 = Object.keys(DOT列表)\n    .map((item) => {\n      const 原始数据 = 原始Buff数据?.[item]\n      return {\n        ...DOT列表[item],\n        ...原始数据,\n      }\n    })\n    ?.filter((item) => item?.待生效数据?.length)\n\n  return (\n    <div className={'cycle-status-bar-content cycle-status-bar-buff-content'}>\n      <div className={'cycle-status-bar-title'}>{title}</div>\n      <Space className={'cycle-status-bar-buff-list'} size={[8, 8]} wrap>\n        {最终显示buff列表?.length\n          ? 最终显示buff列表.map((item) => {\n              const 应该消失时间 = (item.刷新时间 || 0) + (item.最大持续时间 || 0)\n              const 剩余时间 = 应该消失时间 - 当前时间点 || 0\n              const 剩余时间秒 = (剩余时间 / 每秒郭氏帧).toFixed(1)\n              const 层数 = item.当前层数 || 0\n              return (\n                <div className={'cycle-status-bar-buff'} key={item.名称}>\n                  <div className={'cycle-status-bar-buff-item'}>\n                    <Tooltip\n                      title={\n                        <div>\n                          <>{`${item.名称}${层数 > 1 ? `${层数}层` : ''}`}</>\n                          <p>{item.备注}</p>\n                        </div>\n                      }\n                    >\n                      <img className={'cycle-status-bar-buff-img'} src={item.图标} />\n                    </Tooltip>\n                    {层数 > 1 ? (\n                      <span className={'cycle-status-bar-buff-count'}>{item.当前层数}</span>\n                    ) : null}\n                  </div>\n                  <p\n                    className={`cycle-status-bar-buff-second ${\n                      剩余时间 < 每秒郭氏帧 * 2 ? 'cycle-status-bar-buff-second-limit' : ''\n                    }`}\n                  >\n                    {item.名称 !== '经脉循行' ? (+剩余时间秒 > 0 ? 剩余时间秒 : null) : null}\n                  </p>\n                </div>\n              )\n            })\n          : null}\n        {当前Dot列表?.length\n          ? 当前Dot列表.map((item) => {\n              const 最后一跳 = item.待生效数据?.[item.待生效数据.length - 1] || {}\n              const 应该消失时间 = 最后一跳?.生效时间 || 0\n              const 剩余时间 = 应该消失时间 - 当前时间点 || 0\n              const 剩余时间秒 = (剩余时间 / 每秒郭氏帧).toFixed(1)\n              const 层数 = 最后一跳.当前层数 || 0\n              return (\n                <div className={'cycle-status-bar-buff'} key={item.名称}>\n                  <div className={'cycle-status-bar-buff-item'}>\n                    <Tooltip\n                      title={\n                        <div>\n                          <p>{`${item.名称}${层数 > 1 ? `${层数}层` : ''}`}</p>\n                          <p>{item.备注}</p>\n                        </div>\n                      }\n                    >\n                      <img className={'cycle-status-bar-buff-img'} src={item.图标} />\n                    </Tooltip>\n                    {层数 > 1 ? (\n                      <span className={'cycle-status-bar-buff-count'}>{层数}</span>\n                    ) : null}\n                  </div>\n                  <p\n                    className={`cycle-status-bar-buff-second ${\n                      剩余时间 < 每秒郭氏帧 * 2 ? 'cycle-status-bar-buff-second-limit' : ''\n                    }`}\n                  >\n                    {剩余时间秒}\n                  </p>\n                </div>\n              )\n            })\n          : null}\n        {!当前buff列表?.length && !当前Dot列表?.length ? (\n          <p className={'cycle-buff-empty'}>无</p>\n        ) : null}\n      </Space>\n    </div>\n  )\n}\n\nexport default Buff\n","import React from 'react'\nimport { Modal, ModalProps, Table } from 'antd'\nimport 循环模拟技能基础数据, { 日志类型数组 } from '../../../../constant/skill'\nimport { 每秒郭氏帧 } from '@/数据/常量'\nimport { 循环日志数据类型 } from '../../../../simulator/type'\nimport '../../../../index.css'\n\ninterface BattleLogModalProps extends ModalProps {\n  logData: 循环日志数据类型[]\n}\n\nconst BattleLogModal: React.FC<BattleLogModalProps> = (props) => {\n  const { open, onCancel, logData } = props\n\n  const columns = [\n    {\n      title: '日志',\n      dataIndex: '日志',\n      filters: [\n        ...循环模拟技能基础数据,\n        { 技能名称: '贯穿' },\n        { 技能名称: '标鹄' },\n        { 技能名称: '引爆' },\n        { 技能名称: '没石饮羽' },\n      ]?.map((item) => {\n        return {\n          text: item?.技能名称,\n          value: item?.技能名称,\n        }\n      }),\n      onFilter: (value: any, record) => {\n        return record.日志?.includes(value) || record?.日志类型?.includes(value)\n      },\n    },\n    {\n      title: '日志类型',\n      dataIndex: '日志类型',\n      filters: 日志类型数组?.map((item) => {\n        return {\n          text: item,\n          value: item,\n        }\n      }),\n      onFilter: (value: any, record) => record.日志类型.indexOf(value) === 0,\n    },\n    {\n      title: 'buff列表',\n      dataIndex: 'buff列表',\n      render: (_, record) => {\n        return record.日志类型 === '造成伤害' ? (_ || [])?.join(',') || '-' : '-'\n      },\n    },\n    {\n      title: '日志帧',\n      dataIndex: '日志时间',\n      render: (_) => {\n        return _\n      },\n    },\n    {\n      title: '日志秒',\n      dataIndex: '日志秒',\n      render: (_, row) => {\n        return row?.日志时间 / 每秒郭氏帧\n      },\n    },\n    // {\n    //   title: '造成伤害',\n    //   dataIndex: '造成伤害',\n    // },\n    // {\n    //   title: '造成总伤害',\n    //   dataIndex: '造成总伤害',\n    // },\n    // {\n    //   title: '秒伤',\n    //   dataIndex: '秒伤',\n    // },\n  ]\n\n  return (\n    <Modal\n      className='cycle-simulator-modal'\n      open={open}\n      onCancel={onCancel}\n      title={\n        <div className={'cycle-simulator-modal-header'}>\n          <h1 className={'cycle-simulator-modal-title'}>战斗日志</h1>\n        </div>\n      }\n      width={'80%'}\n      centered\n      footer={false}\n    >\n      <Table\n        dataSource={logData}\n        columns={columns}\n        size='small'\n        pagination={{ pageSize: 100, showTotal: (total) => total }}\n      />\n    </Modal>\n  )\n}\n\nexport default BattleLogModal\n","import React, { useMemo } from 'react'\nimport 结果统计 from '@/功能模块/计算结果/结果统计'\nimport { 循环日志数据类型 } from '../../../../simulator/type'\nimport { Divider, Popover } from 'antd'\nimport '../../../../index.css'\nimport { 计算结果技能列表类型 } from '@/@types/输出'\n\ninterface SkillCountModalProps {\n  open: boolean\n  onCancel: () => void\n  dpsList: 计算结果技能列表类型[]\n  total: number\n  logData: 循环日志数据类型[]\n}\n\nconst SkillCountModal: React.FC<SkillCountModalProps> = (props) => {\n  const { open, onCancel, total, dpsList, logData } = props\n\n  const { 引窍总倍率, 绝脉总倍率, 引窍统计数组, 绝脉统计数组 } = useMemo(() => {\n    const 引窍数组 = (logData || [])?.filter((item) => {\n      return item?.日志?.includes('引窍') && item?.日志类型?.includes('造成伤害')\n    })\n    const 绝脉数组 = (logData || [])?.filter((item) => {\n      return item?.日志?.includes('绝脉') && item?.日志类型?.includes('造成伤害')\n    })\n    const { 总倍率: 引窍总倍率, 统计数组: 引窍统计数组 } = 获取总倍率数组(引窍数组)\n    const { 总倍率: 绝脉总倍率, 统计数组: 绝脉统计数组 } = 获取总倍率数组(绝脉数组)\n    return {\n      引窍总倍率,\n      引窍统计数组,\n      绝脉总倍率,\n      绝脉统计数组,\n    }\n  }, [logData])\n\n  return (\n    <结果统计\n      title={\n        <div className={'cycle-simulator-modal-header space-between'}>\n          <h1 className={'cycle-simulator-modal-title'}>技能统计</h1>\n          <Popover\n            content={\n              <div className='ztg-cycle-simulator-skill-count-warp'>\n                <div className='ztg-cycle-simulator-skill-count-item'>\n                  <p>引窍倍率：{引窍总倍率}</p>\n                  <Divider style={{ margin: '4px 0' }} />\n                  {Object.keys(引窍统计数组).map((item) => {\n                    return (\n                      <p key={`引窍统计${item}`}>\n                        引窍·{item}：{引窍统计数组[item]}次\n                      </p>\n                    )\n                  })}\n                </div>\n                <div className='ztg-cycle-simulator-skill-count-item'>\n                  <p>绝脉倍率：{绝脉总倍率}</p>\n                  <Divider style={{ margin: '4px 0' }} />\n                  {Object.keys(绝脉统计数组).map((item) => {\n                    return (\n                      <p key={`绝脉统计${item}`}>\n                        绝脉·{item}：{绝脉统计数组[item]}次\n                      </p>\n                    )\n                  })}\n                </div>\n              </div>\n            }\n          >\n            <span className={'cycle-simulator-help'}>技能细节</span>\n          </Popover>\n        </div>\n      }\n      计算结果={{\n        总伤: total,\n        计算结果技能列表: dpsList,\n      }}\n      visible={open}\n      onClose={() => onCancel()}\n    />\n  )\n}\n\nexport default SkillCountModal\n\nexport const 获取对应实际倍率 = (日志) => {\n  return 日志?.其他数据?.技能等级 || 1\n}\n\nconst 获取总倍率数组 = (数组) => {\n  let 倍率 = 0\n\n  const 统计完整数据 = 数组\n    .map((item) => {\n      const 本次倍率 = 获取对应实际倍率(item)\n      倍率 = 倍率 + 本次倍率\n      return 本次倍率\n    })\n    .filter((item) => item !== -1)\n\n  const 统计数组 = 获取出现次数(统计完整数据)\n  return {\n    总倍率: 倍率,\n    统计数组,\n  }\n}\n\nfunction 获取出现次数(arr) {\n  return arr.reduce((acc, curr) => {\n    acc[curr] ? acc[curr]++ : (acc[curr] = 1)\n    return acc\n  }, {})\n}\n","import { 循环日志数据类型 } from '../../../../../simulator/type'\n\nconst 过滤的buff列表 = ['劲风簇追', '饮羽簇追']\n\nexport const 获取Buff覆盖率 = (日志: 循环日志数据类型[], 总战斗用时: number) => {\n  // 以buff个体分类，组成数字数组代表buff持续时间段\n  const Buff枚举: {\n    [key: string]: number[][]\n  } = {}\n  const 覆盖率 = {}\n\n  // 遍历日志塞入数组\n  for (let i = 0; i < 日志.length; i++) {\n    if (\n      (日志[i]?.日志类型 === '目标buff变动' || 日志[i]?.日志类型 === '自身buff变动') &&\n      (日志[i]?.日志?.includes('获得') || 日志[i]?.日志?.includes('失去'))\n    ) {\n      // 当前buff信息\n      const logName = 日志[i]?.日志\n      const type = logName?.includes('获得') ? 'get' : 'lose'\n      const buffName = type === 'get' ? logName?.split('获得')?.[1] : logName?.split('失去')?.[1]\n      const currentTime: number = 日志[i]?.日志时间 || 0\n      if (buffName && !过滤的buff列表?.includes(buffName)) {\n        if (type === 'get') {\n          if (Buff枚举?.[buffName]) {\n            // 判断当前最后一个数组的长度，如果为1代表还没结束，不处理。为2再塞入新的起始时间\n            if (Buff枚举[buffName][Buff枚举[buffName].length - 1]?.length > 1) {\n              Buff枚举[buffName].push([currentTime])\n            }\n          } else {\n            Buff枚举[buffName] = [[currentTime]]\n          }\n        } else if (type === 'lose') {\n          if (Buff枚举?.[buffName]) {\n            if (Buff枚举?.[buffName]?.[Buff枚举?.[buffName]?.length - 1]) {\n              Buff枚举[buffName][Buff枚举[buffName].length - 1].push(currentTime)\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // 循环结束，对没有结束时间的buff做补充，塞入总战斗用时作为结束时间\n  // 同时，计算各buff的覆盖率\n  Object.keys(Buff枚举).forEach((key) => {\n    if (Buff枚举[key]?.length) {\n      if (\n        Buff枚举[key]?.[Buff枚举[key]?.length - 1] &&\n        Buff枚举[key]?.[Buff枚举[key]?.length - 1]?.length < 2\n      ) {\n        Buff枚举[key][Buff枚举[key].length - 1].push(总战斗用时)\n      }\n\n      let 总持续时间 = 0\n      for (let i = 0; i < Buff枚举[key].length; i++) {\n        if (Buff枚举[key][i] && Buff枚举[key][i].length === 2) {\n          总持续时间 = 总持续时间 + Buff枚举[key][i][1] - Buff枚举[key][i][0]\n        }\n      }\n      覆盖率[key] = ((总持续时间 / 总战斗用时) * 100)?.toFixed(3)\n    }\n  })\n\n  return {\n    Buff枚举,\n    覆盖率,\n  }\n}\n\nexport const 格式化buff覆盖数组 = (Buff枚举) => {\n  const res: any[] = []\n  Object.keys(Buff枚举).forEach((key) => {\n    if (Buff枚举[key]?.length) {\n      Buff枚举[key].forEach((range) => {\n        res.push({ type: key, range: range })\n      })\n    }\n  })\n  return res\n}\n","import { Modal, ModalProps, Space } from 'antd'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { Chart } from '@antv/g2'\nimport { 循环日志数据类型 } from '../../../../../simulator/type'\nimport './index.css'\nimport { 格式化buff覆盖数组, 获取Buff覆盖率 } from './util'\n\ninterface BuffCountModalProps extends ModalProps {\n  open: boolean\n  onCancel: () => void\n  日志: 循环日志数据类型[]\n  总战斗用时: number // 总战斗用时\n}\n\nfunction BuffCountModal(props: BuffCountModalProps) {\n  const { open, onCancel, 日志, 总战斗用时 } = props\n  const [chartData, setChartData] = useState<any>()\n  const limitRef: any = useRef<any>()\n  const [覆盖率, 设置覆盖率] = useState<any>({})\n\n  useEffect(() => {\n    if (open) {\n      setTimeout(() => {\n        initChart()\n      }, 20)\n    }\n    if (open) {\n      limitRef.current = false\n    } else {\n      limitRef.current = false\n      设置覆盖率({})\n      setChartData(undefined)\n    }\n  }, [open, 日志, 总战斗用时])\n\n  const initChart = () => {\n    if (limitRef.current) {\n      return\n    }\n    limitRef.current = true\n\n    const chart = chartData\n      ? chartData\n      : new Chart({\n          container: 'cycle-buff-count-chart',\n          autoFit: true,\n          renderer: 'canvas',\n          padding: [24, 120, 100, 120],\n        })\n\n    chart.tooltip({\n      crosshairs: false,\n    })\n\n    if (!chartData) {\n      setChartData(chart)\n    }\n\n    const dataSource = getDataSource()\n\n    chart.source(dataSource, {\n      time: {\n        tickCount: 10,\n      },\n    })\n    chart.axis('time', {\n      label: {\n        style: {\n          textAlign: 'center', // 文本对齐方向，可取值为： start middle end\n          fontSize: 16, // 文本大小\n        },\n      },\n    })\n\n    const data = getDataSource()\n\n    chart.data(data)\n    chart.coordinate().transpose()\n    chart.interval().position('type*range').color('type').label('range', { offset: 10 })\n    // .color(DOMAIN_COLOR)\n    chart.render()\n    // setLoading(false)\n\n    setTimeout(() => {\n      limitRef.current = false\n    }, 10)\n  }\n\n  const getDataSource = () => {\n    const { Buff枚举, 覆盖率 } = 获取Buff覆盖率(日志, 总战斗用时)\n    设置覆盖率(覆盖率)\n    return 格式化buff覆盖数组(Buff枚举)\n  }\n\n  return (\n    <Modal\n      open={open}\n      onCancel={onCancel}\n      title={\n        <div className={'cycle-simulator-modal-header'}>\n          <h1 className={'cycle-simulator-modal-title'}>Buff覆盖情况（时间单位：帧）</h1>\n        </div>\n      }\n      width={'80%'}\n      centered\n      footer={false}\n    >\n      <Space className='cycle-buff-count-text' size={[16, 16]} wrap>\n        {Object.keys(覆盖率).map((item) => {\n          return (\n            <div key={item} className={'cycle-buff-count-text-wrap'}>\n              <span className='cycle-buff-count-text-label'>{item}：</span>\n              <span className='cycle-buff-count-text-value'>{覆盖率[item]}%</span>\n            </div>\n          )\n        })}\n      </Space>\n      {open ? <div id='cycle-buff-count-chart' className={'cycle-buff-count-chart'} /> : null}\n    </Modal>\n  )\n}\n\nexport default BuffCountModal\n","import React, { useState } from 'react'\nimport { Alert, Tooltip } from 'antd'\nimport { PieChartOutlined, CalendarOutlined, AlignLeftOutlined } from '@ant-design/icons'\n\nimport { 循环日志数据类型, 模拟信息类型 } from '../../../simulator/type'\n// import DpsResModal from './components/DpsResModal'\nimport BattleLogModal from './components/BattleLogModal'\nimport SkillCountModal from './components/SkillCountModal'\nimport BuffCountModal from './components/BuffCountModal'\nimport { 当前计算结果类型 } from '@/@types/输出'\nimport './index.css'\n\ninterface DpsResProps {\n  日志信息: 循环日志数据类型[]\n  模拟信息: 模拟信息类型\n  模拟DPS结果: 当前计算结果类型\n}\n\nfunction DpsRes(props: DpsResProps) {\n  const { 模拟信息, 日志信息, 模拟DPS结果 } = props\n  // buff分析\n  const [buffCountModalOpen, setBuffCountModalOpen] = useState<boolean>(false)\n\n  // 日志log\n  const [logModalOpen, setLogModalOpen] = useState<boolean>(false)\n  // 技能统计\n  const [countModal, setCountModal] = useState<boolean>(false)\n\n  // const 开发中 = () => {\n  //   message.success('功能开发中，敬请期待')\n  // }\n\n  return (\n    <div\n      className={`cycle-bar-dps-res ${\n        模拟信息?.循环执行结果 === '异常' ? 'cycle-bar-dps-res-error' : ''\n      }`}\n    >\n      {模拟信息?.循环执行结果 === '异常' ? (\n        <div className={'cycle-dps-res-error'}>\n          <h1 className={'cycle-dps-res-error-title'}>循环异常</h1>\n          <Alert\n            type='error'\n            showIcon\n            message={`异常信息：${模拟信息?.循环异常信息?.异常信息?.信息}`}\n          />\n        </div>\n      ) : 模拟DPS结果?.秒伤 ? (\n        <div className={'cycle-dps-res-success'}>\n          <div className={'cycle-dps-res-success-content'}>\n            <h1 className={'cycle-dps-res-num'}>{模拟DPS结果?.秒伤}</h1>\n            <div className={'cycle-dps-res-success-text-content'}>\n              <div>\n                <span className={'cycle-dps-res-success-text'}>战斗用时</span>\n                <span className={'cycle-dps-res-success-text cycle-dps-res-success-highlight'}>\n                  {模拟DPS结果?.秒伤计算时间}秒\n                </span>\n              </div>\n              <div className={'cycle-dps-res-icons'}>\n                <Tooltip title='Buff分析' placement='left'>\n                  <PieChartOutlined\n                    className={'cycle-dps-res-icon'}\n                    onClick={() => setBuffCountModalOpen(true)}\n                  />\n                </Tooltip>\n                <Tooltip title='战斗日志' placement='left'>\n                  <CalendarOutlined\n                    className={'cycle-dps-res-icon'}\n                    onClick={() => setLogModalOpen(true)}\n                  />\n                </Tooltip>\n                <Tooltip title='技能统计' placement='left'>\n                  <AlignLeftOutlined\n                    className={'cycle-dps-res-icon'}\n                    onClick={() => setCountModal(true)}\n                  />\n                </Tooltip>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : null}\n      {/* dps结果 */}\n      {/* <DpsResModal open={dpsModal} onCancel={() => setDpsModal(false)} logData={日志信息} /> */}\n      {/* 战斗日志 */}\n      <BattleLogModal\n        open={logModalOpen}\n        onCancel={() => setLogModalOpen(false)}\n        logData={日志信息}\n      />\n      {/* 技能统计 */}\n      <SkillCountModal\n        open={countModal}\n        onCancel={() => setCountModal(false)}\n        dpsList={模拟DPS结果?.计算结果技能列表}\n        total={模拟DPS结果?.总伤}\n        logData={日志信息}\n      />\n      {/* Buff分析 */}\n      {buffCountModalOpen && (\n        <BuffCountModal\n          open={buffCountModalOpen}\n          onCancel={() => setBuffCountModalOpen(false)}\n          日志={日志信息}\n          总战斗用时={模拟信息?.当前时间}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default DpsRes\n","// 当前角色状态栏，只用来展示\nimport React from 'react'\nimport { 循环日志数据类型, ShowCycleSingleSkill, 模拟信息类型 } from '../../simulator/type'\n\nimport Energy from './energy'\nimport Buff from './buff'\nimport DpsRes from './dpsRes'\nimport './index.css'\nimport { 当前计算结果类型 } from '@/@types/输出'\n\ninterface StatusBarProps {\n  模拟信息: 模拟信息类型\n  完整循环: ShowCycleSingleSkill[]\n  日志信息: 循环日志数据类型[]\n  模拟DPS结果: 当前计算结果类型\n  奇穴信息: string[]\n}\n\nfunction StatusBar(props: StatusBarProps) {\n  const { 模拟信息, 日志信息, 模拟DPS结果, 奇穴信息 } = props\n\n  return (\n    <div className={'cycle-status-bar'}>\n      <Energy 角色状态信息={模拟信息?.角色状态信息} />\n      <Buff\n        title='自身Buff'\n        buff列表={模拟信息?.当前自身buff列表}\n        当前时间点={模拟信息?.当前时间}\n        奇穴信息={奇穴信息 || []}\n      />\n      <Buff\n        title='目标Buff'\n        buff列表={模拟信息?.当前目标buff列表}\n        DOT列表={模拟信息?.当前DOT运行状态}\n        当前时间点={模拟信息?.当前时间}\n      />\n      <DpsRes 模拟信息={模拟信息} 日志信息={日志信息} 模拟DPS结果={模拟DPS结果} />\n    </div>\n  )\n}\n\nexport default StatusBar\n","import React from 'react'\nimport { 原始Buff数据 } from '../../constant/skill'\n\nfunction BuffItem({ data, ...rest }) {\n  const buff = 原始Buff数据?.[data]\n  return buff ? <img src={buff.图标} {...rest} /> : null\n}\n\nexport default BuffItem\n","// 技能循环显示技能单元\nimport React, { useMemo } from 'react'\nimport { Badge, Dropdown, Space, Tooltip } from 'antd'\nimport { CloseCircleFilled } from '@ant-design/icons'\nimport classNames from 'classnames'\nimport { ShowCycleSingleSkill, 模拟信息类型 } from '../../simulator/type'\nimport { 每秒郭氏帧 } from '@/数据/常量'\nimport BuffItem from './BuffItem'\nimport './index.css'\n\ninterface CycleSkillItemProps {\n  技能: ShowCycleSingleSkill\n  删除循环技能: (e: number) => void\n  模拟信息: 模拟信息类型\n  buff覆盖数据: number[]\n  buff覆盖索引: number\n  更新buff覆盖数据: (e: number[], 索引: number) => void\n  点击下拉菜单: (e: any) => void\n}\n\nfunction CycleSkillItem(props: CycleSkillItemProps) {\n  const {\n    技能,\n    删除循环技能,\n    模拟信息,\n    buff覆盖数据,\n    buff覆盖索引,\n    更新buff覆盖数据,\n    点击下拉菜单,\n  } = props\n\n  const 判断开始释放时间 = (技能?.开始读条时间 ? 技能.开始读条时间 : 技能.实际释放时间) || 0\n  const 读条时间 = 技能?.开始读条时间\n    ? Math.round((((技能.实际释放时间 || 0) - (技能.开始读条时间 || 0)) / 每秒郭氏帧) * 100) / 100\n    : 0\n\n  const 技能索引 = 技能?.index || 0\n\n  const 技能释放时间 = Math.round(((判断开始释放时间 || 0) / 每秒郭氏帧) * 100) / 100\n  const 间隔CD = (判断开始释放时间 || 0) - (技能.计划释放时间 || 0)\n  // 把帧转成秒，保留两位小数\n  const 剩余秒 = Math.round((间隔CD / 每秒郭氏帧) * 100) / 100\n  // 是否异常\n  // 存在异常索引\n  const 索引 = (模拟信息?.循环异常信息?.异常索引 || 0) + -1\n  const 是否异常 = 模拟信息?.循环执行结果 === '异常' ? (技能?.index || 0) >= 索引 : false\n  const 当前异常 = 模拟信息?.循环执行结果 === '异常' ? (技能?.index || 0) === 索引 : false\n\n  const 技能释放结果 = 技能?.技能释放记录结果 || {}\n\n  const 判断有无重要buff标记 = () => {\n    if (技能释放结果?.造成buff数据?.buff名称) {\n      更新buff覆盖数据(\n        [技能释放结果?.造成buff数据?.buff开始时间, 技能释放结果?.造成buff数据?.buff结束时间],\n        技能索引\n      )\n    }\n  }\n\n  const 卸除重要buff标记 = () => {\n    更新buff覆盖数据([], 0)\n  }\n\n  const 当前是否需要高亮展示在buff覆盖中 = useMemo(() => {\n    if (\n      (技能?.实际释放时间 || 0) <= buff覆盖数据?.[1] &&\n      (技能?.实际释放时间 || 0) >= buff覆盖数据?.[0] &&\n      技能索引 >= buff覆盖索引\n    ) {\n      return true\n    } else {\n      return false\n    }\n  }, [buff覆盖数据, buff覆盖索引, 技能索引, 技能])\n\n  const cls = classNames(\n    'cycle-simulator-setting-skill',\n    是否异常 ? 'cycle-simulator-setting-skill-error' : '',\n    当前是否需要高亮展示在buff覆盖中 ? 'cycle-simulator-setting-skill-highlight' : ''\n  )\n\n  const 图标 = useMemo(() => {\n    return 技能.图标\n  }, [技能, 技能释放结果])\n\n  const 下拉菜单 = [\n    {\n      key: '前部插入',\n      label: (\n        <span>\n          在<span className='cycle-simulator-menu-tip-before'>前部</span>添加技能\n        </span>\n      ),\n    },\n    {\n      key: '后部插入',\n      label: (\n        <span>\n          在<span className='cycle-simulator-menu-tip-after'>后部</span>添加技能\n        </span>\n      ),\n    },\n  ]\n\n  return (\n    <Badge count={剩余秒} offset={[-52, 8]} className={'cycle-simulator-setting-skill-drag'}>\n      <Dropdown menu={{ items: 下拉菜单, onClick: 点击下拉菜单 }} trigger={['contextMenu']}>\n        <div className={cls} onMouseEnter={判断有无重要buff标记} onMouseLeave={卸除重要buff标记}>\n          <Tooltip\n            title={\n              <div>\n                <p>{技能?.技能名称}</p>\n                {技能释放时间 ? <p>释放时间：{技能释放时间}秒</p> : null}\n                {技能释放结果.实际伤害技能 ? <p>伤害名称：{技能释放结果.实际伤害技能}</p> : null}\n                {剩余秒 ? <p>释放等待CD：{剩余秒}秒</p> : null}\n                {读条时间 ? <p>读条：{读条时间}秒</p> : null}\n                {技能释放结果?.重要buff列表?.length ? (\n                  <Space className={'cycle-simulator-setting-buff'} size={[8, 8]} wrap>\n                    {技能释放结果?.重要buff列表.map((item) => {\n                      return (\n                        <BuffItem\n                          data={item}\n                          key={item}\n                          className={'cycle-simulator-setting-buff-item'}\n                        />\n                      )\n                    })}\n                  </Space>\n                ) : null}\n                {是否异常 ? (\n                  当前异常 ? (\n                    <p>异常：{模拟信息?.循环异常信息?.异常信息?.信息}</p>\n                  ) : (\n                    <p>前置技能异常</p>\n                  )\n                ) : null}\n              </div>\n            }\n          >\n            <img className={'ztg-cycle-simulator-setting-skill-img'} src={图标} />\n          </Tooltip>\n          <CloseCircleFilled\n            className={'cycle-simulator-setting-skill-close'}\n            onClick={() => 删除循环技能(技能?.index || 0)}\n          />\n        </div>\n      </Dropdown>\n    </Badge>\n  )\n}\n\nexport default CycleSkillItem\n","import React, { useMemo } from 'react'\nimport { 每秒郭氏帧 } from '@/数据/常量'\nimport { 循环基础技能数据类型, 技能GCD组, 模拟信息类型 } from '../../simulator/type'\nimport classNames from 'classnames'\nimport { Badge, Tooltip } from 'antd'\nimport { ERROR_ACTION } from '../../simulator/utils'\n\ninterface AddCycleSkillBtnProps {\n  技能: 循环基础技能数据类型\n  完整循环: 循环基础技能数据类型[]\n  onClick?: any\n  className?: string\n  模拟信息: 模拟信息类型\n  style?: any\n}\n\ninterface 异常信息数据 {\n  是否禁用?: boolean\n  角标数字?: number\n  异常描述?: string\n}\n\n// 添加循环技能按钮组件\nconst AddCycleSkillBtn: React.FC<AddCycleSkillBtnProps> = (props) => {\n  const { 技能, 模拟信息, onClick, className, ...rest } = props\n\n  const 释放等待CD = 计算可以释放时技能CD(模拟信息, 技能)\n  const 技能当前层数 = 计算技能当前层数(模拟信息, 技能)\n\n  const 异常信息: 异常信息数据 = useMemo(() => {\n    let 禁用信息 = {}\n    if (技能?.技能名称 === '朔风扬尘二' && !模拟信息?.当前自身buff列表?.['朔风扬尘']?.当前层数) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.BUFF错误?.信息,\n      }\n    } else if (技能?.技能名称 === '骤风劈风' && !模拟信息?.当前自身buff列表?.['茫缈']?.当前层数) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.BUFF错误?.信息,\n      }\n    } else if (技能?.技能名称 === '点掉橙武' && !模拟信息?.当前自身buff列表?.['橙武']?.当前层数) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.BUFF错误?.信息,\n      }\n    }\n    if (释放等待CD > 0 && 技能?.最大充能层数 && 技能?.最大充能层数 > 1) {\n      return {\n        ...禁用信息,\n        角标数字: 释放等待CD,\n        异常描述: `当前技能处于充能中，剩余${释放等待CD}秒`,\n      }\n    } else if (释放等待CD > 0) {\n      return {\n        ...禁用信息,\n        角标数字: 释放等待CD,\n        异常描述: `当前技能处于冷却中，剩余${释放等待CD}秒`,\n      }\n    } else {\n      return { ...禁用信息 }\n    }\n  }, [释放等待CD, 技能, 模拟信息])\n\n  // 点击前判断是否可以释放\n  const beforeOnClick = () => {\n    if (异常信息?.是否禁用) {\n      return\n    }\n    onClick()\n  }\n\n  const cls = classNames(className, 异常信息?.是否禁用 ? 'cycle-simulator-setting-btn-error' : '')\n\n  const 技能显示信息 = useMemo(() => {\n    return 技能\n  }, [技能, 模拟信息])\n\n  return (\n    <div onClick={beforeOnClick} className={cls} {...rest}>\n      <Tooltip title={异常信息?.异常描述 || 技能?.说明 || ''}>\n        <Badge count={异常信息?.角标数字} className={'cycle-add-btn-wrap'} offset={[0, 0]}>\n          <img className={`cycle-add-btn`} src={技能显示信息?.图标} />\n          {技能?.最大充能层数 && 技能?.最大充能层数 !== 1 ? (\n            <span className={'cycle-add-btn-count'}>{技能当前层数}</span>\n          ) : null}\n        </Badge>\n      </Tooltip>\n      <p className={'cycle-add-btn-text'}>{技能显示信息?.技能原始名称 || 技能显示信息?.技能名称}</p>\n    </div>\n  )\n}\n\nexport default AddCycleSkillBtn\n\nconst 计算可以释放时技能CD = (模拟信息: 模拟信息类型, 技能: 循环基础技能数据类型) => {\n  const 技能运行状态 = 模拟信息?.当前各技能运行状态?.[技能?.技能名称]\n  const 待充能时间点 = 技能运行状态?.待充能时间点\n\n  if (待充能时间点?.length) {\n    const GCD = 检查GCD(技能, 模拟信息.当前GCD组)\n    // 当前技能可以释放时间当前时间（为上一个技能释放结束时间）加上本技能释放前结算GCD\n    const 可以释放时间 = (模拟信息?.当前时间 || 0) + (GCD || 0)\n    const 下次预估释放时间 = 待充能时间点?.[0]\n    if (下次预估释放时间 > 可以释放时间) {\n      const 技能CD = 下次预估释放时间 - 可以释放时间\n      // 把帧转成秒，保留两位小数\n      const 剩余秒 = Math.round((技能CD / 每秒郭氏帧) * 100) / 100\n      return 剩余秒\n    } else {\n      return 0\n    }\n  } else {\n    return 0\n  }\n}\n\nconst 计算技能当前层数 = (模拟信息: 模拟信息类型, 技能: 循环基础技能数据类型) => {\n  const 技能运行状态 = 模拟信息?.当前各技能运行状态?.[技能?.技能名称]\n  return (技能?.最大充能层数 || 1) - (技能运行状态?.待充能时间点?.length || 0)\n}\n\nconst 检查GCD = (技能: 循环基础技能数据类型, GCD组: 技能GCD组) => {\n  let 校验GCD组: string = 技能.技能GCD组 as string\n  if (技能.技能GCD组 === '自身') {\n    校验GCD组 = 技能?.技能名称\n  }\n  if (校验GCD组) {\n    // 大部分技能只检查自己的GCD\n    const GCD = GCD组[校验GCD组]\n    return GCD\n  } else {\n    return 0\n  }\n}\n","export const 快捷添加数据: 快捷添加数据类型[] = [\n  {\n    名称: '双断截引',\n    技能序列: ['断脉', '截阳', '断脉', '截阳', '引窍'],\n    color: 'cyan',\n  },\n  {\n    名称: '断截断引',\n    技能序列: ['断脉', '截阳', '断脉', '引窍'],\n    color: 'green',\n  },\n  {\n    名称: '断截引',\n    技能序列: ['断脉', '截阳', '引窍'],\n    color: 'blue',\n  },\n  {\n    名称: '破阳截引',\n    技能序列: ['破穴', '一阳来复', '截阳', '引窍'],\n    color: 'magenta',\n  },\n  {\n    名称: '风劈双断',\n    技能序列: ['骤风令', '骤风劈风', '断脉', '截阳', '断脉', '引窍'],\n    color: 'volcano',\n  },\n  {\n    名称: '风劈',\n    技能序列: ['骤风令', '骤风劈风'],\n    color: 'gold',\n  },\n  // {\n  //   名称: 'CBC引A',\n  //   技能序列: ['寒更晓箭', '金乌见坠', '白羽流星', '饮羽簇', '白羽流星', '引风唤灵', '劲风簇'],\n  //   color: 'green',\n  // },\n]\n\nexport interface 快捷添加数据类型 {\n  名称: string\n  技能序列: string[]\n  color?: string\n}\n","import { Col, Row, Space, Tag } from 'antd'\nimport React from 'react'\nimport { 循环基础技能数据类型, 模拟信息类型 } from '../../simulator/type'\nimport AddCycleSkillBtn from './AddCycleSkillBtn'\nimport { 快捷添加数据, 快捷添加数据类型 } from './快捷添加'\nimport './index.css'\n\ninterface AddCycleSkillBtnsProps {\n  新增循环技能: (data: 循环基础技能数据类型) => void\n  批量新增循环: (data: 循环基础技能数据类型[]) => void\n  处理循环结果对象: { 完整循环: 循环基础技能数据类型[] }\n  模拟信息: 模拟信息类型\n  大橙武模拟: boolean\n  奇穴信息: string[]\n  // 宠物顺序: string[]\n  // 更新宠物顺序: (e: string[]) => void\n}\n\nfunction AddCycleSkillBtns(props: AddCycleSkillBtnsProps) {\n  const {\n    新增循环技能,\n    批量新增循环,\n    处理循环结果对象,\n    模拟信息,\n    大橙武模拟,\n    奇穴信息,\n    // 宠物顺序,\n    // 更新宠物顺序,\n  } = props\n\n  const 批量新增循环技能 = (数据: 快捷添加数据类型) => {\n    const 技能原始数据: 循环基础技能数据类型[] = 数据?.技能序列\n      .map((item) => {\n        return 模拟信息?.技能基础数据?.find((a) => a.技能名称 === item) || ({} as any)\n      })\n      .filter((item) => item)\n    if (技能原始数据?.length) {\n      批量新增循环(技能原始数据)\n    }\n  }\n\n  // const hrefDev = location.href?.includes('dev=1')\n  // const DEV = hrefDev\n\n  return (\n    <div className={'cycle-simulator-setting-btns'}>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'ztg-cycle-btn-type'}>一阳指</span>\n        <Space className={'cycle-simulator-setting-skills'} size={[8, 16]} wrap>\n          {模拟信息?.技能基础数据\n            ?.filter((item) => {\n              return !item?.创建循环不可选 && item?.技能类型 === '一阳指'\n            })\n            .map((item) => {\n              return (\n                <AddCycleSkillBtn\n                  onClick={() => 新增循环技能(item)}\n                  key={item?.技能名称}\n                  className={'ztg-cycle-simulator-setting-btn'}\n                  完整循环={处理循环结果对象?.完整循环 || []}\n                  技能={item}\n                  模拟信息={模拟信息}\n                />\n              )\n            })}\n        </Space>\n      </div>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'ztg-cycle-btn-type'}>聘风令</span>\n        <Space className={'cycle-simulator-setting-skills'} size={[8, 16]} wrap>\n          {模拟信息?.技能基础数据\n            ?.filter((item) => !item?.创建循环不可选 && item?.技能类型 === '聘风令')\n            .map((item) => {\n              return (\n                <AddCycleSkillBtn\n                  onClick={() => 新增循环技能(item)}\n                  key={item?.技能名称}\n                  className={'ztg-cycle-simulator-setting-btn'}\n                  完整循环={处理循环结果对象?.完整循环 || []}\n                  技能={item}\n                  模拟信息={模拟信息}\n                />\n              )\n            })}\n        </Space>\n      </div>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'ztg-cycle-btn-type'}>空蒙扇</span>\n        <Space className={'cycle-simulator-setting-skills'} size={[8, 16]} wrap>\n          {模拟信息?.技能基础数据\n            ?.filter((item) => !item?.创建循环不可选 && item?.技能类型 === '空蒙扇')\n            .map((item) => {\n              return (\n                <AddCycleSkillBtn\n                  onClick={() => 新增循环技能(item)}\n                  key={item?.技能名称}\n                  className={'ztg-cycle-simulator-setting-btn'}\n                  完整循环={处理循环结果对象?.完整循环 || []}\n                  技能={item}\n                  模拟信息={模拟信息}\n                />\n              )\n            })}\n        </Space>\n      </div>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'ztg-cycle-btn-type'}>其他</span>\n        <Space className={'cycle-simulator-setting-skills'} size={[8, 16]} wrap>\n          {模拟信息?.技能基础数据\n            ?.filter((item) => {\n              if (!大橙武模拟 && item?.显示类型 === '大橙武模拟') {\n                return false\n              }\n              if (item?.显示类型 === '奇穴技能') {\n                const 依赖名称 = item?.依赖奇穴名 || item?.技能名称\n                return 奇穴信息?.includes(依赖名称)\n              }\n              return !item?.创建循环不可选 && item?.技能类型 === '其他'\n            })\n            .map((item) => {\n              return (\n                <AddCycleSkillBtn\n                  onClick={() => 新增循环技能(item)}\n                  key={item?.技能名称}\n                  className={'ztg-cycle-simulator-setting-btn'}\n                  完整循环={处理循环结果对象?.完整循环 || []}\n                  技能={item}\n                  模拟信息={模拟信息}\n                />\n              )\n            })}\n        </Space>\n      </div>\n      <div className={`cycle-simulator-setting-item cycle-simulator-setting-fast-item`}>\n        <span className={'ztg-cycle-btn-type'}>快捷添加</span>\n        <Row className={'cycle-simulator-setting-quick'} gutter={[16, 8]}>\n          {快捷添加数据.map((item) => {\n            return (\n              <Col span={8} key={item?.名称}>\n                {/* <Tooltip title={item?.技能序列?.join(' ')}> */}\n                <Tag\n                  color={item?.color || 'blue'}\n                  onClick={() => 批量新增循环技能(item)}\n                  className={'cycle-simulator-setting-quick-item'}\n                >\n                  {item?.名称}\n                </Tag>\n                {/* </Tooltip> */}\n              </Col>\n            )\n          })}\n        </Row>\n      </div>\n    </div>\n  )\n}\n\nexport default AddCycleSkillBtns\n","import { Alert, App, Checkbox, Form, Input, Modal, Select, Tabs } from 'antd'\nimport React, { useEffect, useMemo, useState } from 'react'\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport { 更新当前自定义循环列表 } from '@/store/data'\nimport { 延迟设定 } from '@/数据/常量'\nimport './index.css'\n\nconst { 计算循环 } = 获取当前数据()\n\ninterface SaveCustomCycleModalProps {\n  自定义循环保存弹窗: boolean\n  设置自定义循环保存弹窗: (e: boolean) => void\n  保存自定义循环: (名称, 加速选项, 延迟选项) => void\n}\n\nfunction SaveCustomCycleModal(props: SaveCustomCycleModalProps) {\n  const { modal } = App.useApp()\n\n  const { 自定义循环保存弹窗, 设置自定义循环保存弹窗, 保存自定义循环 } = props\n  // 保存类型，覆盖｜新增\n  const [自定义循环类型, 设置自定义循环类型] = useState<string>()\n  // 自定义循环名称保存输入\n  const [自定义循环名称输入, 设置自定义循环名称输入] = useState<string>()\n  // 保存类型，覆盖｜新增\n  const [覆盖循环名, 设置覆盖循环名] = useState<string>()\n  // 保存加速序列\n  const [加速选项, 设置加速选项] = useState<number[]>([0, 1, 2])\n  const [延迟选项, 设置延迟选项] = useState<number[]>([0, 1, 2])\n\n  const 自定义循环 = useAppSelector((state) => state?.data?.自定义循环列表)\n\n  const dispatch = useAppDispatch()\n\n  const 全部循环 = useMemo(() => {\n    return (计算循环 || []).concat(自定义循环)\n  }, [自定义循环, 计算循环])\n\n  useEffect(() => {\n    if (自定义循环保存弹窗) {\n      if (自定义循环?.length) {\n        设置自定义循环类型('覆盖')\n      } else {\n        设置自定义循环类型('新增')\n      }\n    } else {\n      设置自定义循环类型(undefined)\n      设置自定义循环名称输入(undefined)\n      设置覆盖循环名(undefined)\n    }\n  }, [自定义循环保存弹窗, 自定义循环])\n\n  const 保存自定义循环前 = () => {\n    const 名称 = 自定义循环类型 === '覆盖' ? 覆盖循环名 : 自定义循环名称输入\n    保存自定义循环(名称, 加速选项, 延迟选项)\n  }\n\n  // 删除自定义循环\n  const 删除循环前提示 = (e, 名称) => {\n    e.stopPropagation()\n    e.preventDefault()\n\n    modal.confirm({\n      title: `确定要删除循环【${名称}】吗?`,\n      content: '删除后将无法恢复',\n      okText: '我要删除',\n      onOk: async () => {\n        删除循环(名称)\n      },\n    })\n  }\n\n  const 删除循环 = (名称) => {\n    dispatch(更新当前自定义循环列表(自定义循环.filter((item) => item.名称 !== 名称)))\n  }\n\n  return (\n    <Modal\n      centered\n      title='保存自定义循环'\n      okButtonProps={{\n        disabled:\n          !(自定义循环类型 === '覆盖' ? 覆盖循环名 : 自定义循环名称输入) ||\n          !延迟选项?.length ||\n          !加速选项?.length,\n      }}\n      open={自定义循环保存弹窗}\n      onCancel={() => 设置自定义循环保存弹窗(false)}\n      onOk={保存自定义循环前}\n      width={630}\n      destroyOnClose\n      className={'cycle-custom-save-modal'}\n    >\n      <Tabs\n        className={'cycle-custom-save-modal-content'}\n        type='card'\n        activeKey={自定义循环类型}\n        onChange={设置自定义循环类型}\n      >\n        <Tabs.TabPane tab={'覆盖'} key='覆盖'>\n          <Select\n            value={覆盖循环名}\n            onChange={设置覆盖循环名}\n            optionLabelProp='label'\n            placeholder={'请选择你要覆盖的循环'}\n          >\n            {自定义循环.map((item) => {\n              return (\n                <Select.Option value={item.名称} key={item.名称} label={item.名称}>\n                  <div className={'cycle-custom-save-label'}>\n                    <span>{item.名称}</span>\n                    <span\n                      onClick={(e) => 删除循环前提示(e, item.名称)}\n                      className={'cycle-custom-save-delete'}\n                    >\n                      删除\n                    </span>\n                  </div>\n                </Select.Option>\n              )\n            })}\n          </Select>\n        </Tabs.TabPane>\n        <Tabs.TabPane tab={'新增'} key='新增'>\n          <Form>\n            <Form.Item\n              rules={[\n                {\n                  validator: (_, value, callback) => {\n                    if (value) {\n                      if (全部循环?.some((item) => item?.名称 === value)) {\n                        callback('已存在相同的循环名，请更换')\n                      }\n                    }\n                    callback()\n                  },\n                },\n              ]}\n            >\n              <Input\n                value={自定义循环名称输入}\n                placeholder='请输入自定义循环名称'\n                onChange={(e) => 设置自定义循环名称输入(e?.target?.value)}\n              />\n            </Form.Item>\n          </Form>\n        </Tabs.TabPane>\n      </Tabs>\n      <div className='cycle-custom-save-checkbox'>\n        <p>加速</p>\n        <Checkbox.Group value={加速选项} onChange={(e) => 设置加速选项(e as number[])}>\n          {Array.from({ length: 6 }, (v, i) => i).map((a) => {\n            return (\n              <Checkbox value={a} key={a}>\n                {a}段\n              </Checkbox>\n            )\n          })}\n        </Checkbox.Group>\n        <p>延迟</p>\n        <Checkbox.Group value={延迟选项} onChange={(e) => 设置延迟选项(e as number[])}>\n          {延迟设定.map((item) => {\n            return (\n              <Checkbox value={item.value} key={item.value}>\n                {item.label}\n              </Checkbox>\n            )\n          })}\n        </Checkbox.Group>\n      </div>\n      <Alert message={'选项越少保存越快。没选择的选项在外部计算dps时不会进行计算。'} />\n    </Modal>\n  )\n}\n\nexport default SaveCustomCycleModal\n","// 奇穴数据，只在模拟循环内生效\nimport { Drawer, Form, Select, Tooltip } from 'antd'\nimport React, { useEffect } from 'react'\nimport { useAppSelector } from '@/hooks'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport './index.css'\n\nconst { 奇穴数据 = [] } = 获取当前数据()\n\ninterface QixueSetProps {\n  className?: string\n  奇穴信息: string[]\n  更新奇穴信息: (e: string[]) => void\n  奇穴弹窗展示: boolean\n  更新奇穴弹窗展示: (e: boolean) => void\n}\n\nconst QixueSetModal: React.FC<QixueSetProps> = (props) => {\n  const 当前奇穴信息 = useAppSelector((state) => state?.data?.当前奇穴信息)\n  const { 奇穴信息, 更新奇穴信息, 奇穴弹窗展示, 更新奇穴弹窗展示 } = props\n\n  const [form] = Form.useForm()\n\n  const handleChangeQixue = () => {\n    setTimeout(() => {\n      form?.validateFields().then((values) => {\n        const newArray = Object.keys(values).map((key) => {\n          return values[key] as string\n        })\n        更新奇穴信息(newArray)\n      })\n    }, 0)\n  }\n\n  // 监听表单变化\n  useEffect(() => {\n    const obj = {}\n    奇穴信息.map((item, index) => {\n      obj[index] = item || 当前奇穴信息[index]\n    })\n    form?.setFieldsValue({\n      ...obj,\n    })\n  }, [奇穴信息])\n\n  return (\n    <Drawer\n      title={'奇穴设置'}\n      open={奇穴弹窗展示}\n      onClose={() => 更新奇穴弹窗展示(false)}\n      placement='bottom'\n      height={140}\n      mask={false}\n      className={'qixue-simulator-set-drawer qixue-shxj'}\n    >\n      <Form form={form} className={'qixue-simulator-set-drawer-wrap'}>\n        {奇穴数据.map((重, index) => {\n          return (\n            <Form.Item className={'qixue-simulator-set-item'} name={index} key={index + 1}>\n              <Select\n                className={'qixue-simulator-set-item-select'}\n                onChange={handleChangeQixue}\n                dropdownMatchSelectWidth={false}\n                optionLabelProp='label'\n                showArrow={false}\n                popupClassName={'qixue-simulator-set-item-select-popup'}\n                // defaultValue={DEFAULT_QIXUE_VALUE[index]}\n              >\n                {重?.奇穴列表.map((奇穴) => {\n                  return (\n                    <Select.Option\n                      value={奇穴?.奇穴名称}\n                      key={奇穴?.奇穴名称}\n                      className={'qixue-simulator-set-item-select-option'}\n                      label={\n                        <div className={'qixue-simulator-label'}>\n                          <img className={'qixue-simulator-label-img'} src={奇穴?.奇穴图片} />\n                          <span className={'qixue-simulator-label-text'}>{奇穴?.奇穴名称}</span>\n                        </div>\n                      }\n                    >\n                      <div className='qixue-simulator-set-item-select-img-wrap'>\n                        <img\n                          className={'qixue-simulator-set-item-select-img'}\n                          src={奇穴?.奇穴图片}\n                        />\n                      </div>\n                      <Tooltip title={奇穴?.奇穴描述 || ''} placement='right'>\n                        <span className={'qixue-simulator-set-item-select-text'}>\n                          {奇穴?.奇穴名称}\n                        </span>\n                      </Tooltip>\n                    </Select.Option>\n                  )\n                })}\n              </Select>\n            </Form.Item>\n          )\n        })}\n      </Form>\n    </Drawer>\n  )\n}\n\nexport default QixueSetModal\n","import { Drawer } from 'antd'\nimport React from 'react'\nimport { 循环基础技能数据类型, 模拟信息类型 } from '../../simulator/type'\nimport AddCycleSkillBtns from '../AddCycleSkillBtns'\n\ninterface AddCycleSkillModalProps {\n  向循环内插入技能: (data: 循环基础技能数据类型[], 插入位置: string, 插入索引: number) => void\n  处理循环结果对象: { 完整循环: 循环基础技能数据类型[] }\n  模拟信息: 模拟信息类型\n  大橙武模拟: boolean\n  奇穴信息: string[]\n  添加设置: { 位置: string; 索引 }\n  添加技能弹窗显示: boolean\n  关闭弹窗: () => void\n}\n\nfunction AddCycleSkillModal(props: AddCycleSkillModalProps) {\n  const {\n    向循环内插入技能,\n    处理循环结果对象,\n    模拟信息,\n    大橙武模拟,\n    奇穴信息,\n    添加设置,\n    添加技能弹窗显示,\n    关闭弹窗,\n  } = props\n\n  const 新增循环技能 = (item: 循环基础技能数据类型) => {\n    向循环内插入技能([item], 添加设置?.位置, 添加设置?.索引)\n  }\n\n  const 批量新增循环 = (item: 循环基础技能数据类型[]) => {\n    向循环内插入技能(item, 添加设置?.位置, 添加设置?.索引)\n  }\n\n  return (\n    <Drawer\n      title='插入技能'\n      placement='bottom'\n      open={添加技能弹窗显示}\n      onClose={关闭弹窗}\n      height={180}\n    >\n      <AddCycleSkillBtns\n        新增循环技能={新增循环技能}\n        批量新增循环={批量新增循环}\n        处理循环结果对象={处理循环结果对象}\n        模拟信息={模拟信息}\n        大橙武模拟={大橙武模拟}\n        奇穴信息={奇穴信息}\n      />\n    </Drawer>\n  )\n}\n\nexport default AddCycleSkillModal\n","// 循环模拟器\nimport React, { useEffect, useMemo, useState } from 'react'\nimport { App, Button, Modal, Tooltip, message } from 'antd'\nimport { ReactSortable } from 'react-sortablejs'\nimport { CopyOutlined, DeleteOutlined, AlertOutlined } from '@ant-design/icons'\n\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport { 获取加速等级 } from '@/工具函数/data'\nimport { 秒伤计算 } from '@/计算模块/计算函数'\nimport { 当前计算结果类型 } from '@/@types/输出'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport { 循环详情 } from '@/@types/循环'\nimport { 更新当前自定义循环列表 } from '@/store/data'\nimport { 每秒郭氏帧 } from '@/数据/常量'\n\nimport 循环模拟技能基础数据 from './constant/skill'\nimport { getDpsCycle } from './utils'\nimport {\n  循环日志数据类型,\n  循环基础技能数据类型,\n  ShowCycleSingleSkill,\n  模拟信息类型,\n} from './simulator/type'\n\nimport 模拟循环 from './simulator/index'\n\nimport CycleModalHeader from './components/CycleModalHeader'\nimport StatusBar from './components/StatusBar'\nimport CycleSkillItem from './components/CycleSkillItem'\nimport AddCycleSkillBtns from './components/AddCycleSkillBtns'\nimport SaveCustomCycleModal from './components/SaveCustomCycleModal'\nimport QixueSetModal from './components/QixueSetModal'\nimport AddCycleSkillModal from './components/AddCycleSkillModal'\nimport './index.css'\n\nconst { 缓存映射 } = 获取当前数据()\n\nconst 加速等级枚举 = {\n  0: 0,\n  1: 206,\n  2: 9230,\n  3: 19280,\n  4: 30151,\n  5: 42047,\n}\n\ninterface CycleSimulatorProps {\n  打开循环模拟器?: () => void\n  disabled?: boolean\n}\n\nfunction CycleSimulator(props: CycleSimulatorProps) {\n  const { modal } = App.useApp()\n  const { 打开循环模拟器, disabled } = props\n  const [logData, setLogData] = useState<循环日志数据类型[]>([])\n\n  const [模拟DPS结果, 更新模拟DPS结果] = useState<当前计算结果类型>({\n    秒伤: 0,\n    总伤: 0,\n    秒伤计算时间: 0,\n    计算结果技能列表: [],\n  })\n\n  const [模拟信息, 更新模拟信息] = useState<模拟信息类型>({\n    角色状态信息: {\n      能量信息: { 任脉: 100, 督脉: 100 },\n    },\n    当前时间: 0,\n    当前自身buff列表: {},\n    当前目标buff列表: {},\n    循环执行结果: '成功',\n    循环异常信息: {},\n    技能基础数据: [...循环模拟技能基础数据],\n    技能释放记录: [],\n    当前各技能运行状态: {},\n    当前DOT运行状态: {},\n    当前GCD组: {},\n  })\n\n  // 基础弹窗\n  const [basicModalOpen, setBasicModalOpen] = useState<boolean>(false)\n  // 循环\n  const [cycle, setCycle] = useState<循环基础技能数据类型[]>([])\n  const [自定义循环保存弹窗, 设置自定义循环保存弹窗] = useState<boolean>(false)\n  // 当前面板加速值\n  const 外部加速值 = useAppSelector((state) => state?.data?.装备信息?.装备基础属性)?.加速等级 || 0\n  const 外部延迟 = useAppSelector((state) => state?.data?.网络延迟) || 0\n  const 大橙武模拟 =\n    !!useAppSelector((state) => state?.data?.装备信息?.装备增益)?.大橙武特效 || false\n\n  const [加速等级, 更新加速等级] = useState<number>(0)\n  const [起手回能帧, 更新起手回能帧] = useState<number>(0)\n  const [网络延迟, 更新网络延迟] = useState<number>(0)\n  const [起手能量, 更新起手能量] = useState<{ 任脉: number; 督脉: number }>({\n    任脉: 100,\n    督脉: 100,\n  })\n\n  // 自定义循环\n  const 自定义循环列表 = useAppSelector((state) => state?.data?.自定义循环列表)\n\n  const 加速值 = useMemo(() => {\n    return 加速等级枚举[加速等级] || 0\n  }, [加速等级])\n\n  // 是否实时计算\n  const 是否实时计算 = true\n\n  // 奇穴\n  const reduxQixuedata = useAppSelector((state) => state?.data?.当前奇穴信息)\n  const [奇穴信息, 更新奇穴信息] = useState<string[]>([])\n  const [奇穴弹窗展示, 更新奇穴弹窗展示] = useState<boolean>(false)\n  const [buff覆盖数据, 更新buff覆盖数据] = useState<number[]>([])\n  const [buff覆盖索引, 更新buff覆盖索引] = useState<number>(0)\n\n  // 添加循环\n  const [添加技能弹窗显示, 更新添加技能弹窗显示] = useState<boolean>(false)\n  const [添加设置, 更新添加设置] = useState<{ 位置: string; 索引 }>({ 位置: '', 索引: 0 })\n\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (basicModalOpen) {\n      // 设置外面选择的默认奇穴信息\n      更新奇穴信息(reduxQixuedata)\n      更新加速等级(获取加速等级(外部加速值))\n      更新起手回能帧(8) // 默认为8\n      更新网络延迟(外部延迟)\n      更新起手能量({ 任脉: 100, 督脉: 100 })\n    } else {\n      setLogData([])\n      setBasicModalOpen(false)\n      setCycle([])\n      更新模拟DPS结果({ 秒伤: 0, 总伤: 0, 秒伤计算时间: 0, 计算结果技能列表: [] })\n    }\n  }, [basicModalOpen, reduxQixuedata, 外部加速值])\n\n  useEffect(() => {\n    if (是否实时计算 && basicModalOpen) {\n      simulator({})\n    }\n  }, [basicModalOpen, cycle, 是否实时计算, 网络延迟, 起手能量, 加速值, 起手回能帧, 奇穴信息])\n\n  const simulator = (props?) => {\n    const { 传入加速 = 加速值, 传入延迟 = 网络延迟, 更新展示 = true, 奇穴 } = props\n    const res = 模拟循环({\n      测试循环: cycle.map((item) => item?.技能名称) || [],\n      加速值: 传入加速 !== undefined ? 传入加速 : 加速值,\n      网络延迟: 传入延迟 !== undefined ? 传入延迟 : 网络延迟,\n      奇穴: 奇穴 || 奇穴信息,\n      大橙武模拟,\n      起手回能帧,\n      起手能量,\n    })\n\n    const {\n      最终日志,\n      当前自身buff列表: 处理后自身buff,\n      当前目标buff列表: 处理后目标buff,\n      角色状态信息: 处理后角色状态信息,\n      ...rest\n    } = res\n    if (更新展示) {\n      setLogData(最终日志)\n      计算dps(最终日志, rest?.当前时间)\n      更新模拟信息({\n        当前自身buff列表: 处理后自身buff,\n        当前目标buff列表: 处理后目标buff,\n        角色状态信息: 处理后角色状态信息,\n        ...rest,\n      })\n    }\n    return { 最终日志, ...rest }\n  }\n\n  // 计算DPS日志\n  const 计算dps = (data: 循环日志数据类型[], 当前时间) => {\n    const 获取用于计算的技能组 = getDpsCycle(data)\n    const { 秒伤, 计算结果技能列表, 秒伤计算时间, 总伤 } = dispatch(\n      秒伤计算({\n        更新循环技能列表: 获取用于计算的技能组,\n        更新计算时间: 当前时间 / 每秒郭氏帧,\n        更新奇穴数据: 奇穴信息,\n      })\n    )\n    更新模拟DPS结果({\n      秒伤: 当前时间 > 0 ? 秒伤 : 0,\n      总伤: 当前时间 > 0 ? 总伤 : 0,\n      秒伤计算时间: 秒伤计算时间,\n      计算结果技能列表: 计算结果技能列表,\n    })\n  }\n\n  // 根据循环计算更适合展示的多层数组，用于显示\n  const 处理循环结果对象 = useMemo(() => {\n    const res: ShowCycleSingleSkill[][] = []\n\n    const 是否存在换行技能 = cycle?.find((item) => item?.技能名称 === '换行')\n    cycle.map((item, index) => {\n      const 找到当前技能释放记录 = 模拟信息?.技能释放记录?.[index]\n      const data = {\n        ...item,\n        ...找到当前技能释放记录,\n      }\n\n      if (index === 0) {\n        res[res?.length] = [{ ...data, index: index || 0 }]\n      } else {\n        res[res?.length - 1] = [...(res[res?.length - 1] || []), { ...data, index: index || 0 }]\n\n        const 打完本技能换轮次 = 是否存在换行技能\n          ? data?.技能名称 === '换行'\n          : data?.技能名称 === '骤风令'\n\n        if (打完本技能换轮次) {\n          res[res?.length] = []\n        }\n      }\n      return data\n    })\n\n    return { 显示循环: res, 完整循环: cycle }\n  }, [cycle, 模拟信息])\n\n  // 拖拽更新循环\n  const 拖拽更新循环 = (newList, type) => {\n    if (type == '轮次内') {\n      // 首先获取被替换轮次的第一个元素的index索引\n      const minIndex = newList.reduce(function (min, obj) {\n        return Math.min(min, obj.index)\n      }, Infinity)\n      // 获取最大的索引，判断拖拽生效范围\n      const maxIndex = newList.reduce(function (min, obj) {\n        return Math.max(min, obj.index)\n      }, Number.NEGATIVE_INFINITY)\n      // 将数组哪索引范围内跌元素替换为新的数组元素\n      const newCycle = cycle.map((item, index) => {\n        if (index < minIndex || index > maxIndex) {\n          return { ...item }\n        } else {\n          return newList[index - minIndex]\n        }\n      })\n      // 更新循环\n      setCycle(newCycle)\n    } else if (type === '整个轮次拖拽') {\n      const res: 循环基础技能数据类型[] = []\n      newList.forEach((item) => {\n        item.forEach((a) => {\n          if (a.技能名称) {\n            const 当前技能数据 = 模拟信息?.技能基础数据?.find((b) => b?.技能名称 === a.技能名称)\n            if (当前技能数据) {\n              res.push(当前技能数据)\n            }\n          }\n        })\n      })\n      setCycle(res)\n    }\n  }\n  // 向循环内新增技能\n  const 新增循环技能 = (item: 循环基础技能数据类型) => {\n    let newCycle: 循环基础技能数据类型[] = []\n    newCycle = [...(cycle || []), item]\n    setCycle(newCycle)\n  }\n\n  const 向循环内插入技能 = (item: 循环基础技能数据类型[], 插入位置, 插入索引) => {\n    let newCycle: 循环基础技能数据类型[] = [...(cycle || [])]\n    let addCycle: 循环基础技能数据类型[] = []\n\n    if (插入位置 === '前部插入') {\n      // 在索引 2 前插入多个元素\n      addCycle = newCycle.slice(0, 插入索引).concat(item, newCycle.slice(插入索引))\n      更新添加设置({ ...添加设置, 索引: 添加设置.索引 + item.length })\n    } else {\n      // 在索引 2 后插入多个元素\n      addCycle = newCycle\n        .slice(0, 插入索引 + item.length)\n        .concat(item, newCycle.slice(插入索引 + item.length))\n    }\n\n    newCycle = [...addCycle]\n    setCycle(newCycle)\n  }\n\n  const 批量新增循环 = (item: 循环基础技能数据类型[]) => {\n    const batchItem = [...item]\n    const newCycle = [...(cycle || []), ...batchItem]\n    setCycle(newCycle)\n  }\n\n  // 从循环内删除技能\n  const 删除循环技能 = (index) => {\n    const newCycle = [...(cycle || [])]\n    newCycle.splice(index, 1)\n    setCycle(newCycle)\n  }\n\n  // 复制本轮到最后\n  const 复制本轮至最后 = (轮次) => {\n    let newCycle: 循环基础技能数据类型[] = []\n    newCycle = [...(cycle || [])].concat(轮次)\n    setCycle(newCycle)\n  }\n\n  // 删除本轮次\n  const 删除本轮次 = (轮次) => {\n    const minIndex = 轮次.reduce(function (min, obj) {\n      return Math.min(min, obj.index)\n    }, Infinity)\n    // 获取最大的索引，判断拖拽生效范围\n    const maxIndex = 轮次.reduce(function (min, obj) {\n      return Math.max(min, obj.index)\n    }, Number.NEGATIVE_INFINITY)\n    // 将数组哪索引范围内跌元素替换为新的数组元素\n    const newCycle = cycle.filter((item, index) => {\n      return index < minIndex || index > maxIndex\n    })\n    // 更新循环\n    setCycle(newCycle)\n  }\n\n  // 删除本轮后全部循环\n  const 删除本轮后全部循环 = (轮次) => {\n    modal.confirm({\n      title: '确认删除本轮后全部循环吗？',\n      onOk() {\n        // 获取最大的索引，判断生效范围\n        const maxIndex = 轮次.reduce(function (min, obj) {\n          return Math.max(min, obj.index)\n        }, Number.NEGATIVE_INFINITY)\n        // 将数组哪索引范围内跌元素替换为新的数组元素\n        const newCycle = cycle.filter((item, index) => {\n          return index <= maxIndex\n        })\n        // 更新循环\n        setCycle(newCycle)\n      },\n    })\n  }\n\n  // 确认保存自定义循环\n  const 确认保存循环 = (名称, 加速选项, 延迟选项) => {\n    // 获取各加速下 各网络延迟的循环\n    const 各延迟枚举 = 延迟选项?.length ? 延迟选项 : [0, 1, 2, 3]\n    const 各加速枚举 = 加速选项?.length ? 加速选项 : [0, 1, 2, 3, 4, 5]\n\n    const 保存循环结果: 循环详情[] = []\n\n    const 异常结果: any[] = []\n\n    各加速枚举.forEach((加速) => {\n      const 实际加速值 = 加速等级枚举[加速]\n      各延迟枚举.forEach((延迟) => {\n        // 保存循环数据的时候，把镇机和界破的数据一起保存，生成两套并存的数据，方便后续切换比较\n        const 模拟结果 = simulator({\n          传入加速: Number(实际加速值),\n          传入延迟: Number(延迟),\n          更新展示: false,\n          奇穴: [...奇穴信息],\n        })\n        const 本次日志 = 模拟结果?.最终日志\n        const 循环执行结果 = 模拟结果?.循环执行结果\n        // const 战斗时间 = 本次日志[本次日志.length - 1].日志时间 || 0\n        const 战斗秒 = 模拟结果?.当前时间 / 每秒郭氏帧\n        const 用于计算循环 = getDpsCycle(本次日志)\n        if (循环执行结果 === '成功') {\n          保存循环结果.push({\n            循环加速等级: 加速,\n            循环延迟要求: 延迟,\n            战斗时间: 战斗秒,\n            技能详情: 用于计算循环,\n          })\n        } else {\n          异常结果.push({\n            加速,\n            延迟,\n          })\n        }\n      })\n    })\n\n    if (异常结果?.length) {\n      message.error(\n        `以下条件循环异常，将不会保存该加速的循环。异常循环：${异常结果\n          .map((item) => {\n            return `[加速：${item.加速}，延迟：${item.延迟}]`\n          })\n          .join('、')}`\n      )\n    }\n\n    const 技能序列 = cycle.map((item) => item.技能名称)\n\n    const 新自定义循环 = 自定义循环列表?.some((item) => item?.名称 === 名称)\n      ? 自定义循环列表.map((item) => {\n          return item.名称 === 名称\n            ? {\n                名称,\n                标题: 名称,\n                类型: '自定义',\n                标记: '自定义',\n                循环详情: 保存循环结果,\n                奇穴: 奇穴信息,\n                技能序列,\n              }\n            : item\n        })\n      : (自定义循环列表 || []).concat([\n          {\n            名称,\n            标题: 名称,\n            类型: '自定义',\n            标记: '自定义',\n            循环详情: 保存循环结果,\n            奇穴: 奇穴信息,\n            技能序列,\n          },\n        ])\n\n    dispatch(更新当前自定义循环列表(新自定义循环))\n\n    设置自定义循环保存弹窗(false)\n    message.success('保存成功')\n  }\n\n  useEffect(() => {\n    // redux变动，更新storage信息\n    const 保存信息 = {}\n    ;(自定义循环列表 || []).forEach((item) => {\n      保存信息[item.名称] = {\n        ...item,\n      }\n    })\n    localStorage?.setItem(缓存映射.自定义循环, JSON.stringify(保存信息))\n  }, [自定义循环列表, 奇穴信息])\n\n  const 点击下拉菜单 = (data, index) => {\n    更新添加设置({ 位置: data?.key, 索引: index })\n    更新添加技能弹窗显示(true)\n  }\n\n  return (\n    <>\n      <Button\n        danger\n        size='small'\n        disabled={disabled}\n        onClick={() => {\n          setBasicModalOpen(true)\n          打开循环模拟器 && 打开循环模拟器()\n        }}\n      >\n        循环模拟\n      </Button>\n      <Modal\n        className='cycle-simulator-modal simulator-shxj'\n        maskClosable={false}\n        width={'100%'}\n        title={\n          <CycleModalHeader\n            cycle={cycle}\n            大橙武模拟={大橙武模拟}\n            设置自定义循环保存弹窗={设置自定义循环保存弹窗}\n            清空循环={() => setCycle([])}\n            快速导入循环={(循环) => setCycle(循环)}\n            更新奇穴信息={更新奇穴信息}\n            更新奇穴弹窗展示={更新奇穴弹窗展示}\n            加速等级={加速等级}\n            更新加速等级={更新加速等级}\n            起手回能帧={起手回能帧}\n            更新起手回能帧={更新起手回能帧}\n            网络延迟={网络延迟}\n            更新网络延迟={更新网络延迟}\n            模拟信息={模拟信息}\n            起手能量={起手能量}\n            更新起手能量={更新起手能量}\n          />\n        }\n        centered\n        footer={null}\n        open={basicModalOpen}\n        onCancel={() => setBasicModalOpen(false)}\n        destroyOnClose\n      >\n        <div className={'cycle-simulator-setting'}>\n          {/* 角色状态栏 */}\n          <StatusBar\n            模拟信息={模拟信息}\n            完整循环={处理循环结果对象?.完整循环 as any}\n            日志信息={logData}\n            模拟DPS结果={模拟DPS结果}\n            奇穴信息={奇穴信息}\n          />\n          {/* // 循环展示模块 */}\n          <div className={'cycle-simulator-setting-res'}>\n            {处理循环结果对象?.显示循环?.length ? (\n              (处理循环结果对象?.显示循环 || []).map((轮次, index) => {\n                return 轮次?.length ? (\n                  <div className={`cycle-simulator-setting-turn cycle-turn-drag`} key={`${index}`}>\n                    <ReactSortable\n                      list={轮次.map((i) =>\n                        Object.assign(i, { id: `${i?.技能名称}_${index}_${i?.index}` })\n                      )}\n                      setList={(e) => {\n                        拖拽更新循环(e, '轮次内')\n                      }}\n                      className='cycle-simulator-setting-turn-drop'\n                      animation={150}\n                      draggable={'.cycle-simulator-setting-skill-drag'}\n                    >\n                      {(轮次 || []).map((item) => {\n                        return (\n                          <CycleSkillItem\n                            技能={item}\n                            删除循环技能={删除循环技能}\n                            key={`${item?.技能名称}_${index}_${item?.index}`}\n                            模拟信息={模拟信息}\n                            buff覆盖数据={buff覆盖数据}\n                            buff覆盖索引={buff覆盖索引}\n                            更新buff覆盖数据={(e, 索引) => {\n                              更新buff覆盖数据(e)\n                              更新buff覆盖索引(索引)\n                            }}\n                            点击下拉菜单={(e) => 点击下拉菜单(e, item?.index)}\n                          />\n                        )\n                      })}\n                      <div className={'cycle-turn-operate'}>\n                        <Tooltip title='删除本轮后全部循环'>\n                          <AlertOutlined\n                            className={'cycle-turn-operate-btn'}\n                            style={{ color: '#FF0000' }}\n                            onClick={() => 删除本轮后全部循环(轮次)}\n                          />\n                        </Tooltip>\n                        <Tooltip title='复制并添加到最后'>\n                          <CopyOutlined\n                            className={'cycle-turn-operate-btn'}\n                            onClick={() => 复制本轮至最后(轮次)}\n                          />\n                        </Tooltip>\n                        <Tooltip title='删除此轮'>\n                          <DeleteOutlined\n                            className={'cycle-turn-operate-btn'}\n                            onClick={() => 删除本轮次(轮次)}\n                          />\n                        </Tooltip>\n                      </div>\n                    </ReactSortable>\n                  </div>\n                ) : (\n                  <div />\n                )\n              })\n            ) : (\n              <p className={'cycle-simulator-setting-tip'}>请点击下方技能按钮生成模拟技能序列</p>\n            )}\n          </div>\n        </div>\n        {/* 添加循环按钮组 */}\n        <AddCycleSkillBtns\n          新增循环技能={新增循环技能}\n          批量新增循环={批量新增循环}\n          处理循环结果对象={处理循环结果对象}\n          模拟信息={模拟信息}\n          大橙武模拟={大橙武模拟}\n          奇穴信息={奇穴信息}\n        />\n        {/* 保存自定义循环弹窗 */}\n        <SaveCustomCycleModal\n          自定义循环保存弹窗={自定义循环保存弹窗}\n          设置自定义循环保存弹窗={设置自定义循环保存弹窗}\n          保存自定义循环={确认保存循环}\n        />\n        {/* 循环自定义奇穴弹窗 */}\n        <QixueSetModal\n          奇穴信息={奇穴信息}\n          更新奇穴信息={更新奇穴信息}\n          奇穴弹窗展示={奇穴弹窗展示}\n          更新奇穴弹窗展示={更新奇穴弹窗展示}\n        />\n        {/* 添加技能弹窗 */}\n        <AddCycleSkillModal\n          向循环内插入技能={向循环内插入技能}\n          处理循环结果对象={处理循环结果对象}\n          模拟信息={模拟信息}\n          大橙武模拟={大橙武模拟}\n          奇穴信息={奇穴信息}\n          添加设置={添加设置}\n          添加技能弹窗显示={添加技能弹窗显示}\n          关闭弹窗={() => {\n            更新添加技能弹窗显示(false)\n            更新添加设置({ 位置: '', 索引: 0 })\n          }}\n        />\n      </Modal>\n    </>\n  )\n}\n\nexport default React.memo(CycleSimulator)\n"],"names":["基础GCD帧","技能名称","技能释放后添加GCD","技能GCD组","技能类型","图标","技能原始名称","技能CD","每秒郭氏帧","最大充能层数","充能层数","显示类型","依赖奇穴名","说明","日志类型数组","原始Buff数据","经脉循行","名称","最大层数","最大持续时间","备注","玉枕","茫缈","神门","绝脉","封府断脉链","封府截阳链","骤风","出岫","朔风扬尘","扬尘","扬尘增伤","横驱风靡","橙武","getDpsCycle","data","res","i","length","_当前数据$其他数据","_当前数据$其他数据2","当前数据","本次造成伤害次数","其他数据","伤害次数","本次技能等级","技能等级","日志类型","_res$key","_增益列表","_res$key2","当前日志对应技能枚举","获取当前日志对应技能枚举","日志","key","增益列表","技能增益列表","_当前数据$buff列表3","_当前数据$buff列表","_当前数据$buff列表2","buff列表","不存在相同增益","_当前数据$buff列表6","map","item","_item$增益名称","_当前数据$buff列表4","增益名称","split","some","a","_当前数据$buff列表5","includes","增益技能数","concat","join","技能数量","Object","keys","_v$技能增益列表","v","Math","round","d","Skill_Cycle_Map","判断有无橙武循环数据","循环","大橙武启用","filter","_item$技能序列","技能序列","根据奇穴修改buff数据","奇穴","forEach","obj","val","最大作用次数","ERROR_ACTION","充能不足","信息","BUFF错误","根据加速等级获取虚拟加速值","加速等级","constructor","模拟循环","本次释放记录","this","释放前初始化","触发伤害行为","伤害名称","_this$模拟循环$当前自身buff列表","_this$模拟循环$当前自身buff列表2","_this$模拟循环$技能造成伤害","_this$模拟循环","arguments","undefined","触发伤害时间","校验奇穴是否存在","当前自身buff列表","当前层数","push","技能造成伤害","call","获取技能释放记录结果","获取当前重要buff列表","技能依赖目标buff列表","重要buff列表","buff","_this$模拟循环$当前自身buff列表3","_this$模拟循环$当前自身buff列表4","_this$模拟循环$当前目标buff列表","_this$模拟循环$当前目标buff列表2","当前目标buff列表","获取施加重要buff信息","buff名称","_this$模拟循环$Buff和Dot数据","当前时间","buff对象","Buff和Dot数据","buff开始时间","buff结束时间","断脉","技能统一类","super","释放","命中","_this$触发伤害行为","_this$模拟循环2","_this$模拟循环2$当前自身buff列","_this$模拟循环2$当前自身buff列2","_this$模拟循环$校验奇穴是否存在","_this$模拟循环4","_this$模拟循环$校验奇穴是否存在2","_this$模拟循环6","_this$模拟循环$校验奇穴是否存在3","_this$模拟循环7","_this$触发伤害行为2","_this$模拟循环$卸除buff","_this$模拟循环3","_this$模拟循环$添加buff","_this$模拟循环5","_this$模拟循环$技能类实例集合","_this$模拟循环$技能类实例集合$引窍","_this$模拟循环$技能类实例集合$引窍2","_this$模拟循环$技能类实例集合2","_this$模拟循环$技能类实例集合2$截","_this$模拟循环$技能类实例集合2$截2","_this$模拟循环8","_this$模拟循环8$当前目标buff列","_this$模拟循环8$当前目标buff列2","_this$模拟循环9","回复能量","卸除buff","对象","卸除层数","添加buff","技能类实例集合","引窍","减少调息时间","截阳","判断逆脉","判断扬尘","保存释放记录","技能数据","循环模拟技能基础数据","find","技能运行数据","待充能时间点","初始化技能运行数据","更新技能运行数据","新数据","有CD技能通用类","_模拟循环$技能基础数据","技能基础数据","减少帧数","_待充能时间点$map","新待充能时间点","_this$模拟循环$添加buff2","_this$模拟循环$添加buff3","_this$模拟循环5$当前自身buff列","_this$模拟循环5$当前自身buff列2","_this$模拟循环$添加buff4","重置调息时间","释放后","释放重置","当前绝脉层数","添加战斗日志","存在CWBuff","当前任脉值","角色状态信息","能量信息","任脉","当前督脉值","督脉","伤害等级","ceil","max","min","经脉循行状态校验","引爆绝脉次数","floor","_this$模拟循环$卸除buff2","神封校验结果","神封校验","消耗当前一半能量","神封触发","经脉循行卸除校验","破穴","_this$模拟循环$技能类实例集合2$经","_this$模拟循环$技能类实例集合4","_this$模拟循环$技能类实例集合4$一","_this$模拟循环$技能类实例集合4$一2","_this$模拟循环$技能类实例集合3","一阳来复","雾刃飞光","骤风令","_骤风令$技能数据","循环加速值","原始CD","加速后帧数","获取实际帧数","创建NPC骤风持续造成伤害","待生效事件","按数字生成数组","次数","事件名称","事件时间","添加待生效事件队列","骤风造成伤害","劈风令","_劈风令$技能数据","检查GCD","索引","_this$模拟循环$测试循环","_this$模拟循环2$测试循环","_this$模拟循环3$GCD组","前一个技能","测试循环","后一个技能","GCD","GCD组","_this$模拟循环4$技能基础数据","当前技能","_this$模拟循环5$技能类实例集合","_this$模拟循环6$检查GCD","技能实例","_this$模拟循环$当前目标buff列表3","_this$模拟循环$当前目标buff列表4","_this$模拟循环$技能类实例集合$抟风","_this$模拟循环$技能类实例集合$抟风2","_this$模拟循环$技能类实例集合2$抟","_this$模拟循环$技能类实例集合2$抟2","抟风令","纷飙触发减少CD","抟风令断","骤风劈风","可以释放","异常信息","_抟风令$技能数据","总作用帧","获取读条时间","计划下次充能时间点","剩余总时间","_this$模拟循环$添加战斗日志","减少时间","减少后充能节点","读条","读条开始时间","_this$模拟循环$技能类实例集合$劈风","_this$模拟循环$技能类实例集合$劈风2","处理骤风令","读条抟风令","开始时间","_this$模拟循环2$当前目标buff列","待生效事件结算","骤风数据","实际总Buff帧数","刷新时间","实际生效跳数","续费NPC骤风持续造成伤害","续费次数","删除待生效事件队列","待生效事件队列","事件备注","读条伤害","横驱风靡造成伤害","_抟风令断$技能数据","雪重花满","朔风扬尘一","新增层数","朔风扬尘二","_this$模拟循环3$当前自身buff列","_this$模拟循环$当前自身buff列表5","_this$模拟循环$当前自身buff列表6","_this$模拟循环$当前自身buff列表7","当前扬尘层数","当前扬尘伤害等级","风流云散","_this$模拟循环2$GCD组","_this$模拟循环3$技能基础数据","_this$模拟循环4$技能类实例集合","_this$模拟循环5$检查GCD","造成buff数据","获得经脉循行","当前身上有经脉循行","添加经脉循行每秒回复事件","初始时间","经脉循行每秒回复","_this$模拟循环3$当前自身buff列2","层数","初始化经脉循行","经脉循行添加校验","触发橙武","大橙武模拟","换行","技能系数","获取当前数据","props","_this$Buff和Dot数据","_props$起手能量","_props$起手能量2","循环执行结果","循环异常信息","异常索引","网络延迟","开始释放上一个技能的时间","战斗日志","技能释放记录","公共","自身","风矢上次造成伤害时间","起手回能帧","普通攻击日志","所有释放技能数组","找出所有读条技能的区间","index","_item$日志","_所有释放技能数组","是否读条","日志时间","结束时间","战斗最大时间","战斗日志副本","普通攻击时间列表","获取加速等级","加速值","判断奇穴","技能","技能原始CD","根据奇穴修改技能数据","起手能量","初始化技能实例类","重置循环执行结果","_ref","_this$当前自身buff列表$名称","_this$当前目标buff列表$名称","覆盖层数","只添加日志","新buff对象","_ref2","_this$当前自身buff列表$名称2","_this$当前目标buff列表$名称2","buff刷新时间","待判断奇穴","_this$奇穴","能量校验","增加时间","time","跳过全部GCD时间","DOT结算与更新","清空已经消失的buff","新GCD组","技能释放前检查GCD统一方法","校验GCD组","对所有有CD技能检查和充能","实例","运行数据","技能释放前检查运行数据","等待CD时间","可以释放时间","_技能实例$技能运行数据","可释放时间","技能GCD和CD处理","等待CD","技能预估释放时间","_技能实例$技能运行数据2","_技能实例$更新技能运行数据","时间差","技能释放后更新运行数据","_技能实例$技能运行数据3","本次释放充能","log","rest","来源","_技能增益列表$filter","额外增益列表","造成时间","隐藏日志","当前技能数据","总增益列表","当前增益数据","转化buff和增益名称","增益消失时间","_技能实例$检查GCD","技能释放前","_this$当前自身buff列表","_this$当前自身buff列表$茫缈","是否是倒读条技能","是否为倒读条技能","是否为额外免费劈风令","延迟等待","技能计划释放时间","增加技能GCD","待更新GCD组","增加技能CD","_技能实例$技能释放后更新运行数据","技能成功开始释放","是否为读条技能","_this$当前自身buff列表2","_this$当前自身buff列表2$橙武","技能释放后","计划释放时间","开始读条时间","开始释放时间","释放时标鹄层数","_技能实例$获取技能释放记录结果","技能释放记录结果","实际释放时间","清空buff调用函数","buff应该消失时间","消失层数","自然消失失去层数","本轮模拟开始前","事件结算","本轮模拟结束后","技能释放校验","_技能实例$释放","体态校验结果","释放判断结果","校验结果","_this$添加战斗日志","技能释放异常","结算判断时间","轮训执行事件","_this$待生效事件队列$","_this$添加战斗日志2","_当前事件$事件名称","_当前事件$事件名称2","_当前事件$事件名称3","_当前事件$事件名称4","_当前事件$事件名称5","_this$待生效事件队列","当前事件","_当前事件$事件备注","_this$技能类实例集合","_this$技能类实例集合2","_this$技能类实例集合2$技能名称","_当前事件$事件备注2","_当前事件$事件备注3","_当前事件$事件备注4","_当前事件$事件备注5","_this$技能类实例集合3","_this$技能类实例集合3$经脉循行","_this$技能类实例集合4","_this$技能类实例集合4$骤风令","_this$技能类实例集合5","_this$技能类实例集合5$抟风令","shift","传入数据","新待生效事件队列","_this$待生效事件队列2","_传入数据$","_传入数据$2","sort","b","数值","类型","消耗能量","_this$当前目标buff列表","_this$当前目标buff列表$绝脉","_this$添加buff","_this$添加buff2","_this$添加buff3","_this$当前自身buff列表3","_this$当前自身buff列表3$扬尘","模拟","_this$技能基础数据","_技能实例$释放前初始化","_技能实例$获取读条时间","_this$当前目标buff列表2","_this$当前目标buff列表2$标鹄","读条时间","_技能实例$读条","结束读条时间","释放校验结果","是否为最后一个技能","_技能实例$命中","_技能实例$造成伤害","_技能实例$释放后","造成伤害","日志排序","新日志","获取当前各技能的运行状态","各技能当前运行状态","_this$技能类实例集合$key","获取各DOT的运行状态","DOT运行数据","_this$技能类实例集合$key2","_this$技能类实例集合$key3","模拟实例","循环主类","当前各技能运行状态","当前DOT运行状态","最终日志","当前GCD组","_判断有无橙武循环数据","_判断有无橙武循环数据2","cycle","设置自定义循环保存弹窗","清空循环","快速导入循环","更新奇穴弹窗展示","更新奇穴信息","更新起手回能帧","更新加速等级","更新起手能量","更新网络延迟","模拟信息","自定义循环","useAppSelector","state","_state$data","自定义循环列表","快捷添加循环","数据源","快速导入默认循环","当前循环数据","技能序列信息","_模拟信息$技能基础数据","_jsxs","className","children","_jsx","Popover","content","href","target","rel","Tooltip","title","placement","Select","size","value","style","width","showSearch","popupMatchSelectWidth","filterOption","input","option","_option$value","_option$value$toStrin","toString","onChange","e","options","Array","from","label","_option$value2","_option$value2$toStri","延迟设定","Dropdown","overlay","Menu","Item","onClick","Divider","margin","粘贴导入","navigator","clipboard","readText","then","clipboardData","_模拟信息$技能基础数据2","message","success","error","Button","danger","type","disabled","_角色状态信息$能量信息","_角色状态信息$能量信息2","Progress","percent","format","_Object$keys$map","DOT列表","奇穴信息","当前时间点","当前buff列表","最终显示buff列表","useMemo","_buff列表$经脉循行","当前Dot列表","原始数据","_item$待生效数据","待生效数据","Space","wrap","剩余时间","剩余时间秒","toFixed","_Fragment","src","_item$待生效数据2","最后一跳","生效时间","open","onCancel","logData","columns","dataIndex","filters","text","onFilter","record","_record$日志","_record$日志类型","indexOf","render","_","row","Modal","centered","footer","Table","dataSource","pagination","pageSize","showTotal","total","dpsList","引窍总倍率","绝脉总倍率","引窍统计数组","绝脉统计数组","引窍数组","_item$日志类型","绝脉数组","_item$日志2","_item$日志类型2","总倍率","统计数组","获取总倍率数组","结果统计","计算结果","总伤","计算结果技能列表","visible","onClose","数组","倍率","统计完整数据","本次倍率","_日志$其他数据","获取对应实际倍率","reduce","acc","curr","过滤的buff列表","总战斗用时","chartData","setChartData","useState","limitRef","useRef","覆盖率","设置覆盖率","useEffect","setTimeout","initChart","current","chart","Chart","container","autoFit","renderer","padding","tooltip","crosshairs","getDataSource","source","tickCount","axis","textAlign","fontSize","coordinate","transpose","interval","position","color","offset","Buff枚举","获取Buff覆盖率","_日志$i","_日志$i2","_日志$i3","_日志$i3$日志","_日志$i4","_日志$i4$日志","_日志$i5","_logName$split","_logName$split2","_日志$i6","logName","buffName","currentTime","_Buff枚举$buffName","_Buff枚举$buffName2","_Buff枚举$buffName3","_Buff枚举$key","_Buff枚举$key2","_Buff枚举$key3","_Buff枚举$key4","_Buff枚举$key5","_Buff枚举$key6","总持续时间","_Buff枚举$key7","range","格式化buff覆盖数组","id","_模拟信息$循环异常信息","_模拟信息$循环异常信息$异常信息","日志信息","模拟DPS结果","buffCountModalOpen","setBuffCountModalOpen","logModalOpen","setLogModalOpen","countModal","setCountModal","Alert","showIcon","秒伤","秒伤计算时间","PieChartOutlined","CalendarOutlined","AlignLeftOutlined","BattleLogModal","SkillCountModal","BuffCountModal","Energy","Buff","DpsRes","_技能释放结果$重要buff列表","_模拟信息$循环异常信息2","_模拟信息$循环异常信息2$异常信息","删除循环技能","buff覆盖数据","buff覆盖索引","更新buff覆盖数据","点击下拉菜单","判断开始释放时间","技能索引","技能释放时间","间隔CD","剩余秒","是否异常","当前异常","技能释放结果","当前是否需要高亮展示在buff覆盖中","cls","classNames","下拉菜单","Badge","count","menu","items","trigger","onMouseEnter","判断有无重要buff标记","_技能释放结果$造成buff数据","_技能释放结果$造成buff数据2","_技能释放结果$造成buff数据3","onMouseLeave","卸除重要buff标记","实际伤害技能","BuffItem","CloseCircleFilled","释放等待CD","计算可以释放时技能CD","技能当前层数","计算技能当前层数","_模拟信息$当前自身buff列表","_模拟信息$当前自身buff列表$朔风扬尘","_模拟信息$当前自身buff列表2","_模拟信息$当前自身buff列表2$茫缈","_模拟信息$当前自身buff列表3","_模拟信息$当前自身buff列表3$橙武","禁用信息","_ERROR_ACTION$BUFF错误","_ERROR_ACTION$BUFF错误3","是否禁用","异常描述","_ERROR_ACTION$BUFF错误2","角标数字","技能显示信息","beforeOnClick","_模拟信息$当前各技能运行状态","技能运行状态","下次预估释放时间","_模拟信息$当前各技能运行状态2","_技能运行状态$待充能时间点","快捷添加数据","_模拟信息$技能基础数据3","_模拟信息$技能基础数据4","_模拟信息$技能基础数据5","新增循环技能","批量新增循环","处理循环结果对象","创建循环不可选","AddCycleSkillBtn","完整循环","依赖名称","Row","gutter","Col","span","Tag","数据","技能原始数据","批量新增循环技能","计算循环","modal","App","useApp","自定义循环保存弹窗","保存自定义循环","自定义循环类型","设置自定义循环类型","自定义循环名称输入","设置自定义循环名称输入","覆盖循环名","设置覆盖循环名","加速选项","设置加速选项","延迟选项","设置延迟选项","dispatch","useAppDispatch","全部循环","删除循环","更新当前自定义循环列表","okButtonProps","onOk","保存自定义循环前","destroyOnClose","Tabs","activeKey","TabPane","tab","optionLabelProp","placeholder","Option","删除循环前提示","stopPropagation","preventDefault","confirm","okText","async","Form","rules","validator","callback","Input","_e$target","Checkbox","Group","奇穴数据","当前奇穴信息","奇穴弹窗展示","form","useForm","handleChangeQixue","validateFields","values","newArray","setFieldsValue","Drawer","height","mask","重","name","dropdownMatchSelectWidth","showArrow","popupClassName","奇穴列表","奇穴名称","奇穴图片","奇穴描述","向循环内插入技能","添加设置","添加技能弹窗显示","关闭弹窗","AddCycleSkillBtns","位置","缓存映射","加速等级枚举","CycleSimulator","_useAppSelector","_useAppSelector2","_处理循环结果对象$显示循环","打开循环模拟器","setLogData","更新模拟DPS结果","更新模拟信息","basicModalOpen","setBasicModalOpen","setCycle","外部加速值","_state$data$装备信息","装备信息","装备基础属性","外部延迟","_state$data2","_state$data3","_state$data3$装备信息","装备增益","大橙武特效","_state$data4","是否实时计算","reduxQixuedata","_state$data5","更新buff覆盖索引","更新添加技能弹窗显示","更新添加设置","simulator","传入加速","传入延迟","更新展示","处理后自身buff","处理后目标buff","处理后角色状态信息","计算dps","获取用于计算的技能组","秒伤计算","更新循环技能列表","更新计算时间","更新奇穴数据","是否存在换行技能","_模拟信息$技能释放记录","显示循环","newCycle","splice","_localStorage","保存信息","localStorage","setItem","JSON","stringify","maskClosable","CycleModalHeader","StatusBar","轮次","ReactSortable","list","assign","setList","拖拽更新循环","newList","minIndex","Infinity","maxIndex","Number","NEGATIVE_INFINITY","animation","draggable","CycleSkillItem","AlertOutlined","删除本轮后全部循环","CopyOutlined","复制本轮至最后","DeleteOutlined","删除本轮次","batchItem","SaveCustomCycleModal","确认保存循环","各延迟枚举","各加速枚举","保存循环结果","异常结果","加速","实际加速值","延迟","模拟结果","本次日志","战斗秒","用于计算循环","循环加速等级","循环延迟要求","战斗时间","技能详情","新自定义循环","标题","标记","循环详情","QixueSetModal","AddCycleSkillModal","插入位置","插入索引","addCycle","slice","React"],"sourceRoot":""}