{"version":3,"file":"static/js/795.c75560a0.chunk.js","mappings":"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","sources":["功能模块/系统工具/页面右下角工具/网页工具/触发率分析/Calculator.ts","功能模块/系统工具/页面右下角工具/网页工具/触发率分析/eventChart.tsx","功能模块/系统工具/页面右下角工具/网页工具/触发率分析/index.tsx"],"sourcesContent":["import kungfu2mask from './kungfu2mask.json'\nimport skill2mask from './skill2mask.json'\nimport kungfu2prob from './kungfu2prob.json'\n\ntype KungfuMask = [number, number]\ntype Probabilities = { [key: string]: { [key: number]: number } }\ntype Counts = { [key: string]: { [key: number]: number } }\ntype Records = Array<[number, string[]]>\n\nclass Calculator {\n  private kungfu2mask: { [key: string]: { [key: string]: KungfuMask } }\n  private skill2mask: { [key: string]: KungfuMask }\n  private kungfu2prob: { [key: string]: { [key: string]: number } }\n\n  private id2kungfu: { [key: string]: string } = {}\n  private id2name: { [key: string]: string } = {}\n  private rows: string[] = []\n  private records: Records = []\n  private counts: Counts = {}\n  private probs: Probabilities = {}\n  private duration = 96\n  private interval = 0\n\n  constructor() {\n    this.kungfu2mask = JSON.parse(JSON.stringify(kungfu2mask))\n    this.skill2mask = JSON.parse(JSON.stringify(skill2mask))\n    this.kungfu2prob = JSON.parse(JSON.stringify(kungfu2prob))\n\n    this.reset([])\n  }\n\n  private reset(rows: string[]): void {\n    this.rows = rows\n    this.id2kungfu = {}\n    this.id2name = {}\n    this.records = []\n    this.counts = {}\n    this.probs = {}\n  }\n\n  private prepare(): void {\n    for (const row of this.rows) {\n      const columns = row.split('\\t')\n      if (columns[4] === '4') {\n        const details = columns[columns.length - 1].trim().slice(1, -1).split(',')\n        const player_id = details[0]\n        const player_name = details[1]\n        const kungfu_id = details[3]\n        this.id2kungfu[player_id] = kungfu_id\n        this.id2name[player_id] = player_name\n        this.counts[player_id] = {}\n      } else if (columns[4] === '21') {\n        const details = columns[columns.length - 1].trim().slice(1, -1).split(',')\n        this.records.push([parseInt(columns[1]), details])\n      }\n    }\n  }\n\n  private parse(tag: number): void {\n    for (const [frame, details] of this.records) {\n      const player_id = details[0]\n      if (!(player_id in this.id2kungfu)) {\n        continue\n      }\n      const react = details[2]\n      const damage_type = details[3]\n      if (react === '1' || damage_type === '2') {\n        continue\n      }\n\n      const skill_id = details[4]\n      const [skill_mask_1, skill_mask_2] = this.skill2mask[skill_id] || [0, 0]\n      const [event_mask_1, event_mask_2] = this.kungfu2mask[this.id2kungfu[player_id]][tag]\n\n      if (skill_mask_1 & event_mask_1 || skill_mask_2 & event_mask_2) {\n        if (!(frame in this.counts[player_id])) {\n          this.counts[player_id][frame] = 0\n        }\n        this.counts[player_id][frame] += 1\n      }\n    }\n  }\n\n  private calculate(tag: number): void {\n    for (const player_id in this.counts) {\n      const player_name = this.id2name[player_id]\n      const counts = this.counts[player_id]\n      const probs = (this.probs[player_name] = {})\n      for (const frame in counts) {\n        probs[frame] = 0\n      }\n      const event_prob = this.kungfu2prob[this.id2kungfu[player_id]][tag] / 1024\n      for (const frame in counts) {\n        const count = counts[frame]\n        if (count === 0) {\n          continue\n        }\n        probs[frame] += event_prob * count\n      }\n    }\n  }\n\n  private calculateOverlap(tag: number): void {\n    for (const player_id in this.counts) {\n      const player_name = this.id2name[player_id]\n      const counts = this.counts[player_id]\n      const probs = (this.probs[player_name] = {})\n      for (const frame in counts) {\n        probs[frame] = 0\n      }\n      const event_prob = this.kungfu2prob[this.id2kungfu[player_id]][tag] / 1024\n      for (const frame in counts) {\n        const count = counts[frame]\n        if (count === 0) {\n          continue\n        }\n        const prob = 1 - Math.pow(1 - event_prob, count)\n        for (let i = +frame; i < +frame + this.duration; i++) {\n          if (!(i in probs)) {\n            continue\n          }\n          probs[i] += (1 - probs[i]) * prob\n        }\n      }\n    }\n  }\n\n  private calculateInterval(tag: number): void {\n    for (const player_id in this.counts) {\n      const player_name = this.id2name[player_id]\n      const counts = this.counts[player_id]\n      const probs = (this.probs[player_name] = {})\n      for (const frame in counts) {\n        probs[frame] = 1\n      }\n      const event_prob = this.kungfu2prob[this.id2kungfu[player_id]][tag] / 1024\n      for (const frame in counts) {\n        const count = counts[frame]\n        if (count === 0) {\n          continue\n        }\n        const prob = 1 - Math.pow(1 - event_prob, count)\n        probs[frame] *= prob\n        for (let i = +frame; i < +frame + this.interval; i++) {\n          if (i === +frame || !(i in probs)) {\n            continue\n          }\n          probs[i] *= 1 - probs[frame]\n        }\n      }\n    }\n  }\n\n  private calculateHybrid(tag: number): void {\n    this.calculateInterval(tag)\n    for (const player_name in this.probs) {\n      const probs = this.probs[player_name]\n      const final_probs: { [key: number]: number } = {}\n      for (const frame in probs) {\n        final_probs[frame] = 0\n      }\n      for (const frame in probs) {\n        const prob = probs[frame]\n        if (prob === 0) {\n          continue\n        }\n        for (let i = +frame; i < +frame + this.duration; i++) {\n          if (!(i in final_probs)) {\n            continue\n          }\n          final_probs[i] += (1 - final_probs[i]) * prob\n        }\n      }\n      this.probs[player_name] = final_probs\n    }\n  }\n\n  public call(fileData: string[], tag: number, interval): Probabilities {\n    this.reset(fileData)\n    this.prepare()\n    this.parse(tag)\n    if (tag === 0) {\n      this.duration = 6 * 16\n      this.calculateOverlap(tag)\n    } else if (tag === 1) {\n      this.interval = (interval || 40) * 16\n      this.calculateInterval(tag)\n    } else if (tag === 2) {\n      this.calculate(tag)\n    } else if (tag === 3) {\n      this.duration = 8 * 16\n      this.interval = (interval || 30) * 16\n      this.calculateHybrid(tag)\n    } else if (tag === 4) {\n      this.interval = (interval || 10) * 16\n      this.calculateInterval(tag)\n    }\n\n    return this.probs\n  }\n}\n\nexport default Calculator\n","import 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport React, { useEffect, useRef, useState } from 'react'\nimport * as G2 from '@antv/g2'\nimport './index.css'\n\ninterface 图表展示类型 {\n  当前查看人: string\n  data: { [key: number]: number }\n}\n\nconst { 系统配置 } = 获取当前数据()\n\nconst 图表展示: React.FC<图表展示类型> = (props) => {\n  const { data, 当前查看人 } = props\n  const id = `${当前查看人}_event_chart`\n  const [chartData, setChartData] = useState<any>()\n\n  const limitRef: any = useRef<any>()\n\n  useEffect(() => {\n    limitRef.current = false\n    initChart()\n    return () => {\n      limitRef.current = false\n    }\n  }, [])\n\n  // 处理缺少的帧数数据\n  const 处理图表数据 = (data) => {\n    if (!data) {\n      return []\n    }\n    const result: any[] = []\n    const key数据 = Object.keys(data) || []\n    const 初始帧数: any = +key数据?.[0] || 0\n    const 最终帧数: any = +key数据?.[key数据.length - 1] || 0\n    const 总执行时间 = 最终帧数 - 初始帧数\n    for (let i = 0; i < 总执行时间; i++) {\n      if (data[初始帧数 + i]) {\n        result.push({\n          帧: i,\n          触发率: data[初始帧数 + i],\n        })\n      }\n    }\n\n    return result\n  }\n\n  const initChart = () => {\n    if (limitRef.current) {\n      return\n    }\n    limitRef.current = true\n\n    const chart = chartData\n      ? chartData\n      : new G2.Chart({\n          container: id,\n          autoFit: true,\n          renderer: 'canvas',\n          padding: [20, 40, 20, 40],\n        })\n\n    if (!chartData) {\n      setChartData(chart)\n    }\n\n    const dataSource = 处理图表数据(data)\n\n    chart.clear()\n\n    // chart.axis('触发率', false)\n    chart.line().position('帧*触发率').size(3).color(系统配置?.主题色)\n\n    chart.data(dataSource)\n    chart.render()\n\n    setTimeout(() => {\n      limitRef.current = false\n    }, 10)\n  }\n\n  return <div id={id} className='tools-event-chart-wrap' />\n}\n\nexport default React.memo(图表展示)\n","import React, { useMemo, useState } from 'react'\nimport { Button, message, Select, Slider, Spin, Upload } from 'antd'\nimport { InboxOutlined } from '@ant-design/icons'\nimport Calculator from './Calculator'\nimport 图表展示 from './eventChart'\n\nimport './index.css'\nimport { 按数字生成数组 } from '@/工具函数/help'\n\nconst { Dragger } = Upload\n\nfunction 触发率分析() {\n  const [loading, setLoading] = useState<boolean>(false)\n  const [文件内容, 设置文件内容] = useState<string[]>()\n  const [shuju, setShuju] = useState<{ [key: string]: { [key: number]: number } }>()\n  const [当前查看人, 设置当前查看人] = useState<string>()\n  const [时间范围, 设置时间范围] = useState<number[]>()\n  const [触发类型, 设置触发类型] = useState<number>(0)\n  const [内置CD, 设置内置CD] = useState<number>(30)\n\n  const [原始时间范围, 设置原始时间范围] = useState<number[]>()\n\n  const handleFileChange = (e) => {\n    const file = e\n    const reader: any = new FileReader()\n    reader.readAsText(file, 'gbk')\n    reader.onload = () => {\n      if (reader.result) {\n        const list = reader?.result?.split('\\n')\n        if (list.length > 0) {\n          setLoading(true)\n          设置文件内容(list)\n          更新图表(list, 触发类型, 内置CD)\n          setLoading(false)\n        } else {\n          message.error('解析错误，请检查文件')\n        }\n      }\n    }\n  }\n\n  const 更新图表 = (传入文件内容, 传入触发类型, 传入内置CD) => {\n    if (传入文件内容?.length) {\n      const calculator = new Calculator()\n      const res = calculator.call(传入文件内容, 传入触发类型, 传入内置CD)\n      setShuju(res as any)\n      设置当前查看人(Object.keys(res)[0])\n      const 第一个人的数据: any = Object.keys(Object.values(res)[0] as any)\n      if (第一个人的数据?.length) {\n        const 第一帧 = 第一个人的数据?.[0]\n        const 最后一帧 = 第一个人的数据?.[第一个人的数据?.length - 1]\n        const 总时间 = Math.floor((最后一帧 - 第一帧) / 16)\n        设置时间范围([0, 总时间])\n        设置原始时间范围([0, 总时间])\n      }\n    }\n  }\n\n  const 均值 = useMemo(() => {\n    if (当前查看人 && [0, 3]?.includes(触发类型)) {\n      const 当前数据 = shuju?.[当前查看人]\n      if (当前数据 && Object.keys(当前数据)?.length) {\n        const 计算数据 = JSON.parse(JSON.stringify(当前数据))\n        if (时间范围?.length) {\n          const start = 时间范围[0] * 16 + (+Object.keys(当前数据)[0] || 0)\n          const end = 时间范围[1] * 16 + (+Object.keys(当前数据)[0] || 0)\n          Object.keys(当前数据).forEach((key) => {\n            if (+key < start || +key > end) {\n              delete 计算数据[key]\n            }\n          })\n        }\n\n        const arr: any[] = Object.values(计算数据)\n        let sum = 0\n        for (let i = 0; i < arr.length; i++) {\n          sum += arr[i]\n        }\n\n        return sum / arr.length\n      } else {\n        return 0\n      }\n    } else {\n      return undefined\n    }\n  }, [shuju, 当前查看人, 时间范围, 触发类型])\n\n  const 求和 = useMemo(() => {\n    if (当前查看人 && [1, 2, 4]?.includes(触发类型)) {\n      const 当前数据 = shuju?.[当前查看人]\n      if (当前数据 && Object.keys(当前数据)?.length) {\n        const 计算数据 = JSON.parse(JSON.stringify(当前数据))\n        let 总时间 = 0\n        if (时间范围?.length) {\n          const start = 时间范围[0] * 16 + (+Object.keys(当前数据)[0] || 0)\n          const end = 时间范围[1] * 16 + (+Object.keys(当前数据)[0] || 0)\n          总时间 = end - start\n          Object.keys(当前数据).forEach((key) => {\n            if (+key < start || +key > end) {\n              delete 计算数据[key]\n            }\n          })\n        }\n\n        const arr: any[] = Object.values(计算数据)\n        let sum = 0\n        for (let i = 0; i < arr.length; i++) {\n          sum += arr[i]\n        }\n\n        // 1.计算出t秒内的时间触发率之和n\n        // 2.每秒的触发率f=n/t\n        // 3.则平均interval=1/f+cd秒触发一次橙武特效\n        // 4.平均触发次数=t/interval\n\n        const 总秒数 = 总时间 / 16\n        console.log('总秒数', 总秒数)\n        const 每秒触发率 = sum / 总秒数\n        console.log('每秒触发率', 每秒触发率)\n        const 平均Interval = 1 / 每秒触发率 + 内置CD\n        console.log('平均Interval', 平均Interval)\n        const 期望触发次数 = 总秒数 / 平均Interval\n        console.log('期望触发次数', 期望触发次数)\n\n        return sum\n      } else {\n        return 0\n      }\n    } else {\n      return undefined\n    }\n  }, [shuju, 当前查看人, 时间范围])\n\n  return (\n    <Spin spinning={loading} tip='解析中'>\n      <div className='tools-event-chart-title'>\n        <Select\n          value={触发类型}\n          className='tools-event-chart-select'\n          onChange={(e) => {\n            let 更新内置CD = 40\n            设置触发类型(e)\n            if (e === 1) {\n              更新内置CD = 30\n            } else if (e === 3) {\n              更新内置CD = 30\n            } else if (e === 4) {\n              更新内置CD = 10\n            }\n            设置内置CD(更新内置CD)\n            更新图表(文件内容, e, 更新内置CD)\n          }}\n        >\n          <Select.Option key={'双会套装概率'} value={0}>\n            门派套装双会\n          </Select.Option>\n          <Select.Option key={'橙武特效'} value={1}>\n            橙武特效\n          </Select.Option>\n          <Select.Option key={'橙武子技能'} value={2}>\n            橙武子技能\n          </Select.Option>\n          {/* <Select.Option key={'大附魔·腰'} value={3}>\n            大附魔·腰\n          </Select.Option> */}\n          <Select.Option key={'大附魔·手'} value={4}>\n            大附魔·手\n          </Select.Option>\n        </Select>\n        {[1, 3, 4]?.includes(触发类型) ? (\n          <Select\n            value={内置CD}\n            className='tools-event-chart-select'\n            onChange={(e) => {\n              设置内置CD(e)\n              更新图表(文件内容, 触发类型, e)\n            }}\n            showSearch\n          >\n            {按数字生成数组(80)\n              ?.filter((item) => item >= 10)\n              .map((item) => {\n                return (\n                  <Select.Option key={`内置CD${item}`} value={item}>\n                    {`内置CD ${item}秒`}\n                  </Select.Option>\n                )\n              })}\n          </Select>\n        ) : null}\n        {shuju ? (\n          <Select\n            className='tools-event-chart-select'\n            value={当前查看人}\n            placeholder='请选择查看人'\n            allowClear\n            onChange={(e) => {\n              设置当前查看人(e)\n            }}\n          >\n            {Object.keys(shuju).map((item) => {\n              return (\n                <Select.Option key={item} value={item}>\n                  {item?.replaceAll(`\"`, '')}\n                </Select.Option>\n              )\n            })}\n          </Select>\n        ) : null}\n      </div>\n      <div>\n        {文件内容 ? (\n          <div>\n            <div className='tools-event-chart-title'>\n              <Button\n                danger\n                onClick={() => {\n                  setShuju(undefined)\n                  设置文件内容(undefined)\n                  设置当前查看人(undefined)\n                  设置时间范围(undefined)\n                  设置原始时间范围(undefined)\n                }}\n              >\n                清空\n              </Button>\n              {均值 !== undefined ? (\n                <span className='tools-event-chart-text '>\n                  均值：\n                  <span className='tools-event-chart-average'>{均值?.toFixed(6)}</span>\n                </span>\n              ) : (\n                ''\n              )}\n              {求和 !== undefined ? (\n                <>\n                  <span className='tools-event-chart-text '>\n                    期望总次数：\n                    <span className='tools-event-chart-average'>{求和?.toFixed(6)}</span>\n                  </span>\n                  {时间范围?.[1] && 时间范围?.[1] > 0 ? (\n                    <span className='tools-event-chart-text '>\n                      分均次：\n                      <span className='tools-event-chart-average'>\n                        {((求和 / 时间范围?.[1]) * 60)?.toFixed(6)}\n                      </span>\n                    </span>\n                  ) : null}\n                </>\n              ) : (\n                ''\n              )}\n              {原始时间范围?.length && 当前查看人 ? (\n                <>\n                  <span className='tools-event-chart-text'>时间范围：</span>\n                  <Slider\n                    value={时间范围}\n                    range\n                    className='tools-event-chart-setting'\n                    onChange={(e) => {\n                      设置时间范围(e)\n                    }}\n                    max={原始时间范围?.[1]}\n                    min={原始时间范围?.[0]}\n                    step={1}\n                    included\n                  />\n                  <span className='tools-event-chart-text'>{时间范围?.[1] || 0}秒</span>\n                </>\n              ) : null}\n            </div>\n            {当前查看人 && shuju ? (\n              <>\n                <图表展示\n                  key={`${当前查看人}${触发类型}${内置CD}`}\n                  当前查看人={当前查看人}\n                  data={shuju?.[当前查看人]}\n                />\n                <p className='tools-event-chart-tip'>\n                  {[2]?.includes(触发类型)\n                    ? '横坐标：帧，纵坐标：该帧对应技能的期望个数'\n                    : [1, 4]?.includes(触发类型)\n                    ? '横坐标：帧，纵坐标：对应buff触发概率'\n                    : '横坐标：帧，纵坐标：有对应buff的概率'}\n                </p>\n              </>\n            ) : null}\n          </div>\n        ) : (\n          <Dragger\n            name='file'\n            fileList={[]}\n            beforeUpload={(file) => {\n              handleFileChange(file)\n            }}\n            className={'tools-chufalv-dragger'}\n          >\n            <p className='ant-upload-drag-icon'>\n              <InboxOutlined />\n            </p>\n            <p className='ant-upload-text'>点击上传JCL文件</p>\n          </Dragger>\n        )}\n      </div>\n    </Spin>\n  )\n}\n\nexport default 触发率分析\n"],"names":["constructor","kungfu2mask","skill2mask","kungfu2prob","id2kungfu","id2name","rows","records","counts","probs","duration","interval","this","JSON","parse","stringify","reset","prepare","row","columns","split","details","length","trim","slice","player_id","player_name","kungfu_id","push","parseInt","tag","frame","react","damage_type","skill_id","skill_mask_1","skill_mask_2","event_mask_1","event_mask_2","calculate","event_prob","count","calculateOverlap","prob","Math","pow","i","calculateInterval","calculateHybrid","final_probs","call","fileData","系统配置","获取当前数据","图表展示","props","data","当前查看人","id","chartData","setChartData","useState","limitRef","useRef","useEffect","current","initChart","chart","G2","container","autoFit","renderer","padding","dataSource","result","key数据","Object","keys","初始帧数","总执行时间","帧","触发率","处理图表数据","clear","line","position","size","color","主题色","render","setTimeout","_jsx","className","React","Dragger","Upload","_ref3","_按数字生成数组","_ref4","_ref5","_ref6","loading","setLoading","文件内容","设置文件内容","shuju","setShuju","设置当前查看人","时间范围","设置时间范围","触发类型","设置触发类型","内置CD","设置内置CD","原始时间范围","设置原始时间范围","更新图表","传入文件内容","传入触发类型","传入内置CD","res","Calculator","第一个人的数据","values","第一帧","最后一帧","总时间","floor","均值","useMemo","_ref","includes","_Object$keys","当前数据","计算数据","start","end","forEach","key","arr","sum","求和","_ref2","_Object$keys2","总秒数","console","log","每秒触发率","平均Interval","期望触发次数","_jsxs","Spin","spinning","tip","children","Select","value","onChange","e","更新内置CD","Option","showSearch","按数字生成数组","filter","item","map","placeholder","allowClear","replaceAll","Button","danger","onClick","undefined","toFixed","_Fragment","Slider","range","max","min","step","included","name","fileList","beforeUpload","file","reader","FileReader","readAsText","onload","_reader$result","list","message","error","handleFileChange","InboxOutlined"],"sourceRoot":""}