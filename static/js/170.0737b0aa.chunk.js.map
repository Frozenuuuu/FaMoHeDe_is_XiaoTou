{"version":3,"file":"static/js/170.0737b0aa.chunk.js","mappings":"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","sources":["功能模块/系统工具/页面右下角工具/网页工具/JCL战斗记录解析/common.ts","功能模块/系统工具/页面右下角工具/网页工具/JCL战斗记录解析/tool.ts","功能模块/系统工具/页面右下角工具/网页工具/JCL战斗记录解析/使用说明/index.tsx","功能模块/系统工具/页面右下角工具/网页工具/JCL战斗记录解析/保存循环弹窗/index.tsx","功能模块/系统工具/页面右下角工具/网页工具/JCL战斗记录解析/index.tsx"],"sourcesContent":["export default {\n  // JCL中stack（层数）的枚举，常用语多层dot的使用。这里直接用\n  StackMap: {\n    1: '一',\n    2: '二',\n    3: '三',\n    4: '四',\n    5: '五',\n    6: '六',\n    7: '七',\n    8: '八',\n    9: '九',\n    10: '十',\n    11: '十一',\n    12: '十二',\n    13: '十三',\n    14: '十四',\n    15: '十五',\n    16: '十六',\n    17: '十七',\n    18: '十八',\n    19: '十九',\n    20: '二十',\n  },\n}\n","import { message } from 'antd'\nimport { 循环技能详情, 循环详情, 技能增益列表数据 } from '@/@types/循环'\n\nimport commonMap from './common'\n\nimport 凌海诀 from './职业技能映射枚举/凌海诀.json'\nimport 分山劲 from './职业技能映射枚举/分山劲.json'\nimport 太玄经 from './职业技能映射枚举/太玄经.json'\nimport 无方 from './职业技能映射枚举/无方.json'\nimport 花间游 from './职业技能映射枚举/花间游.json'\nimport 山海心诀悟 from './职业技能映射枚举/山海心诀悟.json'\nimport 无方悟 from './职业技能映射枚举/无方悟.json'\nimport 毒经 from './职业技能映射枚举/毒经.json'\nimport 易筋经 from './职业技能映射枚举/易筋经.json'\nimport 北傲诀 from './职业技能映射枚举/北傲诀.json'\nimport 周天功 from './职业技能映射枚举/周天功.json'\nimport 太虚剑意 from './职业技能映射枚举/太虚剑意.json'\nexport const 心法枚举 = {\n  周天功: 周天功,\n  凌海诀: 凌海诀,\n  北傲诀,\n  分山劲: 分山劲,\n  太玄经: 太玄经,\n  无方: 无方,\n  毒经: 毒经,\n  易筋经: 易筋经,\n  花间游: 花间游,\n  太虚剑意: 太虚剑意,\n  '山海心诀·悟': 山海心诀悟,\n  '无方·悟': 无方悟,\n}\n\nconst 无界统一buff = ['70161', '70188']\nconst DOT直接生成层数心法 = [\n  '花间游',\n  '无方',\n  '无方·悟',\n  '凌海诀',\n  '毒经',\n  '易筋经',\n  '分山劲',\n  '北傲诀',\n]\n\nexport const 获取数据 = ({ 心法, 数据, 最大时间, 最小时间 }): 循环详情 => {\n  const 心法数据枚举 = 心法枚举[心法]\n  const JSONData = JSON.parse(数据 || '{}')\n  const res: 循环技能详情[] = []\n\n  // 判断有没有战斗角色\n  const PlayersId = JSONData?.players && Object.keys(JSONData?.players)?.[0]\n  const TargetId = JSONData?.targets?.[PlayersId]?.[0]\n\n  const 解析战斗数据 = JSONData?.records?.[PlayersId]?.[TargetId] || JSONData\n\n  let 初始时间 = 0\n  let 战斗时间 = 0\n  if (心法数据枚举) {\n    Object.keys(解析战斗数据).forEach((技能实例) => {\n      // ID/等级/层数;ID/等级/层数\n      const 所有技能信息 = 技能实例?.split(';') // 第一个为当前技能 ID/等级/层数\n      const 当前技能信息 = 所有技能信息[0]?.split('/') // ID/等级/层数\n      if (当前技能信息?.length) {\n        // ————————基础取值部分————————\n        let 技能名称ID = 当前技能信息[0] // 当前技能ID\n        let 技能等级 = +当前技能信息[1] === 1 ? undefined : +当前技能信息[1] // 当前技能的等级\n        let 技能层数: any = 当前技能信息[2] ? Number(当前技能信息[2]) : undefined // 技能层数，常见于dot上\n\n        // 特殊处理当同一个技能，id相同等级不同调用不同伤害名称时，修正技能ID，用于快速找到映射。例万花 墨海、临源\n        if (心法数据枚举?.技能带等级?.includes(技能名称ID)) {\n          技能名称ID = `${技能名称ID}_${技能等级 || 1}`\n        }\n\n        // dot触发技能特殊，第一个技能为dot技能id，第二个技能为触发技能id\n        if (所有技能信息?.length > 1 && !!所有技能信息?.[1]) {\n          const dot技能 = 所有技能信息?.[0]\n          const 触发技能 = 所有技能信息?.[1]\n          const dot技能信息 = dot技能?.split('/')\n          const 触发技能信息 = 触发技能?.split('/')\n          // 用拼接的方式区分不同技能触发的不同dot，例万花 钟林、不同技能上的钟林dot系数不同，调用不同伤害实例\n          技能名称ID = `${dot技能信息[0]}_${触发技能信息[0]}`\n          // 技能等级同理，由触发技能决定\n          技能等级 = +触发技能信息[1] === 1 ? undefined : +触发技能信息[1]\n\n          if (所有技能信息?.length === 2) {\n            const dot技能数据 = 所有技能信息?.[1]\n            const dot技能数据分割 = dot技能数据?.split('/')\n            技能层数 = dot技能数据分割[2] || 1\n          } else if (所有技能信息?.length === 3) {\n            const dot技能数据 = 所有技能信息?.[1]\n            const dot技能数据分割 = dot技能数据?.split('/')\n            const 引爆技能层数 = 所有技能信息?.[2]\n            const 引爆技能数据分割 = 引爆技能层数?.split('/')\n            技能层数 = (+dot技能数据分割?.[2] || 1) * (+引爆技能数据分割?.[2] || 1)\n          }\n        }\n\n        let 技能名称 = 心法数据枚举?.skills?.[技能名称ID]\n        // 对部分心法，未支持dot的多层声明的情况，采用这种方式特殊处理，例：万灵 贯穿 dot 10层 调用为 贯穿·十\n        // 后续新门派均不采用次方法，已经支持门派参考 DOT直接生成层数心法 可以节省大量代码\n        if (技能名称?.includes('DOT') && !DOT直接生成层数心法?.includes(心法)) {\n          if (技能层数) {\n            技能名称 = `${技能名称}·${commonMap?.StackMap?.[技能层数]}`\n          }\n        }\n        // 该技能携带增益造成伤害的各情况时间序列\n        const 技能增益结果对象 = 解析战斗数据[技能实例]\n        // ————————基础取值部分————————END\n\n        // ————————技能解析部分————————\n        let 技能数量 = 0\n        let 技能增益列表: 技能增益列表数据[] = []\n\n        // 声明部分调用函数\n        const 判断时间增加数量 = (时间数组) => {\n          let 增益数量获取 = 1\n          const 造成伤害时间 = 时间数组[时间数组.length - 1]?.[0] || 0\n          if (造成伤害时间 <= 最大时间 * 16 && 造成伤害时间 >= 最小时间 * 16) {\n            增益数量获取 = 时间数组?.length || 1\n            if (typeof 造成伤害时间 === 'number') {\n              if (战斗时间 < 造成伤害时间) {\n                战斗时间 = 造成伤害时间\n              }\n              if (初始时间 !== 0) {\n                if (!初始时间 || 造成伤害时间 < 初始时间) {\n                  初始时间 = 造成伤害时间\n                }\n              }\n            }\n            技能数量 += 增益数量获取\n          }\n        }\n\n        // 解析技能实际伤害序列\n        ;(Object.keys(技能增益结果对象) || []).forEach((增益Buff列表) => {\n          // 没有携带任何增益的该技能伤害\n          if (增益Buff列表 === ';;') {\n            const 战斗时间数组 = 技能增益结果对象[增益Buff列表]\n            判断时间增加数量(战斗时间数组)\n          } else {\n            // 分号分割成三部分 当前Buff，快照Buff，目标Buff\n            const 用分号分割 = 增益Buff列表?.split(';')\n            const 是否吃快照 = 心法数据枚举?.吃快照技能?.includes(技能名称ID)\n            const 是否是NPC技能 = 心法数据枚举?.npc技能?.includes(技能名称ID)\n            // 对buff判断快照、npc情况。得到最后技能实际携带的buff列表\n            const 最终增益Buff数组: string[] = 快照判断(\n              用分号分割,\n              是否吃快照,\n              心法数据枚举,\n              是否是NPC技能\n            )\n            if (最终增益Buff数组?.length) {\n              const 增益buff名称列表: string[] = []\n              最终增益Buff数组.forEach((增益) => {\n                const 增益数组 = 增益?.split('/')\n                if (增益数组?.length) {\n                  let 增益名称ID = 增益数组[0]\n                  const 增益等级 = Number(增益数组[1])\n                  const 增益层数 = Number(增益数组[2])\n                  // 无界统一buff，例70161增伤 70188易伤 统一处理\n                  if (无界统一buff?.includes(增益名称ID)) {\n                    增益名称ID = `${增益名称ID}_${增益等级}`\n                  }\n                  let 增益名称 =\n                    心法数据枚举?.buff?.[增益名称ID] || 心法数据枚举?.buff?.[`;${增益名称ID}`]\n                  // 判断伤腰大附魔\n                  if (增益等级 > 1 && 增益名称 && 增益名称ID === '15455') {\n                    增益名称 = `${增益名称}·${增益等级}`\n                  }\n                  // 处理部分buff同id等级不同增益不同的特殊情况\n                  if (增益名称 && 心法数据枚举?.Buff带等级?.includes(增益名称ID)) {\n                    增益名称 = `${增益名称}·${增益等级}`\n                  }\n                  // 处理buff可以有多层的情况\n                  if (增益名称 && 心法数据枚举?.Buff带层数?.includes(增益名称ID)) {\n                    增益名称 = `${增益名称}·${增益层数}`\n                  }\n                  if (增益名称) {\n                    if (!增益buff名称列表?.includes(增益名称)) {\n                      // 处理该技能实际不吃某增益但是携带了对应buff，增加计算效率\n                      // 例如无妨大部分技能携带了植物温性，但是实际只有苍棘缚地吃这个增益\n                      if (!心法数据枚举?.技能过滤增益?.[技能名称ID]?.[增益名称ID]) {\n                        增益buff名称列表.push(增益名称)\n                      } else {\n                        console.info(`${技能名称ID}不吃${增益名称ID}，已过滤`)\n                      }\n                    }\n                  } else {\n                    // 过滤部分id、大附魔帽等\n                    if (!['15436', '71182']?.includes(增益名称ID)) {\n                      console.info(`增益名称ID未匹配${增益名称ID}`)\n                    }\n                  }\n                }\n              })\n              const 战斗时间数组 = 技能增益结果对象[增益Buff列表]\n              // 获取该战斗时间数组内在最大时间范围内的数量\n              const 生效战斗时间数组 = 战斗时间数组.filter(\n                (item) => Number(item?.[0] <= 最大时间 * 16) && Number(item?.[0] >= 最小时间 * 16)\n              )\n              // 对增益进行排序，方便对比\n              增益buff名称列表.sort((a, b) => a.localeCompare(b))\n\n              if (生效战斗时间数组?.length) {\n                // 先增加总数量\n                判断时间增加数量(生效战斗时间数组)\n\n                // 增加增益列表那数量\n                const 增益buff列表名字 = 增益buff名称列表.join(',')\n                const 该增益技能数量 = 生效战斗时间数组?.length || 1\n                if (技能增益列表?.some((item) => item?.增益名称 === 增益buff列表名字)) {\n                  技能增益列表 = 技能增益列表.map((item) => {\n                    return item?.增益名称 === 增益buff列表名字\n                      ? {\n                          ...item,\n                          增益技能数: item.增益技能数 + 该增益技能数量,\n                        }\n                      : item\n                  })\n                } else {\n                  技能增益列表.push({\n                    增益名称: 增益buff列表名字,\n                    增益技能数: 该增益技能数量,\n                  })\n                }\n              }\n            } else {\n              console.info('此技能无增益', 技能名称)\n              const 战斗时间数组 = 技能增益结果对象[增益Buff列表]\n              判断时间增加数量(战斗时间数组)\n            }\n          }\n        })\n\n        // 这里如果不排序就是按考拉的顺序显示，方便对比\n        技能增益列表.sort((a, b) => a.增益名称.localeCompare(b.增益名称))\n\n        if (技能数量) {\n          if (技能层数) {\n            res.push({\n              技能名称,\n              技能等级,\n              伤害层数: 技能层数,\n              技能数量,\n              技能增益列表,\n            })\n          } else {\n            res.push({\n              技能名称,\n              技能等级,\n              技能数量,\n              技能增益列表,\n            })\n          }\n        }\n\n        // ————————异常提示————————\n        if (!技能名称) {\n          message.error(`技能名称ID未获取：${技能名称ID}`)\n        }\n      }\n    })\n  }\n\n  console.info('res', res)\n  // 对技能名称进行排序\n  res.sort((a, b) => a.技能名称?.localeCompare(b?.技能名称))\n\n  console.info('战斗时间', 战斗时间)\n  console.info('初始时间', 初始时间)\n\n  return {\n    // 战斗时间: 战斗时间 / 16,\n    战斗时间: (战斗时间 - 初始时间) / 16,\n    技能详情: res,\n  }\n}\n\n/**\n * 先声明一个吃快照的属性集合\n * 然后在判断 一个 吃快照的技能时\n * 吃快照的属性只检查第二个数组的情况\n * 不吃快照的属性只检查第一个数组和第三个分组的情况\n * @params 数组 当前Buff，快照Buff，目标Buff\n * 攻击会心会效无双增伤非侠吃快照\n */\n\nconst 快照判断 = (\n  数组: string[] = [],\n  是否吃快照 = false,\n  心法数据枚举,\n  是否是NPC技能 = false\n): string[] => {\n  const 最终Buff: string[] = []\n  const 当前Buff = 数组?.[0]?.split(',')\n  const 快照Buff = 数组?.[1]?.split(',')\n  const 目标Buff = 数组?.[2]?.split(',')\n  const 非快照buff = [...(当前Buff || []), ...(目标Buff || [])]\n\n  let 快照Buff列表 = 心法数据枚举?.快照Buff列表\n  const Buff自身存在快照区分 = 心法数据枚举?.Buff自身存在快照区分\n\n  if (是否是NPC技能) {\n    快照Buff列表 = 快照Buff列表.concat(心法数据枚举?.npc额外快照buff列表 || [])\n  }\n\n  if (是否吃快照) {\n    if (快照Buff?.length) {\n      快照Buff.forEach((增益) => {\n        const splitZengyi = 增益?.split('/')\n        const 增益名称ID = splitZengyi[0]\n        // !特殊处理养荣类型buff\n        if (增益 && 增益名称ID) {\n          if (Buff自身存在快照区分?.includes(增益名称ID)) {\n            if (!最终Buff?.includes(`${增益名称ID}_快照`)) {\n              最终Buff.push(`${增益名称ID}_快照`)\n            }\n          } else if (快照Buff列表?.includes(增益名称ID)) {\n            if (!最终Buff?.includes(增益)) {\n              最终Buff.push(增益)\n            }\n          }\n        }\n      })\n    }\n    非快照buff.forEach((增益) => {\n      const splitZengyi = 增益?.split('/')\n      const 增益名称ID = splitZengyi[0]\n      // !特殊处理养荣类型buff\n      if (增益 && 增益名称ID) {\n        if (Buff自身存在快照区分?.includes(增益名称ID)) {\n          if (!最终Buff?.includes(`${增益名称ID}_常驻`)) {\n            最终Buff.push(`${增益名称ID}_常驻`)\n          }\n        } else if (!快照Buff列表?.includes(增益名称ID)) {\n          if (!最终Buff?.includes(增益)) {\n            最终Buff.push(增益)\n          }\n        }\n      }\n    })\n    // 判断最终buff有没有遗漏某个buff，此部分代码无实际作用，仅调试用\n    const 全部buff = [...当前Buff, ...快照Buff, ...目标Buff]\n    if (全部buff?.length) {\n      全部buff.forEach((增益) => {\n        const splitZengyi = 增益?.split('/')\n        let 增益名称ID = splitZengyi[0]\n        const 增益等级 = Number(splitZengyi[1])\n        if (无界统一buff?.includes(增益名称ID)) {\n          增益名称ID = `${增益名称ID}_${增益等级}`\n        }\n        if (增益 && 增益名称ID) {\n          if (!最终Buff?.includes(增益)) {\n            // console.info('最终Buff', 最终Buff)\n            // console.info('增益', 增益)\n            // console.info('增益名称ID', 增益名称ID)\n            // console.info(`存在遗漏快照buff${增益名称ID}`)\n          }\n        }\n      })\n    }\n  } else {\n    非快照buff.forEach((增益) => {\n      const splitZengyi = 增益?.split('/')\n      const 增益名称ID = splitZengyi[0]\n      if (增益 && 增益名称ID) {\n        if (!最终Buff?.includes(增益)) {\n          最终Buff.push(增益)\n        }\n      }\n    })\n  }\n\n  return 最终Buff\n}\n\nexport const 战斗数据转换 = ({ 心法, 数据, 最大时间, 最小时间 }): 循环详情 => {\n  const 心法数据枚举 = 心法枚举[心法]\n  const JSONData = JSON.parse(数据 || '{}')\n  const res: 循环技能详情[] = []\n\n  let 初始时间 = 0\n  let 战斗时间 = 0\n\n  function removeChineseCharacters(str) {\n    if (str) {\n      return str.replace(/[\\u4e00-\\u9fa5]/g, '')\n    } else {\n      return ''\n    }\n  }\n\n  if (心法数据枚举) {\n    Object.keys(JSONData).forEach((currentKey) => {\n      const key = currentKey?.replaceAll('(', '')?.replaceAll(')', '')?.replaceAll('|', '')\n      const 全部技能数据 = key?.split('#')\n      const 全部技能 = [\n        `${全部技能数据[0]}#${全部技能数据[1]}`,\n        全部技能数据[2],\n        全部技能数据[3],\n      ]?.filter((item) => item)\n      const 获取技能数据 = 全部技能?.[0]?.split('#')?.[1]?.split('-')\n      let 获取技能ID = 获取技能数据?.[0]\n      let 技能等级 = +获取技能数据?.[1] || 1\n      let 技能层数 = +(获取技能数据?.[2] || 1)\n\n      let 技能总数 = 0\n      const 技能增益列表: 技能增益列表数据[] = []\n\n      if (key?.includes('DOT')) {\n        const DOTID = 获取技能ID\n        const 释放DOT技能 = key?.split('#')?.[2]?.split('-')\n        const 释放DOT技能ID = 释放DOT技能?.[0]\n        const 释放DOT技能等级 = 释放DOT技能?.[1] || 1\n        if (!DOTID || !释放DOT技能ID) {\n          获取技能ID = ''\n        } else {\n          获取技能ID = `${DOTID}_${释放DOT技能ID}`\n          技能等级 = +释放DOT技能等级\n        }\n      }\n\n      // 特殊处理当同一个技能，id相同等级不同调用不同伤害名称时，修正技能ID，用于快速找到映射。例万花 墨海、临源\n      if (心法数据枚举?.技能带等级?.includes(获取技能ID)) {\n        获取技能ID = `${获取技能ID}_${技能等级 || 1}`\n      }\n\n      if (全部技能?.length === 2) {\n        const dot技能数据 = 全部技能?.[0]?.replace(')', '')\n        const dot技能 = dot技能数据?.split('-')\n        const dot技能层数 = removeChineseCharacters(dot技能?.[2]) || 1\n        技能层数 = +dot技能层数 || 1\n      } else if (全部技能?.length === 3) {\n        const dot技能数据 = 全部技能?.[0]?.replace(')', '')\n        const dot技能 = dot技能数据?.split('-')\n        const 引爆技能数据 = 全部技能?.[2]\n        // const 引爆技能 = 引爆技能数据?.split('#')?.[1]?.split('-')\n        技能层数 = (+removeChineseCharacters(dot技能?.[2]) || 1) * 1\n        // (+removeChineseCharacters(引爆技能?.[2]) || 1)\n\n        // 特殊处理某些引爆技能\n        if (['吞海']?.some((item) => currentKey?.includes(item))) {\n          if (引爆技能数据?.split('-')?.[0]) {\n            获取技能ID = `${获取技能ID}_${引爆技能数据?.split('-')?.[0]}`\n          }\n        }\n        // 统一处理玉石引爆\n        if (['#6126-5', '#6128-5', '#6129-5']?.some((item) => currentKey?.includes(item))) {\n          if (['#6134', '#6135', '#6136']?.some((item) => currentKey?.includes(item))) {\n            获取技能ID = `${获取技能ID}_6126`\n          } else {\n            获取技能ID = `${获取技能数据?.[0]}_6126`\n          }\n        }\n      }\n\n      function 判断时间函数(timelineData: any = []) {\n        let num = 0\n        timelineData?.forEach((time) => {\n          if (time?.length) {\n            const 造成伤害时间 = time?.[0] || 0\n            if (造成伤害时间 <= 最大时间 * 16 && 造成伤害时间 >= 最小时间 * 16) {\n              if (typeof 造成伤害时间 === 'number') {\n                if (战斗时间 < 造成伤害时间) {\n                  战斗时间 = 造成伤害时间\n                }\n                if (初始时间 !== 0) {\n                  if (!初始时间 || 造成伤害时间 < 初始时间) {\n                    初始时间 = 造成伤害时间\n                  }\n                }\n              }\n              num += 1\n            }\n          }\n        })\n        return num\n      }\n\n      function 获取buff实际名称(buffListPorps, 完整buff列表) {\n        const list: string[] = []\n        const buffList = buffListPorps || []\n        let 常驻buff数量索引: any = undefined\n\n        const 是否为吃快照技能 = 心法数据枚举?.吃快照技能?.includes(获取技能ID)\n        if (是否为吃快照技能) {\n          const 常驻buff数量 = 完整buff列表\n            ?.split('|')?.[0]\n            ?.split(',')\n            ?.filter((item) => item)?.length\n          常驻buff数量索引 = 常驻buff数量\n        }\n\n        buffList.forEach((currentBuff, index) => {\n          const buff = currentBuff\n            ?.replaceAll('连缘蛊增伤#-19513', '连缘蛊增伤#19513')\n            ?.replaceAll('众嗔#-13910', '众嗔#13910')\n            ?.replaceAll('清流#-12588', '清流#12588')\n            ?.replaceAll('溅玉#-24599', '溅玉#24599')\n            ?.replaceAll('涓流#-9722', '涓流#9722')\n            ?.replaceAll('星火#-29478', '星火#29478')\n          // ?.replaceAll('青冠#-29525', '青冠#-29525')\n          const buffData = buff?.split('#')?.[1]\n          const buffSplit = buffData?.split('-')\n          const buffId = buffSplit?.[0]\n          const bufflevel = buffSplit?.[1] || 1\n          const buffTick = buffSplit?.[2] || 1\n          // const buffTick = buffSplit?.[2]\n          let 增益名称 = 心法数据枚举?.buff?.[buffId] || 心法数据枚举?.buff?.[`;${buffId}`]\n          if (增益名称 && 心法数据枚举?.Buff带等级?.includes(buffId)) {\n            增益名称 = `${增益名称}·${bufflevel}`\n          }\n          if (心法数据枚举?.Buff带层数?.includes(buffId)) {\n            增益名称 = `${增益名称}·${buffTick}`\n          }\n\n          if (\n            是否为吃快照技能 &&\n            常驻buff数量索引 !== undefined &&\n            心法数据枚举?.Buff自身存在快照区分?.includes(buffId)\n          ) {\n            if (index < 常驻buff数量索引) {\n              增益名称 = `${增益名称}_常驻`\n            } else {\n              增益名称 = `${增益名称}_快照`\n            }\n          }\n\n          if (增益名称) {\n            if (!list?.includes(增益名称)) {\n              list.push(增益名称)\n            }\n          } else {\n            console.error(`增益未匹配：${buff}`)\n          }\n        })\n        return list\n      }\n\n      if (获取技能ID) {\n        Object.keys(JSONData?.[currentKey])?.forEach((gain) => {\n          if (gain) {\n            if (gain === '||') {\n              const 数量 = 判断时间函数(JSONData?.[currentKey]?.[gain]?.timeline)\n              技能总数 = 技能总数 + 数量\n            } else {\n              const 获取buff列表 = gain\n                ?.replaceAll('|', ',')\n                .split(',')\n                ?.filter((item) => item)\n              if (获取buff列表?.length) {\n                const buff实际名称 = 获取buff实际名称(获取buff列表, gain)\n                const 数量 = 判断时间函数(JSONData?.[currentKey]?.[gain]?.timeline)\n                技能总数 = 技能总数 + 数量\n                技能增益列表.push({\n                  增益名称: buff实际名称?.join(','),\n                  增益技能数: 数量,\n                })\n              }\n            }\n          }\n        })\n\n        let 技能名称 = 心法数据枚举?.skills?.[获取技能ID]\n\n        // 对部分心法，未支持dot的多层声明的情况，采用这种方式特殊处理，例：万灵 贯穿 dot 10层 调用为 贯穿·十\n        // 后续新门派均不采用次方法，已经支持门派参考 DOT直接生成层数心法 可以节省大量代码\n        if (技能名称?.includes('DOT') && !DOT直接生成层数心法?.includes(心法)) {\n          if (技能层数) {\n            技能名称 = `${技能名称}·${commonMap?.StackMap?.[技能层数]}`\n          }\n        }\n\n        if (!技能名称) {\n          message.error(`技能名称ID未获取：${key}`)\n        }\n\n        if (技能总数) {\n          const obj: any = {\n            技能名称,\n            技能数量: 技能总数,\n            技能增益列表,\n          }\n          if (技能层数 > 1) {\n            obj.伤害层数 = 技能层数\n          }\n          if (技能等级 > 1) {\n            obj.技能等级 = 技能等级\n          }\n          res.push(obj)\n        }\n      }\n    })\n  }\n\n  console.info('res', res)\n  // 对技能名称进行排序\n  res.sort((a, b) => a.技能名称?.localeCompare(b?.技能名称))\n\n  console.info('战斗时间', 战斗时间)\n  console.info('初始时间', 初始时间)\n  return {\n    // 战斗时间: 战斗时间 / 16,\n    战斗时间: (战斗时间 - 初始时间) / 16,\n    技能详情: res,\n  }\n}\n","import { QuestionCircleOutlined } from '@ant-design/icons'\nimport { Popover } from 'antd'\nimport './index.css'\n\nconst 使用须知 = () => {\n  return (\n    <h1 className={'tools-jcl-info-modal-title'}>\n      <Popover\n        title='使用说明'\n        content={\n          <div>\n            <p>1、录制你的JCL战斗文件{`(格式后缀为.jcl)`}</p>\n            <p>\n              2、打开魔盒下载\n              <a href='https://www.jx3box.com/bps/83133' target='_blank' rel='noreferrer'>\n                考拉大佬的Formulator\n              </a>\n            </p>\n            <p>\n              3、打开Formulator，点击<span className='tools-jcl-info-modal-tip-btn'>请上传JCL</span>\n              <p>\n                若上传后无反应，说明Formulator未对该JCL对应的职业/奇穴等进行兼容，请移步魔盒联系考拉大佬\n              </p>\n            </p>\n            <p>\n              4、选择<span className='tools-jcl-info-modal-tip-btn'>一键大附魔</span>\n              ，点击<span className='tools-jcl-info-modal-tip-btn'>开始模拟</span>\n            </p>\n            <p>\n              5、点击<span className='tools-jcl-info-modal-tip-btn'>保存JSON</span>\n              ，并在你放置.jcl文件的文件夹下找到相同名字的.json文件\n            </p>\n            <p>\n              6、打开网页计算器JCL战斗解析，复制JSON文件内容至\n              <span className='tools-jcl-info-modal-tip-btn'>数据</span>输入框。\n              选择对应的心法、战斗时间\n            </p>\n            <p>\n              7、点击\n              <span className='tools-jcl-info-modal-tip-btn'>获取数据</span>\n            </p>\n            <p style={{ marginBottom: 8 }}>\n              8、如果该职业支持直接将解析数据保存为计算循环，可点击\n              <span className='tools-jcl-info-modal-tip-btn'>保存循环</span>\n              按钮。直接生成外部可计算循环。\n            </p>\n          </div>\n        }\n      >\n        <span className={'tools-jcl-info-modal-tip-text'}>\n          使用说明\n          <QuestionCircleOutlined className={'tools-jcl-info-modal-tip-icon'} />\n        </span>\n      </Popover>\n    </h1>\n  )\n}\n\nexport default 使用须知\n","import { App, Form, Input, message, Modal, Select, Tabs } from 'antd'\nimport React, { useEffect, useMemo, useState } from 'react'\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport { 更新当前自定义循环列表 } from '@/store/data'\nimport { 心法枚举 } from '../tool'\nimport { 循环数据, 循环详情 } from '@/@types/循环'\nimport './index.css'\nimport { 获取心法数据 } from '@/心法模块'\n\nconst { 计算循环, 缓存映射 } = 获取当前数据()\n\ninterface 保存循环弹窗类型 {\n  导入循环保存弹窗: boolean\n  设置导入循环保存弹窗: (e: boolean) => void\n  结果数据: 循环详情 | undefined\n  目标心法: string\n  原始数据: string | undefined\n}\n\nfunction 保存循环弹窗(props: 保存循环弹窗类型) {\n  const { modal } = App.useApp()\n\n  const { 导入循环保存弹窗, 设置导入循环保存弹窗, 结果数据, 目标心法, 原始数据 } = props\n  // 保存类型，覆盖｜新增\n  const [导入循环类型, 设置导入循环类型] = useState<'覆盖' | '新增'>()\n  // 导入循环名称保存输入\n  const [导入循环名称输入, 设置导入循环名称输入] = useState<string>()\n  // 保存类型，覆盖｜新增\n  const [覆盖循环名, 设置覆盖循环名] = useState<string>()\n\n  const 自定义循环列表 = useAppSelector((state) => state?.data?.自定义循环列表)\n\n  const dispatch = useAppDispatch()\n\n  const 全部循环 = useMemo(() => {\n    return (计算循环 || []).concat(自定义循环列表)\n  }, [自定义循环列表, 计算循环])\n\n  useEffect(() => {\n    if (导入循环保存弹窗) {\n      if (自定义循环列表?.length) {\n        设置导入循环类型('覆盖')\n      } else {\n        设置导入循环类型('新增')\n      }\n    } else {\n      设置导入循环类型(undefined)\n      设置导入循环名称输入(undefined)\n      设置覆盖循环名(undefined)\n    }\n  }, [导入循环保存弹窗, 自定义循环列表])\n\n  const 保存导入循环前 = () => {\n    const 名称 = 导入循环类型 === '覆盖' ? 覆盖循环名 : 导入循环名称输入 || ''\n    if (!名称) {\n      message.error('请输入保存循环名称')\n      return\n    }\n\n    if (导入循环类型 === '新增' && 全部循环?.find((item) => item?.名称 === 名称)) {\n      message.error('该循环名称重复，请更换后再试')\n      return\n    }\n\n    const 快照计算: any[] = 判断快照计算(目标心法, 结果数据)\n    const 奇穴 = 判断奇穴(目标心法, 原始数据)\n\n    if (!奇穴?.length) {\n      return\n    }\n\n    const 保存循环: 循环数据 = {\n      名称: 名称,\n      标题: 名称,\n      类型: '自定义',\n      标记: '导入',\n      快照计算,\n      奇穴,\n      循环详情: [结果数据 as any],\n    }\n\n    const 新自定义循环 = 自定义循环列表?.some((item) => item?.名称 === 名称)\n      ? 自定义循环列表.map((item) => {\n          return item.名称 === 名称 ? 保存循环 : item\n        })\n      : (自定义循环列表 || []).concat([保存循环])\n\n    dispatch(更新当前自定义循环列表(新自定义循环))\n\n    message.success('保存成功')\n    设置导入循环保存弹窗(false)\n  }\n\n  useEffect(() => {\n    // redux变动，更新storage信息\n    const 保存信息 = {}\n    ;(自定义循环列表 || []).forEach((item) => {\n      保存信息[item.名称] = {\n        ...item,\n      }\n    })\n    localStorage?.setItem(缓存映射.自定义循环, JSON.stringify(保存信息))\n  }, [自定义循环列表])\n\n  // 删除导入循环\n  const 删除循环前提示 = (e, 名称) => {\n    e.stopPropagation()\n    e.preventDefault()\n\n    modal.confirm({\n      title: `确定要删除循环【${名称}】吗?`,\n      content: '删除后将无法恢复',\n      okText: '我要删除',\n      onOk: async () => {\n        删除循环(名称)\n      },\n    })\n  }\n\n  const 删除循环 = (名称) => {\n    dispatch(更新当前自定义循环列表(自定义循环列表.filter((item) => item.名称 !== 名称)))\n  }\n\n  return (\n    <Modal\n      centered\n      title='保存导入循环'\n      okButtonProps={{\n        disabled: !(导入循环类型 === '覆盖' ? 覆盖循环名 : 导入循环名称输入),\n      }}\n      open={导入循环保存弹窗}\n      onCancel={() => 设置导入循环保存弹窗(false)}\n      onOk={保存导入循环前}\n      width={630}\n      destroyOnClose\n      className={'jcl-import-cycle-save-modal'}\n    >\n      <Tabs\n        className={'jcl-import-cycle-save-modal-content'}\n        type='card'\n        activeKey={导入循环类型}\n        onChange={(e) => 设置导入循环类型(e as any)}\n      >\n        <Tabs.TabPane tab={'覆盖'} key='覆盖'>\n          <Select\n            value={覆盖循环名}\n            onChange={设置覆盖循环名}\n            optionLabelProp='label'\n            placeholder={'请选择你要覆盖的循环'}\n          >\n            {自定义循环列表.map((item) => {\n              return (\n                <Select.Option value={item.名称} key={item.名称} label={item.名称}>\n                  <div className={'jcl-import-cycle-save-label'}>\n                    <span>{item.名称}</span>\n                    <span\n                      onClick={(e) => 删除循环前提示(e, item.名称)}\n                      className={'jcl-import-cycle-save-delete'}\n                    >\n                      删除\n                    </span>\n                  </div>\n                </Select.Option>\n              )\n            })}\n          </Select>\n        </Tabs.TabPane>\n        <Tabs.TabPane tab={'新增'} key='新增'>\n          <Form>\n            <Form.Item>\n              <Input\n                value={导入循环名称输入}\n                placeholder='请输入导入循环名称'\n                onChange={(e) => 设置导入循环名称输入(e?.target?.value)}\n                maxLength={12}\n              />\n            </Form.Item>\n          </Form>\n        </Tabs.TabPane>\n      </Tabs>\n    </Modal>\n  )\n}\n\nexport const 判断快照计算 = (目标心法, 结果数据) => {\n  const 心法数据枚举 = 心法枚举[目标心法]\n  const 套装Buff名称 = 心法数据枚举?.门派套装buff?.[0]\n  const 快照列表: string[] = []\n  const 数据字符串 = JSON.stringify(结果数据 || '{}')\n  if (套装Buff名称) {\n    if (数据字符串?.includes('套装Buff名称')) {\n      快照列表.push('套装会心会效')\n    }\n  }\n  if (数据字符串?.includes('大附魔')) {\n    快照列表.push('大附魔')\n  }\n  if (数据字符串?.includes('风特效')) {\n    快照列表.push('风特效')\n  }\n  if (数据字符串?.includes('水特效')) {\n    快照列表.push('水特效')\n  }\n\n  return 快照列表\n}\n\nexport const 判断奇穴 = (目标心法, 原始数据) => {\n  const 原始数据对象 = JSON.parse(原始数据 || '{}')\n  const { 奇穴数据 } = 获取心法数据(目标心法)\n\n  const PlayersId = 原始数据对象?.players && Object.keys(原始数据对象?.players)?.[0]\n  const 奇穴IDs = 原始数据对象?.select_talents && 原始数据对象?.select_talents?.[PlayersId]\n  if (奇穴IDs?.length && 奇穴数据?.[0]?.奇穴列表?.[0]?.id) {\n    const res: string[] = []\n    let errorId = ''\n    奇穴数据?.map((item, index) => {\n      const 该层奇穴 = item?.奇穴列表 || []\n      const 对应ID奇穴 = 该层奇穴?.find((a) => a?.id?.toString() === 奇穴IDs?.[index]?.toString())\n      if (对应ID奇穴) {\n        res.push(对应ID奇穴?.奇穴名称)\n      } else {\n        errorId = 奇穴IDs?.[index]\n      }\n    })\n    if (errorId) {\n      message.error(`存在未识别奇穴：${errorId}`)\n      return []\n    } else {\n      return res\n    }\n  } else {\n    message.error(`该心法暂未支持`)\n    return []\n  }\n}\n\nexport default 保存循环弹窗\n","import React, { useEffect, useState } from 'react'\nimport { Button, Form, Input, Select, Spin, message } from 'antd'\nimport { 心法枚举, 获取数据, 战斗数据转换 } from './tool'\nimport 使用说明 from './使用说明'\nimport 保存循环弹窗, { 判断奇穴 } from './保存循环弹窗'\nimport { 循环详情 } from '@/@types/循环'\nimport './index.css'\n\nconst 支持导入心法列表 = Object.keys(心法枚举)\n\nfunction JCL战斗记录解析() {\n  const [结果数据, 更新结果数据] = useState<循环详情>()\n  const [form] = Form.useForm()\n  const [loading, setLoading] = useState<boolean>(false)\n  const [导入循环保存弹窗, 设置导入循环保存弹窗] = useState<boolean>(false)\n  const [目标心法, 设置目标心法] = useState(支持导入心法列表?.[0])\n  const [原始数据, 设置原始数据] = useState<string | undefined>(undefined)\n  const [解析方式, 设置解析方式] = useState<string>('新版')\n\n  useEffect(() => {\n    form?.setFieldsValue({\n      目标心法: 支持导入心法列表?.[0],\n      战斗时间: 301,\n      解析方式: '新版',\n    })\n  }, [form, 支持导入心法列表])\n\n  const 获取远程数据 = async () => {\n    form.validateFields().then(async (values) => {\n      setLoading(true)\n      const res =\n        values?.解析方式 === '新版'\n          ? await 战斗数据转换({\n              心法: values?.目标心法,\n              数据: values?.数据,\n              最大时间: values?.战斗时间,\n              最小时间: 0,\n            })\n          : await 获取数据({\n              心法: values?.目标心法,\n              数据: values?.数据,\n              最大时间: values?.战斗时间,\n              最小时间: 0,\n            })\n      if (res?.技能详情?.length && res?.战斗时间) {\n        更新结果数据(res)\n        设置解析方式(values?.解析方式)\n        message.success(`解析成功，战斗时间为 ${res?.战斗时间}s`)\n      } else {\n        message.error('解析出错')\n      }\n      setLoading(false)\n    })\n  }\n\n  const copy = () => {\n    const res = document.getElementById('tools-jcl-result')\n    if (res) {\n      const text = res?.innerHTML\n      if (text) {\n        const input = document.createElement('input')\n        document.body.appendChild(input)\n        input.setAttribute('value', text)\n        input.select()\n        document.execCommand('copy') // 执行浏览器复制命令\n        if (document.execCommand('copy')) {\n          document.execCommand('copy')\n          message.success('复制成功')\n        }\n        // if (text?.includes('未匹配')) {\n        //   message.warning('存在未匹配装备')\n        // }\n        document.body.removeChild(input)\n      }\n    }\n  }\n\n  const save = () => {\n    const 奇穴校验 = 判断奇穴(目标心法, 原始数据)\n    if (奇穴校验?.length) {\n      设置导入循环保存弹窗(true)\n    }\n  }\n\n  return (\n    <div>\n      <Spin spinning={loading}>\n        <Form form={form} className={'tools-jcl-params'} layout='vertical'>\n          <Form.Item className={'tools-jcl-form-item'} name='目标心法' label='心法' required>\n            <Select\n              value={目标心法}\n              onChange={(e) => 设置目标心法(e)}\n              className={'tools-jcl-params-select'}\n              options={支持导入心法列表.map((item) => ({ value: item, label: item }))}\n              placeholder={'请选择解析心法'}\n            />\n          </Form.Item>\n          <Form.Item className={'tools-jcl-form-item-2'} name='战斗时间' label='战斗时间' required>\n            <Input style={{ width: '100%' }} />\n          </Form.Item>\n          <Form.Item className={'tools-jcl-form-item-3'} name='解析方式' label='解析方式' required>\n            <Select\n              className={'tools-jcl-params-select'}\n              options={[\n                { label: '新版', value: '新版' },\n                { label: '旧版', value: '旧版' },\n              ]}\n              placeholder={'请选择解析方式'}\n            />\n          </Form.Item>\n          <Form.Item\n            className={'tools-jcl-form-item-4'}\n            name='数据'\n            label={\n              <div className={'tools-jcl-form-label-3'}>\n                <span>数据</span>\n                <使用说明 />\n              </div>\n            }\n            required\n          >\n            <Input.TextArea\n              value={原始数据}\n              onChange={(e) => 设置原始数据(e?.target?.value)}\n              className={'tool-jcl-input-area'}\n            />\n          </Form.Item>\n        </Form>\n        <div className={'tools-jcl-btns'}>\n          <Button type='primary' className='tools-jcl-btn' onClick={获取远程数据}>\n            获取数据\n          </Button>\n          <Button\n            danger\n            disabled={!结果数据 || 解析方式 !== '旧版'}\n            className='tools-jcl-btn'\n            onClick={save}\n          >\n            保存循环\n          </Button>\n          <Button disabled={!结果数据} className='tools-jcl-btn' onClick={copy}>\n            复制\n          </Button>\n        </div>\n        {结果数据 && (\n          <div id='tools-jcl-result' className={'tools-jcl-result'}>\n            {JSON.stringify(结果数据)}\n          </div>\n        )}\n        <保存循环弹窗\n          导入循环保存弹窗={导入循环保存弹窗}\n          设置导入循环保存弹窗={设置导入循环保存弹窗}\n          结果数据={结果数据}\n          目标心法={目标心法}\n          原始数据={原始数据}\n        />\n      </Spin>\n    </div>\n  )\n}\n\nexport default JCL战斗记录解析\n"],"names":["StackMap","心法枚举","周天功","凌海诀","北傲诀","分山劲","太玄经","无方","毒经","易筋经","花间游","太虚剑意","山海心诀悟","无方悟","无界统一buff","DOT直接生成层数心法","获取数据","心法","数据","最大时间","最小时间","心法数据枚举","JSONData","JSON","parse","res","PlayersId","players","Object","keys","TargetId","targets","解析战斗数据","records","初始时间","战斗时间","forEach","技能实例","所有技能信息","split","当前技能信息","length","技能名称ID","技能等级","undefined","技能层数","Number","技能带等级","includes","dot技能","触发技能","dot技能信息","触发技能信息","dot技能数据","dot技能数据分割","引爆技能层数","引爆技能数据分割","技能名称","skills","commonMap","技能增益结果对象","技能数量","技能增益列表","判断时间增加数量","时间数组","增益数量获取","造成伤害时间","增益Buff列表","战斗时间数组","用分号分割","是否吃快照","吃快照技能","是否是NPC技能","npc技能","最终增益Buff数组","快照判断","增益buff名称列表","增益","增益数组","增益名称ID","增益等级","增益层数","增益名称","buff","Buff带等级","Buff带层数","技能过滤增益","console","info","push","生效战斗时间数组","filter","item","sort","a","b","localeCompare","增益buff列表名字","join","该增益技能数量","some","map","增益技能数","伤害层数","message","技能详情","数组","最终Buff","当前Buff","快照Buff","目标Buff","非快照buff","快照Buff列表","Buff自身存在快照区分","concat","npc额外快照buff列表","全部buff","splitZengyi","战斗数据转换","removeChineseCharacters","str","replace","currentKey","key","replaceAll","全部技能数据","全部技能","获取技能数据","获取技能ID","技能总数","DOTID","释放DOT技能","释放DOT技能ID","释放DOT技能等级","引爆技能数据","判断时间函数","timelineData","num","time","gain","数量","timeline","获取buff列表","buff实际名称","buffListPorps","完整buff列表","list","buffList","常驻buff数量索引","是否为吃快照技能","常驻buff数量","currentBuff","index","buffData","buffSplit","buffId","bufflevel","buffTick","error","获取buff实际名称","obj","className","title","content","href","target","rel","style","marginBottom","QuestionCircleOutlined","获取当前数据","计算循环","缓存映射","判断快照计算","目标心法","结果数据","套装Buff名称","门派套装buff","快照列表","数据字符串","stringify","判断奇穴","原始数据","原始数据对象","奇穴数据","获取心法数据","奇穴IDs","select_talents","奇穴列表","id","errorId","该层奇穴","对应ID奇穴","find","toString","奇穴名称","props","modal","App","导入循环保存弹窗","设置导入循环保存弹窗","useState","导入循环类型","设置导入循环类型","导入循环名称输入","设置导入循环名称输入","覆盖循环名","设置覆盖循环名","自定义循环列表","useAppSelector","state","data","dispatch","useAppDispatch","全部循环","useMemo","useEffect","保存信息","名称","localStorage","setItem","自定义循环","删除循环","更新当前自定义循环列表","centered","okButtonProps","disabled","open","onCancel","onOk","快照计算","奇穴","保存循环","标题","类型","标记","循环详情","新自定义循环","width","destroyOnClose","type","activeKey","onChange","e","tab","value","optionLabelProp","placeholder","label","onClick","stopPropagation","preventDefault","confirm","okText","删除循环前提示","maxLength","支持导入心法列表","更新结果数据","Form","form","loading","setLoading","设置目标心法","设置原始数据","解析方式","设置解析方式","setFieldsValue","获取远程数据","validateFields","then","values","spinning","layout","name","required","options","danger","奇穴校验","document","getElementById","text","innerHTML","input","createElement","body","appendChild","setAttribute","select","execCommand","removeChild"],"sourceRoot":""}