{"version":3,"file":"static/js/847.f6bf0c12.chunk.js","mappings":"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ACA,+BACA,+BACA,+BACA,2BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,2BACA,+BACA,+BACA,+BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,2BACA,+BACA,+BACA,+BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,2BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,2BACA,+BACA,2BACA,+BACA,+BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,2BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,2BACA,+BACA,+BACA,+BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,2BACA,+BACA,+BACA,+BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,2BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,2BACA,+BACA,+BACA,+BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,2BACA,+BACA,+BACA,+BACA,2BACA,+BACA,+BACA,qBACA,+B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","sources":["功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/constant/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/constant/skill.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/utils.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/utils.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/通用类/技能统一类.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/通用类/通用DOT类.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/DOT类/流血/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/DOT类/截辕/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/技能类/行云势一/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/技能类/行云势二/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/技能类/行云势三/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/通用类/有CD技能通用类.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/技能类/决云势一/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/技能类/决云势二/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/技能类/横云势一/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/技能类/横云势二/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/技能类/停云势/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/技能类/留客雨/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/技能类/孤风破浪/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/技能类/灭影追风/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/技能类/换行/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/main.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/constant/快速导入默认循环.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/constant/快速导入默认循环/启用循环/紫武_手动.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/CycleModalHeader/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/StatusBar/ruiyi/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/StatusBar/buff/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/StatusBar/dpsRes/components/BattleLogModal.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/StatusBar/dpsRes/components/SkillCountModal.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/StatusBar/dpsRes/components/BuffCountModal/util.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/StatusBar/dpsRes/components/BuffCountModal/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/StatusBar/dpsRes/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/StatusBar/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/CycleSkillItem/BuffItem.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/CycleSkillItem/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/AddCycleSkillBtns/AddCycleSkillBtn.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/AddCycleSkillBtns/快捷添加.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/AddCycleSkillBtns/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/SaveCustomCycleModal/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/AutoSkillListContent/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/AddCycleSkillModal/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/index.tsx"],"sourcesContent":["// BUFF持续最大时间,视为永久\nexport const BUFF持续最大时间 = 99999999999\n\nexport const 基础GCD帧 = 16\n","import { Buff枚举, 循环基础技能数据类型, 日志类型 } from '../simulator/type'\nimport { 基础GCD帧 } from '.'\nimport { 每秒郭氏帧 } from '@/数据/常量'\n\nconst 循环模拟技能基础数据: 循环基础技能数据类型[] = [\n  {\n    技能名称: '行云势·一',\n    技能释放后添加GCD: 基础GCD帧,\n    回复锐意: 10,\n    造成伤害次数: 1,\n    技能CD: 0,\n    技能GCD组: ['公共', '傍身'],\n    技能类型: '傍身',\n    图标: 'https://icon.jx3box.com/icon/17567.png',\n  },\n  {\n    技能名称: '行云势·二',\n    技能释放后添加GCD: 基础GCD帧,\n    回复锐意: 10,\n    造成伤害次数: 1,\n    技能CD: 0,\n    技能GCD组: ['傍身'],\n    技能类型: '傍身',\n    图标: 'https://icon.jx3box.com/icon/17733.png',\n  },\n  {\n    技能名称: '行云势·三',\n    技能释放后添加GCD: 基础GCD帧,\n    回复锐意: 10,\n    造成伤害次数: 1,\n    技能CD: 0,\n    技能GCD组: ['傍身'],\n    技能类型: '傍身',\n    图标: 'https://icon.jx3box.com/icon/17744.png',\n  },\n  {\n    技能名称: '决云势·一',\n    技能释放后添加GCD: 基础GCD帧,\n    造成伤害次数: 1,\n    技能CD: 每秒郭氏帧 * 15,\n    技能GCD组: '公共',\n    技能类型: '对阵',\n    图标: 'https://icon.jx3box.com/icon/17569.png',\n  },\n  {\n    技能名称: '决云势·二',\n    技能释放后添加GCD: 基础GCD帧,\n    造成伤害次数: 1,\n    技能GCD组: '公共',\n    技能类型: '对阵',\n    图标: 'https://icon.jx3box.com/icon/17741.png',\n  },\n  {\n    技能名称: '横云势·一',\n    技能释放后添加GCD: 基础GCD帧,\n    造成伤害次数: 1,\n    技能CD: 每秒郭氏帧 * 15,\n    技能GCD组: '公共',\n    技能类型: '对阵',\n    图标: 'https://icon.jx3box.com/icon/17574.png',\n  },\n  {\n    技能名称: '横云势·二',\n    技能释放后添加GCD: 基础GCD帧,\n    造成伤害次数: 1,\n    技能GCD组: '公共',\n    技能类型: '对阵',\n    图标: 'https://icon.jx3box.com/icon/17572.png',\n  },\n  {\n    技能名称: '停云势',\n    技能释放后添加GCD: 基础GCD帧,\n    造成伤害次数: 1,\n    技能CD: 每秒郭氏帧 * 15,\n    技能GCD组: '公共',\n    技能类型: '对阵',\n    图标: 'https://icon.jx3box.com/icon/17568.png',\n  },\n  {\n    技能名称: '留客雨',\n    技能释放后添加GCD: 基础GCD帧,\n    回复锐意: 30,\n    造成伤害次数: 1,\n    技能GCD组: '自身',\n    技能类型: '对阵',\n    技能CD: 每秒郭氏帧 * 8,\n    图标: 'https://icon.jx3box.com/icon/17580.png',\n  },\n  {\n    技能名称: '灭影追风',\n    技能释放后添加GCD: 基础GCD帧,\n    造成伤害次数: 0,\n    技能CD: 每秒郭氏帧 * 20,\n    技能GCD组: '公共',\n    技能类型: '对阵',\n    图标: 'https://icon.jx3box.com/icon/17576.png',\n  },\n  {\n    技能名称: '孤风破浪',\n    技能释放后添加GCD: 基础GCD帧,\n    造成伤害次数: 1,\n    技能CD: 每秒郭氏帧 * 60,\n    技能GCD组: '公共',\n    技能类型: '绝技',\n    图标: 'https://icon.jx3box.com/icon/17575.png',\n  },\n  {\n    技能名称: '换行',\n    技能释放后添加GCD: 0,\n    技能CD: 0,\n    技能GCD组: '自身',\n    造成伤害次数: 0,\n    技能类型: '绝技',\n    图标: 'https://icon.jx3box.com/icon/17632.png',\n    说明: '插入换行将只以”换行“作为展示换行。 若无\"换行\"则默认以”横云势·二“作为展示换行.',\n  },\n]\n\nexport default 循环模拟技能基础数据\n\nexport const 日志类型数组: 日志类型[] = [\n  '释放技能',\n  '自身buff变动',\n  '目标buff变动',\n  '造成伤害',\n  '技能释放结果',\n  '等CD',\n]\n\n// Map预备数据\nexport const 原始Buff数据: Buff枚举 = {\n  // Buff\n  ['灭影追风·悟']: {\n    名称: '灭影追风·悟',\n    最大层数: 1,\n    最大持续时间: 每秒郭氏帧 * 10,\n    图标: 'https://icon.jx3box.com/icon/17576.png',\n  },\n  ['披靡·悟']: {\n    名称: '披靡·悟',\n    最大层数: 3,\n    最大持续时间: 每秒郭氏帧 * 12,\n    图标: 'https://icon.jx3box.com/icon/17742.png',\n  },\n  行链: {\n    名称: '行链',\n    最大层数: 2,\n    最大持续时间: 每秒郭氏帧 * 4,\n    图标: 'https://icon.jx3box.com/icon/17733.png',\n  },\n  决链: {\n    名称: '决链',\n    最大层数: 1,\n    最大持续时间: 每秒郭氏帧 * 10,\n    图标: 'https://icon.jx3box.com/icon/17569.png',\n  },\n  横链: {\n    名称: '横链',\n    最大层数: 1,\n    最大持续时间: 每秒郭氏帧 * 10,\n    图标: 'https://icon.jx3box.com/icon/17572.png',\n  },\n  横云一式: {\n    名称: '横云一式',\n    最大层数: 1,\n    最大持续时间: 每秒郭氏帧 * 10,\n    图标: 'https://icon.jx3box.com/icon/17574.png',\n  },\n  // 停云势: {\n  //   名称: '停云势',\n  //   最大层数: 1,\n  //   最大持续时间: 每秒郭氏帧 * 5,\n  //   图标: 'https://icon.jx3box.com/icon/17568.png',\n  // },\n  大橙武增伤: {\n    名称: '大橙武增伤',\n    最大层数: 999, // 可以叠加\n    最大持续时间: 每秒郭氏帧 * 30,\n    图标: 'https://icon.jx3box.com/icon/17801.png',\n  },\n  // DOT\n  流血: {\n    名称: '流血',\n    最大层数: 3,\n    最大作用次数: 9,\n    最大持续时间: 每秒郭氏帧 * 18,\n    伤害频率: 32,\n    图标: 'https://icon.jx3box.com/icon/17574.png',\n  },\n  截辕: {\n    名称: '截辕',\n    最大层数: 1,\n    最大作用次数: 6,\n    最大持续时间: 每秒郭氏帧 * 12,\n    伤害频率: 32,\n    图标: 'https://icon.jx3box.com/icon/17759.png',\n  },\n}\n","import { 每秒郭氏帧 } from '@/数据/常量'\nimport { 循环日志数据类型 } from './simulator/type'\n// import { 属性系数 } from '@/数据/常量'\nimport { 循环技能详情, 技能增益列表数据 } from '@/@types/循环'\n\nexport const getDpsCycle = (data: 循环日志数据类型[], 战斗时间): 循环技能详情[] => {\n  const res: { [key: string]: 循环技能详情 } = {}\n  for (let i = 0; i < data.length; i++) {\n    const 当前数据 = data[i]\n    const 本次造成伤害次数 = 当前数据?.其他数据?.伤害次数 || 1\n    if (当前数据?.日志类型 === '造成伤害') {\n      const 获取当前日志对应技能枚举 = Skill_Cycle_Map[当前数据?.日志] || 当前数据?.日志\n      let 增益列表 = res[获取当前日志对应技能枚举]?.技能增益列表 || []\n      if (!增益列表?.length) {\n        if (当前数据?.buff列表?.length) {\n          增益列表 = 增益列表.concat([\n            {\n              增益名称: 当前数据?.buff列表?.join(','),\n              增益技能数: 本次造成伤害次数,\n            },\n          ])\n        }\n      } else {\n        if (当前数据?.buff列表?.length) {\n          let 不存在相同增益 = true\n          增益列表 = 增益列表.map((item) => {\n            const 技能增益列表 = item?.增益名称?.split(',') || []\n            if (\n              技能增益列表?.length === 当前数据?.buff列表?.length &&\n              !技能增益列表?.some((a) => !当前数据?.buff列表?.includes(a))\n            ) {\n              不存在相同增益 = false\n              return {\n                增益名称: item.增益名称,\n                增益技能数: item.增益技能数 + 本次造成伤害次数,\n              }\n            } else {\n              return {\n                ...item,\n              }\n            }\n          })\n          if (不存在相同增益) {\n            增益列表 = 增益列表.concat({\n              增益名称: 当前数据?.buff列表?.join(','),\n              增益技能数: 本次造成伤害次数,\n            })\n          }\n        }\n      }\n\n      res[获取当前日志对应技能枚举] = {\n        ...res[获取当前日志对应技能枚举],\n        技能名称: 获取当前日志对应技能枚举,\n        技能数量: (res[获取当前日志对应技能枚举]?.技能数量 || 0) + 本次造成伤害次数,\n        技能增益列表: [...增益列表],\n      }\n    }\n  }\n\n  let 结果循环 = Object.keys(res).map((item) => {\n    const v = res[item]\n    return {\n      ...v,\n      技能数量: Math.round(v.技能数量),\n      技能增益列表: v.技能增益列表?.map((d) => {\n        return {\n          ...d,\n          增益技能数: Math.round(d.增益技能数),\n        }\n      }),\n    }\n  })\n\n  // 根据战斗时间加入触石雨和对应的避石击虚数量\n  if (战斗时间) {\n    const 触石雨CD = 每秒郭氏帧 * (25 + 5) // 30秒CD，按只有单刀期间打计算\n    const 触石雨数量 = Math.round(战斗时间 / 触石雨CD)\n    结果循环.push({\n      技能名称: '触石雨',\n      技能数量: 触石雨数量,\n      技能增益列表: [{ 增益名称: '灭影追风,流岚', 增益技能数: 触石雨数量 }],\n    })\n\n    结果循环 = 结果循环.map((item) => {\n      if (item.技能名称 === '避实击虚') {\n        return {\n          ...item,\n          技能数量: item.技能数量 + 触石雨数量,\n          技能增益列表: (item.技能增益列表 || []).map((a) => {\n            return a?.增益名称 === '流岚'\n              ? {\n                  ...a,\n                  增益技能数: a.增益技能数 + 触石雨数量,\n                }\n              : a\n          }),\n        }\n      } else {\n        return item\n      }\n    })\n  }\n\n  return 结果循环\n}\n\nexport const getSingleSkillDpsCycle = (当前数据: 循环日志数据类型): 循环技能详情 => {\n  const 获取当前日志对应技能枚举 = Skill_Cycle_Map[当前数据?.日志] || 当前数据?.日志\n  const 伤害次数 = 当前数据?.其他数据?.伤害次数 || 1\n  let 增益列表: 技能增益列表数据[] = []\n  if (!增益列表?.length) {\n    if (当前数据?.buff列表) {\n      增益列表 = 增益列表.concat({\n        增益名称: 当前数据?.buff列表?.join(','),\n        增益技能数: 伤害次数,\n      })\n    }\n  } else {\n    if (当前数据?.buff列表?.length) {\n      let 不存在相同增益 = true\n      增益列表 = 增益列表.map((item) => {\n        const 技能增益列表 = item?.增益名称?.split(',') || []\n        if (\n          技能增益列表?.length === 当前数据?.buff列表?.length &&\n          !技能增益列表?.some((a) => !当前数据?.buff列表?.includes(a))\n        ) {\n          不存在相同增益 = false\n          return {\n            增益名称: item.增益名称,\n            增益技能数: item.增益技能数 + 伤害次数,\n          }\n        } else {\n          return {\n            ...item,\n          }\n        }\n      })\n      if (不存在相同增益) {\n        增益列表 = 增益列表.concat({\n          增益名称: 当前数据?.buff列表?.join(','),\n          增益技能数: 伤害次数,\n        })\n      }\n    }\n  }\n\n  return {\n    技能名称: 获取当前日志对应技能枚举,\n    技能数量: 伤害次数,\n    技能增益列表: [...增益列表],\n  }\n}\n\nexport const 判断上一个同名技能 = (当前技能, 循环) => {\n  // 上一个同名技能\n  const 循环副本 = [...循环]\n  循环副本.reverse()\n  let 剩余CD = 0\n\n  const 上一个同名技能 = 循环副本?.find((item) => {\n    if (item?.实际技能) {\n      // 用下一个技能可以释放时间判断不是当前技能\n      return item?.实际技能 === 当前技能?.实际技能 && item?.下一个技能可以释放时间\n    } else {\n      const 正常技能判定 = item?.技能名称 === 当前技能?.技能名称 && item?.下一个技能可以释放时间\n      // 用下一个技能可以释放时间判断不是当前技能\n      return 正常技能判定\n    }\n  })\n\n  if (上一个同名技能) {\n    const 实际CD = 当前技能?.技能CD\n    const 上一个同名技能释放时间 = (上一个同名技能?.本技能实际释放时间 || 0) + (实际CD || 0)\n    const 下一个技能可以释放时间 = 循环[循环.length - 1]?.下一个技能可以释放时间\n\n    剩余CD =\n      上一个同名技能释放时间 - 下一个技能可以释放时间 > 0\n        ? 上一个同名技能释放时间 - 下一个技能可以释放时间\n        : 0\n  }\n\n  return { 上一个同名技能, 剩余CD }\n}\n\nexport const 获取总用时 = (时间) => {\n  const 用时秒 = Math.round((时间 / 每秒郭氏帧) * 100) / 100\n  return 用时秒\n}\n\nexport const 获取显示秒伤 = (最后一条伤害数据) => {\n  return Math.round((最后一条伤害数据?.造成总伤害 || 0) / (最后一条伤害数据?.日志时间 / 每秒郭氏帧))\n}\n\n// 没表明枚举就直接取原值\nexport const Skill_Cycle_Map = {}\n\nexport const 根据加速等级获取虚拟加速值 = (加速等级) => {\n  const 加速等级枚举 = {\n    0: 0,\n    1: 206,\n    2: 14156,\n    3: 30158,\n    4: 48622,\n    5: 70163,\n  }\n  return 加速等级枚举[加速等级]\n}\n","// import { 每秒郭氏帧 } from '../constant'\nimport 循环模拟技能基础数据, { 原始Buff数据 } from '../constant/skill'\nimport { 循环基础技能数据类型 } from './type'\n\nexport const 根据奇穴修改buff数据 = () => {\n  // const res = {}\n\n  // Object.keys(原始Buff数据).forEach((key) => {\n  //   const obj = 原始Buff数据[key]\n  //   res[key] = obj\n  // })\n\n  return 原始Buff数据\n}\n\nexport const 根据奇穴修改技能数据 = (): 循环基础技能数据类型[] => {\n  // const 判断奇穴 = (val) => {\n  //   return 奇穴?.includes(val)\n  // }\n\n  return 循环模拟技能基础数据\n}\n\nexport const ERROR_ACTION = {\n  锐意不足: {\n    信息: '当前锐意不足，无法释放该技能',\n  },\n  身形不足: {\n    信息: '当前身形不足，无法释放该技能',\n  },\n  体态错误: {\n    信息: '当前体态无法释放该技能',\n  },\n  BUFF错误: {\n    信息: '当前没有对应的BUFF',\n  },\n}\n\nexport const 起手留客雨BUFF = (Buff和Dot数据, 起手留层数 = 1) => {\n  return {\n    '披靡·悟': {\n      ...Buff和Dot数据['披靡·悟'],\n      当前层数: 起手留层数,\n      刷新时间: 0,\n    },\n  }\n}\n\nexport const 转化buff和增益名称 = (增益名称, buff列表) => {\n  if (增益名称?.includes('披靡·悟')) {\n    const 增益层数 = 增益名称?.split('·')?.[2]?.[0] || 0\n    if (!增益层数) {\n      return {}\n    } else {\n      return +buff列表?.['披靡·悟']?.当前层数 === +增益层数 ? buff列表?.['披靡·悟'] : {}\n    }\n  } else {\n    return buff列表?.[增益名称]\n  }\n}\n","import 循环主类类型 from '../main'\nimport { 技能释放记录结果 } from '../type'\n\nclass 技能统一类 {\n  模拟循环: Partial<循环主类类型> = {}\n  本次释放记录: 技能释放记录结果 = {}\n\n  constructor(模拟循环) {\n    this.模拟循环 = 模拟循环\n    return\n  }\n\n  释放前初始化() {\n    // 重置释放记录\n    this.本次释放记录 = {}\n  }\n\n  减少对阵技能CD(减少时间 = 16) {\n    this.模拟循环.技能类实例集合?.停云势?.减少调息时间?.(减少时间)\n    this.模拟循环.技能类实例集合?.['横云势·一']?.减少调息时间?.(减少时间)\n    this.模拟循环.技能类实例集合?.['决云势·一']?.减少调息时间?.(减少时间)\n    this.模拟循环.技能类实例集合?.['灭影追风']?.减少调息时间?.(减少时间)\n    this.模拟循环.技能类实例集合?.留客雨?.减少调息时间?.(减少时间)\n  }\n\n  减少绝技技能CD(减少时间 = 32) {\n    this.模拟循环.技能类实例集合?.孤风破浪?.减少调息时间?.(减少时间)\n  }\n\n  对阵招式橙武减少绝技技能CD() {\n    if (this.模拟循环.大橙武模拟) {\n      this.模拟循环.技能类实例集合?.孤风破浪?.减少调息时间?.(0.3125 * 16)\n    }\n  }\n\n  释放技能回复锐意(锐意值, 来源) {\n    const 当前是否满锐 = this.模拟循环.角色状态信息?.锐意 && this.模拟循环.角色状态信息?.锐意 >= 60\n\n    if (当前是否满锐) {\n      this.模拟循环.添加buff?.({ 名称: '披靡·悟', 对象: '自身' })\n    }\n\n    this.模拟循环.增加锐意?.(锐意值, 来源)\n  }\n\n  触发消耗锐意(锐意值, 来源) {\n    this.模拟循环.减少锐意?.(锐意值, 来源)\n  }\n\n  触发伤害行为(\n    伤害名称,\n    伤害次数 = 1,\n    额外增益列表: string[] = [],\n    触发伤害时间: number | undefined = undefined,\n    DOT伤害 = false\n  ) {\n    this.模拟循环.技能造成伤害?.(伤害名称, 伤害次数, 额外增益列表, 触发伤害时间, DOT伤害)\n  }\n\n  获取技能释放记录结果() {\n    return {\n      ...this.本次释放记录,\n    }\n  }\n\n  获取当前重要buff列表(技能依赖自身buff列表: string[] = [], 技能依赖目标buff列表: string[] = []) {\n    const 重要buff列表: string[] = []\n    技能依赖自身buff列表.forEach((buff) => {\n      if (this.模拟循环.当前自身buff列表?.[buff]?.当前层数) {\n        重要buff列表.push(buff)\n      }\n    })\n    技能依赖目标buff列表.forEach((buff) => {\n      if (this.模拟循环.当前目标buff列表?.[buff]?.当前层数) {\n        重要buff列表.push(buff)\n      }\n    })\n    return 重要buff列表 || []\n  }\n\n  获取施加重要buff信息(buff名称) {\n    const 当前时间 = this.模拟循环.当前时间 || 0\n    const buff对象 = this.模拟循环.Buff和Dot数据?.[buff名称]\n\n    return buff对象\n      ? {\n          buff名称: buff名称,\n          buff开始时间: 当前时间,\n          buff结束时间: 当前时间 + (buff对象?.最大持续时间 || 0),\n        }\n      : null\n  }\n}\n\nexport default 技能统一类\n","import { 获取实际帧数 } from '@/工具函数/data'\nimport { 根据加速等级获取虚拟加速值 } from '../../utils'\nimport { DOT待生效数据类型, DOT运行数据类型, DotDTO } from '../type'\nimport 技能统一类 from './技能统一类'\n\nclass 通用DOT类 extends 技能统一类 {\n  DOT运行数据: DOT运行数据类型 = {\n    待生效数据: [],\n  }\n\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  获取当前DOT数据(DOT名称) {\n    const DOT数据: DotDTO = this.模拟循环.Buff和Dot数据?.[DOT名称] as DotDTO\n    return DOT数据\n  }\n\n  更新DOT运行数据(新数据) {\n    this.DOT运行数据 = {\n      ...this.DOT运行数据,\n      ...新数据,\n    }\n  }\n\n  结算并更新运行数据() {\n    const 待生效数据 = this.DOT运行数据?.待生效数据 || []\n    if (待生效数据.length > 0) {\n      const 结算数组: DOT待生效数据类型[] = []\n      const 未结算数组: DOT待生效数据类型[] = []\n      const 当前时间 = this.模拟循环.当前时间 || 0\n      待生效数据.forEach((数据) => {\n        if ((数据.生效时间 || 0) <= 当前时间) {\n          结算数组.push(数据)\n        } else {\n          未结算数组.push(数据)\n        }\n      })\n      this.更新DOT运行数据({\n        待生效数据: 未结算数组,\n      })\n      return {\n        结算数组,\n        未结算数组,\n      }\n    } else {\n      return {\n        结算数组: [],\n        未结算数组: [],\n      }\n    }\n  }\n\n  // 对当前dot进行结算和运行数据\n  更新待生效数据(当前层数: number, DOT数据: DotDTO) {\n    const DOT是否吃加速 = DOT数据.是否吃加速 !== undefined ? DOT数据.是否吃加速 : true\n\n    const 循环加速值 = 根据加速等级获取虚拟加速值(this.模拟循环.加速等级)\n    const 实际初次频率 = DOT是否吃加速\n      ? 获取实际帧数(DOT数据.初次频率 || DOT数据.伤害频率, 循环加速值)\n      : DOT数据.初次频率 || DOT数据.伤害频率\n\n    const 实际伤害频率 = DOT是否吃加速\n      ? 获取实际帧数(DOT数据.伤害频率, 循环加速值)\n      : DOT数据.伤害频率\n\n    const 当前时间 = this.模拟循环.当前时间 || 0\n\n    const 快照buff列表: string[] = []\n\n    if (this.模拟循环?.当前自身buff列表?.['灭影追风·悟']?.当前层数) {\n      快照buff列表.push('灭影追风·悟')\n    }\n    if (this.模拟循环?.当前自身buff列表?.['大橙武增伤']?.当前层数) {\n      快照buff列表.push('大橙武增伤')\n    }\n    if (this.模拟循环?.当前自身buff列表?.['披靡·悟']?.当前层数) {\n      const 披靡层数 = this.模拟循环?.当前自身buff列表?.['披靡·悟']?.当前层数\n      快照buff列表.push(`披靡·悟·${披靡层数}`)\n    }\n\n    const 待生效数据: DOT待生效数据类型[] =\n      this.DOT运行数据?.待生效数据.map((item) => {\n        return { ...item, 当前层数, 快照buff列表 }\n      }) || []\n\n    // 如果DOT依然存在\n    if (待生效数据?.length > 0) {\n      const 待添加次数 = DOT数据.最大作用次数 - 待生效数据?.length\n      const 原最后一次生效时间 = 待生效数据[待生效数据?.length - 1]?.生效时间 || 0\n      for (let i = 0; i < 待添加次数; i++) {\n        待生效数据.push({\n          当前层数,\n          生效时间: 原最后一次生效时间 + 实际伤害频率 * (i + 1),\n          快照buff列表,\n        })\n      }\n    } else {\n      const 待添加次数 = DOT数据.最大作用次数\n      for (let i = 0; i < 待添加次数; i++) {\n        const 生效时间 = 当前时间 + (i === 0 ? 实际初次频率 : 实际伤害频率 * (i + 1))\n        待生效数据.push({\n          当前层数,\n          生效时间,\n          快照buff列表,\n        })\n      }\n    }\n\n    this.更新DOT运行数据({\n      待生效数据: 待生效数据,\n    })\n\n    // 每次刷新和更新时，删除前面的待生效数据\n    this.模拟循环.添加待生效事件队列?.(\n      [\n        {\n          事件名称: `卸除buff-${DOT数据?.名称}`,\n          事件时间: 待生效数据?.[待生效数据.length - 1]?.生效时间 || 0,\n          事件备注: { buff名称: DOT数据?.名称, buff类型: 'DOT', buff对象: '目标', 卸除层数: 9999 },\n        },\n      ],\n      true\n    )\n  }\n}\n\nexport default 通用DOT类\n","// import 循环主类 from '../main'\nimport 通用DOT类 from '../../通用类/通用DOT类'\n\nclass 流血 extends 通用DOT类 {\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  获得和刷新流血() {\n    const 当前最后一跳数据 =\n      this?.DOT运行数据?.待生效数据?.[this?.DOT运行数据?.待生效数据?.length - 1] || {}\n    const 当前层数 = 当前最后一跳数据?.当前层数 || 0\n    const 流血最大层数 = this?.模拟循环?.Buff和Dot数据?.流血?.最大层数 || 3\n    const 新流血层数 = Math.min(当前层数 + 1, 流血最大层数)\n\n    this.模拟循环.添加buff?.({\n      名称: '流血',\n      对象: '目标',\n      新增层数: 1,\n      只添加日志: true,\n    })\n    const 数据 = this.获取当前DOT数据('流血')\n\n    this.更新待生效数据(新流血层数, 数据)\n  }\n\n  结算流血伤害() {\n    const { 结算数组: 待生效数据 } = this.结算并更新运行数据()\n\n    待生效数据.forEach((数据) => {\n      const 层数 = 数据.当前层数 || 1\n      const 生效时间 = 数据.生效时间 || 0\n      const 快照buff列表 = 数据.快照buff列表 || []\n      if (生效时间) {\n        this.触发伤害行为(流血伤害名称枚举[层数], 1, 快照buff列表, 生效时间, true)\n      }\n    })\n  }\n}\n\nexport default 流血\n\nexport const 流血DOT类型 = typeof 流血\n\nconst 流血伤害名称枚举 = {\n  1: '流血·悟·一',\n  2: '流血·悟·二',\n  3: '流血·悟·三',\n}\n","// import 循环主类 from '../main'\nimport 通用DOT类 from '../../通用类/通用DOT类'\n\nclass 截辕 extends 通用DOT类 {\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  获得和刷新截辕() {\n    const 当前最后一跳数据 =\n      this?.DOT运行数据?.待生效数据?.[this?.DOT运行数据?.待生效数据?.length - 1] || {}\n    const 当前层数 = 当前最后一跳数据?.当前层数 || 0\n    const 最大层数 = this?.模拟循环?.Buff和Dot数据?.截辕?.最大层数 || 1\n    const 新层数 = Math.min(当前层数 + 1, 最大层数)\n    this.模拟循环.添加buff?.({\n      名称: '截辕',\n      对象: '目标',\n      新增层数: 1,\n      只添加日志: true,\n    })\n    const 数据 = this.获取当前DOT数据('截辕')\n    this.更新待生效数据(新层数, 数据)\n  }\n\n  结算截辕伤害() {\n    const { 结算数组: 待生效数据 } = this.结算并更新运行数据()\n\n    待生效数据.forEach((数据) => {\n      const 生效时间 = 数据.生效时间 || 0\n      const 快照buff列表 = 数据.快照buff列表 || []\n\n      if (生效时间) {\n        this.触发伤害行为('截辕·悟(DOT)', 1, 快照buff列表, 生效时间, true)\n      }\n    })\n  }\n}\n\nexport default 截辕\n\nexport const 截辕DOT类型 = typeof 截辕\n","import { ERROR_ACTION } from '../../utils'\nimport 技能统一类 from '../../通用类/技能统一类'\n\nclass 行云势一 extends 技能统一类 {\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  释放() {\n    const 行链层数 = this.模拟循环.当前自身buff列表?.['行链']?.当前层数\n\n    if (行链层数) {\n      return {\n        可以释放: false,\n        异常信息: ERROR_ACTION.BUFF错误,\n      }\n    }\n  }\n\n  造成伤害() {\n    const 当前是否满锐 = this.模拟循环.角色状态信息?.锐意 && this.模拟循环.角色状态信息?.锐意 >= 60\n\n    this.触发伤害行为('行云势·悟·一', 1, 当前是否满锐 ? ['满锐增伤'] : [])\n    this.保存释放记录()\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表(['灭影追风·悟', '披靡·悟', '横云一式', '大橙武增伤']),\n    }\n  }\n\n  释放后() {\n    this.释放技能回复锐意(10, '行云势·悟·一')\n    this.模拟循环.添加buff?.({ 名称: '行链', 对象: '自身' })\n  }\n}\n\nexport default 行云势一\n\nexport const 行云势一类型 = typeof 行云势一\n","import { ERROR_ACTION } from '../../utils'\nimport 技能统一类 from '../../通用类/技能统一类'\n\nclass 行云势二 extends 技能统一类 {\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  释放() {\n    const 行链层数 = this.模拟循环.当前自身buff列表?.['行链']?.当前层数\n    if (行链层数 !== 1) {\n      return {\n        可以释放: false,\n        异常信息: ERROR_ACTION.BUFF错误,\n      }\n    }\n  }\n\n  造成伤害() {\n    const 当前是否满锐 = this.模拟循环.角色状态信息?.锐意 && this.模拟循环.角色状态信息?.锐意 >= 60\n\n    this.触发伤害行为('行云势·悟·二', 1, 当前是否满锐 ? ['满锐增伤'] : [])\n    this.保存释放记录()\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表(['灭影追风·悟', '披靡·悟', '横云一式', '大橙武增伤']),\n    }\n  }\n\n  释放后() {\n    this.释放技能回复锐意(10, '行云势·悟·二')\n    this.模拟循环.添加buff?.({ 名称: '行链', 对象: '自身' })\n  }\n}\n\nexport default 行云势二\n\nexport const 行云势二类型 = typeof 行云势二\n","import { ERROR_ACTION } from '../../utils'\nimport 技能统一类 from '../../通用类/技能统一类'\n\nclass 行云势三 extends 技能统一类 {\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  释放() {\n    const 行链层数 = this.模拟循环.当前自身buff列表?.['行链']?.当前层数\n    if (行链层数 !== 2) {\n      return {\n        可以释放: false,\n        异常信息: ERROR_ACTION.BUFF错误,\n      }\n    }\n  }\n\n  造成伤害() {\n    const 当前是否满锐 = this.模拟循环.角色状态信息?.锐意 && this.模拟循环.角色状态信息?.锐意 >= 60\n\n    this.触发伤害行为('行云势·悟·三', 1, 当前是否满锐 ? ['满锐增伤'] : [])\n    this.保存释放记录()\n\n    if (当前是否满锐) {\n      this.减少对阵技能CD()\n    }\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表(['灭影追风·悟', '披靡·悟', '横云一式', '大橙武增伤']),\n    }\n  }\n\n  释放后() {\n    this.释放技能回复锐意(10, '行云势·悟·三')\n    this.模拟循环.卸除buff?.({ 名称: '行链', 对象: '自身', 卸除层数: 2 })\n  }\n}\n\nexport default 行云势三\n\nexport const 行云势一类型 = typeof 行云势三\n","import { 技能运行数据类型 } from '../type'\nimport 技能统一类 from './技能统一类'\n\nclass 有CD技能通用类 extends 技能统一类 {\n  技能运行数据: 技能运行数据类型 = {\n    待充能时间点: [],\n  }\n\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  初始化技能运行数据() {\n    this.技能运行数据.待充能时间点 = []\n  }\n\n  更新技能运行数据(新数据) {\n    this.技能运行数据 = {\n      ...this.技能运行数据,\n      ...新数据,\n    }\n  }\n\n  减少调息时间(减少帧数) {\n    const 待充能时间点 = this.技能运行数据.待充能时间点\n    if (待充能时间点?.length) {\n      const 新待充能时间点 = 待充能时间点\n        .map((item) => {\n          return item - 减少帧数\n        })\n        ?.filter((item) => {\n          return item > (this.模拟循环.当前时间 || 0)\n        })\n      this.更新技能运行数据({ 待充能时间点: 新待充能时间点 })\n    }\n  }\n}\n\nexport default 有CD技能通用类\n","import 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 决云势一 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '决云势·悟·一')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n    this.初始化技能运行数据()\n  }\n\n  造成伤害() {\n    const 当前流血层数 =\n      this.模拟循环?.技能类实例集合?.流血?.DOT运行数据?.待生效数据?.[0]?.当前层数 || 0\n    const buff列表: string[] = []\n\n    if (当前流血层数 > 0) {\n      buff列表.push(`流血增伤·${当前流血层数}`)\n    }\n\n    this.触发伤害行为('决云势·悟·一', 1, buff列表)\n  }\n\n  释放后() {\n    this.保存释放记录()\n    this.减少绝技技能CD()\n    this.对阵招式橙武减少绝技技能CD()\n    const 当前锐意 = this.模拟循环.角色状态信息?.锐意 || 0\n    if (当前锐意 >= 30) {\n      this.触发消耗锐意(30, '决云势·悟·一')\n      this.模拟循环.添加buff?.({ 名称: '决链', 对象: '自身' })\n    }\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表([\n        '灭影追风·悟',\n        '披靡·悟',\n        '横云一式',\n        '大橙武增伤',\n        '流血增伤',\n      ]),\n    }\n  }\n}\n\nexport default 决云势一\n\nexport const 停云势类型 = typeof 决云势一\n","// import 循环主类 from '../main'\nimport { ERROR_ACTION } from '../../utils'\nimport 技能统一类 from '../../通用类/技能统一类'\n\nclass 决云势二 extends 技能统一类 {\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  释放() {\n    const 决链层数 = this.模拟循环.当前自身buff列表?.['决链']?.当前层数\n\n    if (!决链层数) {\n      return {\n        可以释放: false,\n        异常信息: ERROR_ACTION.BUFF错误,\n      }\n    }\n  }\n\n  造成伤害() {\n    const 当前流血层数 =\n      this.模拟循环?.技能类实例集合?.流血?.DOT运行数据?.待生效数据?.[0]?.当前层数 || 0\n    const buff列表: string[] = []\n\n    if (当前流血层数 > 0) {\n      buff列表.push(`流血增伤·${当前流血层数}`)\n    }\n\n    this.触发伤害行为('决云势·悟·二', 1, buff列表)\n  }\n\n  释放后() {\n    this.保存释放记录()\n    this.对阵招式橙武减少绝技技能CD()\n    this.模拟循环.卸除buff?.({ 名称: '决链', 对象: '自身' })\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表([\n        '灭影追风·悟',\n        '披靡·悟',\n        '横云一式',\n        '大橙武增伤',\n        '流血增伤',\n      ]),\n    }\n  }\n}\n\nexport default 决云势二\n\nexport const 停云势类型 = typeof 决云势二\n","import 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 横云势一 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '横云势·悟·一')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n    this.初始化技能运行数据()\n  }\n\n  命中() {\n    this.模拟循环.添加buff?.({ 名称: '横云一式', 对象: '自身' })\n  }\n\n  造成伤害() {\n    this.触发伤害行为('横云势·悟·一')\n  }\n\n  释放后() {\n    this.保存释放记录()\n    this.减少绝技技能CD()\n    this.对阵招式橙武减少绝技技能CD()\n    this.模拟循环.技能类实例集合?.流血?.获得和刷新流血?.()\n\n    const 当前锐意 = this.模拟循环.角色状态信息?.锐意 || 0\n    if (当前锐意 >= 30) {\n      this.触发消耗锐意(30, '横云势·悟·一')\n      this.模拟循环.添加buff?.({ 名称: '横链', 对象: '自身' })\n    }\n  }\n\n  保存释放记录() {\n    const 造成buff数据 = this.获取施加重要buff信息('横云一式')\n    this.本次释放记录 = {\n      造成buff数据: 造成buff数据 ? 造成buff数据 : undefined,\n      重要buff列表: this.获取当前重要buff列表([\n        '灭影追风·悟',\n        '披靡·悟',\n        '横云一式',\n        '大橙武增伤',\n        '流血增伤',\n      ]),\n    }\n  }\n}\n\nexport default 横云势一\n\nexport const 停云势类型 = typeof 横云势一\n","import { ERROR_ACTION } from '../../utils'\nimport 技能统一类 from '../../通用类/技能统一类'\n\nclass 横云势二 extends 技能统一类 {\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  释放() {\n    const 横链层数 = this.模拟循环.当前自身buff列表?.['横链']?.当前层数\n\n    if (!横链层数) {\n      return {\n        可以释放: false,\n        异常信息: ERROR_ACTION.BUFF错误,\n      }\n    }\n  }\n\n  造成伤害() {\n    const 当前流血层数 =\n      this.模拟循环?.技能类实例集合?.流血?.DOT运行数据?.待生效数据?.[0]?.当前层数 || 0\n    const buff列表: string[] = []\n\n    if (当前流血层数 > 0) {\n      buff列表.push(`流血增伤·${当前流血层数}`)\n    }\n\n    this.触发伤害行为('横云势·悟·二', 1, buff列表)\n  }\n\n  释放后() {\n    this.保存释放记录()\n    this.对阵招式橙武减少绝技技能CD()\n    this.模拟循环.卸除buff?.({ 名称: '横链', 对象: '自身' })\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表([\n        '灭影追风·悟',\n        '披靡·悟',\n        '横云一式',\n        '大橙武增伤',\n        '流血增伤',\n      ]),\n    }\n  }\n}\n\nexport default 横云势二\n\nexport const 停云势类型 = typeof 横云势二\n","// import 循环主类 from '../main'\nimport 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 停云势 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '停云势')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n    this.初始化技能运行数据()\n  }\n\n  释放() {\n    const 当前锐意 = this.模拟循环.角色状态信息?.锐意 || 0\n    if (当前锐意 >= 30) {\n      this.触发消耗锐意(30, '停云势·悟')\n    }\n  }\n\n  // 命中() {\n  //   this.模拟循环.添加buff?.({ 名称: '停云势', 对象: '自身' })\n  // }\n\n  造成伤害() {\n    this.触发伤害行为('停云势·悟')\n  }\n\n  释放后() {\n    this.保存释放记录()\n    this.减少绝技技能CD()\n    this.对阵招式橙武减少绝技技能CD()\n  }\n\n  保存释放记录() {\n    const 造成buff数据 = this.获取施加重要buff信息('横云一式')\n    this.本次释放记录 = {\n      造成buff数据: 造成buff数据 ? 造成buff数据 : undefined,\n      重要buff列表: this.获取当前重要buff列表(['灭影追风·悟', '披靡·悟', '横云一式', '大橙武增伤']),\n    }\n  }\n}\n\nexport default 停云势\n\nexport const 停云势类型 = typeof 停云势\n","// import 循环主类 from '../main'\nimport 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 留客雨 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '留客雨')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n    this.初始化技能运行数据()\n  }\n\n  造成伤害() {\n    const 当前流血层数 =\n      this.模拟循环?.技能类实例集合?.流血?.DOT运行数据?.待生效数据?.[0]?.当前层数 || 0\n    const buff列表: string[] = []\n    if (当前流血层数 > 0) {\n      buff列表.push('流血增伤')\n    }\n    this.触发伤害行为('留客雨·悟', 1, buff列表)\n\n    // 倒海悟命中流血额外添加一层\n    if (当前流血层数) {\n      this.模拟循环.技能类实例集合?.流血?.获得和刷新流血?.()\n    }\n  }\n\n  释放后() {\n    this.释放技能回复锐意(30, '留客雨·悟')\n    this.减少GCD()\n    this.保存释放记录()\n    this.减少绝技技能CD(16)\n    this.对阵招式橙武减少绝技技能CD()\n  }\n\n  减少GCD() {\n    if (this.模拟循环?.GCD组?.公共) {\n      // 这里给没有GCD的技能添加1帧的按键延迟，因为人的手速没有那么快\n      this.模拟循环.GCD组.公共 = 0\n      this.模拟循环.添加战斗日志?.({\n        日志: `留客雨命中减重置GCD`,\n        日志类型: '技能释放结果',\n      })\n    }\n    if (this.模拟循环?.GCD组?.傍身) {\n      // 这里给没有GCD的技能添加1帧的按键延迟，因为人的手速没有那么快\n      this.模拟循环.GCD组.傍身 = 0\n      this.模拟循环.添加战斗日志?.({\n        日志: `留客雨命中减重置GCD`,\n        日志类型: '技能释放结果',\n      })\n    }\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表(['灭影追风·悟', '披靡·悟', '横云一式', '大橙武增伤']),\n    }\n  }\n}\n\nexport default 留客雨\n\nexport const 留客雨类型 = typeof 留客雨\n","// import 循环主类 from '../main'\nimport { 每秒郭氏帧 } from '@/数据/常量'\nimport 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 孤风破浪 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '孤风破浪')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n    this.初始化技能运行数据()\n  }\n\n  造成伤害() {\n    const buff列表: string[] = []\n    const 当前锐意 = this.模拟循环.角色状态信息?.锐意 || 0\n\n    const 满锐 = 当前锐意 >= 60\n    const 半锐 = 当前锐意 >= 30 && 当前锐意 < 60\n\n    if (满锐) {\n      buff列表.push('满锐增伤')\n    } else if (半锐) {\n      buff列表.push('半锐增伤')\n    }\n\n    this.触发伤害行为('孤风破浪·悟', 1, buff列表)\n  }\n\n  释放后() {\n    this.保存释放记录()\n    const 当前锐意 = this.模拟循环.角色状态信息?.锐意 || 0\n\n    if (当前锐意 >= 60) {\n      this.触发伤害行为('截辕·悟')\n      this.模拟循环.技能类实例集合?.截辕?.获得和刷新截辕?.()\n    }\n\n    if (this.模拟循环.大橙武模拟) {\n      this.模拟循环.添加buff?.({ 名称: '大橙武增伤', 对象: '自身' })\n    }\n  }\n\n  保存释放记录() {\n    const 造成buff数据 = this.获取施加重要buff信息('大橙武增伤')\n    this.本次释放记录 = {\n      造成buff数据: 造成buff数据 ? 造成buff数据 : undefined,\n      重要buff列表: this.获取当前重要buff列表(['灭影追风·悟', '披靡·悟', '横云一式', '大橙武增伤']),\n    }\n  }\n\n  技能释放后更新运行数据() {\n    // 非潋风奇穴的识破决，释放后重置技能CD\n    const 当前锐意 = this.模拟循环.角色状态信息?.锐意 || 0\n    const 减少CD = 当前锐意 >= 60 ? 每秒郭氏帧 * 5 : 0\n    if (孤风破浪.技能数据) {\n      this?.模拟循环?.技能释放后更新运行数据?.(\n        孤风破浪.技能数据,\n        this,\n        (孤风破浪.技能数据.技能CD || 0) - 减少CD\n      )\n    }\n  }\n}\n\nexport default 孤风破浪\n\nexport const 孤风破浪类型 = typeof 孤风破浪\n","// import 循环主类 from '../main'\nimport 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 灭影追风 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '灭影追风')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n    this.初始化技能运行数据()\n  }\n\n  命中() {\n    this.模拟循环.添加buff?.({ 名称: '灭影追风·悟', 对象: '自身' })\n    this.保存释放记录()\n  }\n\n  释放() {\n    this.释放技能回复锐意(30, '灭影追风·悟')\n  }\n\n  释放后() {\n    this.减少绝技技能CD(48)\n  }\n\n  保存释放记录() {\n    const 造成buff数据 = this.获取施加重要buff信息('灭影追风·悟')\n    this.本次释放记录 = 造成buff数据 ? { 造成buff数据 } : {}\n  }\n}\n\nexport default 灭影追风\n\nexport const 灭影随风类型 = typeof 灭影追风\n","import 循环模拟技能基础数据 from '../../../constant/skill'\nimport 技能统一类 from '../../通用类/技能统一类'\n\nclass 换行 extends 技能统一类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '换行')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n}\n\nexport default 换行\n\nexport const 换行类型 = typeof 换行\n","/**\n * 定义模拟循环类\n */\n\nimport {\n  根据奇穴修改buff数据,\n  根据奇穴修改技能数据,\n  起手留客雨BUFF,\n  转化buff和增益名称,\n} from './utils'\nimport {\n  技能GCD组,\n  技能类实例集合,\n  检查运行数据实例类型,\n  Buff枚举,\n  循环日志数据类型,\n  循环基础技能数据类型,\n  角色状态信息类型,\n  技能释放记录数据,\n  待生效事件,\n  技能运行数据类型,\n} from './type'\n\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport { 获取加速等级 } from '@/工具函数/data'\nimport 获取技能信息 from '@/数据/数据工具/获取技能等级信息'\n\nimport 流血 from './DOT类/流血'\nimport 截辕 from './DOT类/截辕'\nimport 行云势一 from './技能类/行云势一'\nimport 行云势二 from './技能类/行云势二'\nimport 行云势三 from './技能类/行云势三'\nimport 决云势一 from './技能类/决云势一'\nimport 决云势二 from './技能类/决云势二'\nimport 横云势一 from './技能类/横云势一'\nimport 横云势二 from './技能类/横云势二'\nimport 停云势 from './技能类/停云势'\nimport 留客雨 from './技能类/留客雨'\nimport 孤风破浪 from './技能类/孤风破浪'\nimport 灭影追风 from './技能类/灭影追风'\nimport 换行 from './技能类/换行'\nimport { 每秒郭氏帧 } from '@/数据/常量'\n\nconst { 技能系数 } = 获取当前数据()\n\ninterface SimulatorCycleProps {\n  测试循环: string[]\n  加速值: number\n  网络延迟: number\n  奇穴: string[]\n  起手留层数: number\n  大橙武模拟: boolean\n  开启武学助手: boolean\n}\n\nclass 循环主类 {\n  循环执行结果: '成功' | '异常' = '成功'\n  循环异常信息 = { 异常索引: 0, 异常信息: '' }\n  测试循环: string[] = []\n  奇穴: string[] = []\n  加速等级 = 0\n  网络延迟 = 0\n  角色状态信息: 角色状态信息类型 = {\n    锐意: 60,\n  }\n  当前自身buff列表: Buff枚举 = {}\n  当前目标buff列表: Buff枚举 = {}\n  当前时间 = 0\n  开始释放上一个技能的时间 = 0\n  战斗日志: 循环日志数据类型[] = []\n  技能释放记录: 技能释放记录数据[] = []\n  Buff和Dot数据: Buff枚举 = {}\n  技能基础数据: 循环基础技能数据类型[] = []\n  GCD组: 技能GCD组 = {\n    公共: 0,\n  }\n  技能类实例集合: 技能类实例集合 = {}\n  云刀上次造成伤害时间: number | undefined = undefined\n  大橙武模拟 = false\n  待生效事件队列: 待生效事件[] = []\n  上一次每两秒回复锐意时间点 = 0\n  开启武学助手 = false\n\n  // 初始化创建\n  constructor(props: SimulatorCycleProps) {\n    // 模拟开始后不会变动的数据\n    this.测试循环 = props.测试循环\n    this.大橙武模拟 = props.大橙武模拟\n    this.奇穴 = props.奇穴\n    this.加速等级 = 获取加速等级(props.加速值)\n\n    // !无界体感延迟多一段，这里比PC多按1帧延迟计算\n    // !武学助手自带-1段加速\n    this.网络延迟 = props.网络延迟 + (props.开启武学助手 ? 2 : 0)\n\n    this.Buff和Dot数据 = 根据奇穴修改buff数据()\n    this.技能基础数据 = 根据奇穴修改技能数据()\n\n    // 模拟初始化\n    this.初始化技能实例类()\n    this.当前自身buff列表 = props.起手留层数\n      ? { ...起手留客雨BUFF(this.Buff和Dot数据, props.起手留层数) }\n      : {}\n    this.当前目标buff列表 = {}\n    this.角色状态信息 = {\n      锐意: 60,\n    }\n    this.上一次每两秒回复锐意时间点 = 0\n    this.开启武学助手 = props.开启武学助手\n    this.重置循环执行结果()\n  }\n\n  重置循环执行结果() {\n    this.循环执行结果 = '成功'\n    this.循环异常信息 = { 异常索引: 0, 异常信息: '' }\n  }\n\n  初始化技能实例类() {\n    this.技能类实例集合 = {\n      '行云势·一': new 行云势一(this),\n      '行云势·二': new 行云势二(this),\n      '行云势·三': new 行云势三(this),\n      '决云势·一': new 决云势一(this),\n      '决云势·二': new 决云势二(this),\n      '横云势·一': new 横云势一(this),\n      '横云势·二': new 横云势二(this),\n      停云势: new 停云势(this),\n      留客雨: new 留客雨(this),\n      孤风破浪: new 孤风破浪(this),\n      灭影追风: new 灭影追风(this),\n      流血: new 流血(this),\n      截辕: new 截辕(this),\n      换行: new 换行(this),\n    }\n  }\n\n  添加buff({ 名称, 对象 = '目标', 事件时间 = this.当前时间, 新增层数 = 1, 只添加日志 = false }) {\n    const 当前层数 =\n      对象 === '自身'\n        ? this.当前自身buff列表[名称]?.当前层数\n        : this.当前目标buff列表[名称]?.当前层数\n\n    const 新buff对象 = {\n      ...this.Buff和Dot数据[名称],\n      当前层数: Math.min((当前层数 || 0) + 新增层数, this.Buff和Dot数据[名称].最大层数 || 1),\n      刷新时间: 事件时间,\n    }\n    if (新buff对象.当前层数 !== 当前层数 && 新buff对象.当前层数 !== 1) {\n      this.添加战斗日志({\n        日志: `${名称}层数变为【${新buff对象.当前层数}】`,\n        日志类型: 对象 === '自身' ? '自身buff变动' : '目标buff变动',\n        日志时间: 事件时间,\n      })\n    } else {\n      this.添加战斗日志({\n        日志: `${对象}获得${名称}`,\n        日志类型: 对象 === '自身' ? '自身buff变动' : '目标buff变动',\n        日志时间: 事件时间,\n      })\n    }\n\n    if (!只添加日志) {\n      if (对象 === '自身') {\n        this.当前自身buff列表[名称] = { ...新buff对象 }\n      } else {\n        this.当前目标buff列表[名称] = { ...新buff对象 }\n      }\n    }\n  }\n\n  卸除buff({\n    名称,\n    buff刷新时间 = 0,\n    对象 = '目标',\n    事件时间 = this.当前时间,\n    卸除层数 = 1,\n    只添加日志 = false,\n  }) {\n    const 当前层数 =\n      对象 === '自身'\n        ? this.当前自身buff列表[名称]?.当前层数\n        : this.当前目标buff列表[名称]?.当前层数\n\n    if (当前层数 && 当前层数 >= 0) {\n      if (当前层数 - 卸除层数 > 0) {\n        this.添加战斗日志({\n          日志: `${名称}层数变为【${当前层数 - 卸除层数}】`,\n          日志类型: 对象 === '自身' ? '自身buff变动' : '目标buff变动',\n          日志时间: 事件时间,\n        })\n        if (!只添加日志) {\n          const 新buff对象 = {\n            ...this.Buff和Dot数据[名称],\n            当前层数: 当前层数 - 卸除层数,\n            刷新时间: buff刷新时间 || 事件时间,\n          }\n          if (对象 === '自身') {\n            this.当前自身buff列表[名称] = { ...新buff对象 }\n          } else {\n            this.当前目标buff列表[名称] = { ...新buff对象 }\n          }\n        }\n      } else {\n        this.添加战斗日志({\n          日志: `${对象}失去${名称}`,\n          日志类型: 对象 === '自身' ? '自身buff变动' : '目标buff变动',\n          日志时间: 事件时间,\n        })\n        if (!只添加日志) {\n          if (对象 === '自身') {\n            delete this.当前自身buff列表[名称]\n          } else {\n            delete this.当前目标buff列表[名称]\n          }\n        }\n      }\n    } else if (只添加日志) {\n      this.添加战斗日志({\n        日志: `${对象}失去${名称}`,\n        日志类型: 对象 === '自身' ? '自身buff变动' : '目标buff变动',\n        日志时间: 事件时间,\n      })\n    }\n  }\n\n  // 校验奇穴是否存在\n  校验奇穴是否存在(待判断奇穴) {\n    return this?.奇穴?.includes(待判断奇穴)\n  }\n\n  // ----------------- 时间、GCD、CD相关算法 start----------------- //\n  /**\n   *\n   * @param 增加时间方法\n   * @description 每次增加时间方法都要同步推进GCD\n   */\n  增加时间(time) {\n    this.跳过全部GCD时间(time)\n    // 增加时间\n    this.当前时间 = this.当前时间 + (time > 0 ? time : 0 || 0)\n    this.DOT结算与更新()\n    this.清空已经消失的buff()\n  }\n\n  跳过全部GCD时间(time) {\n    // 减少GCD剩余时间\n    const 新GCD组: 技能GCD组 = { 公共: 0 }\n    Object.keys(this.GCD组).map((key) => {\n      新GCD组[key] = Math.max((this.GCD组[key] || 0) - time, 0)\n    })\n    this.GCD组 = { ...新GCD组 }\n  }\n\n  技能释放前检查GCD统一方法(当前技能: 循环基础技能数据类型) {\n    let 校验GCD组: string | string[] = 当前技能.技能GCD组 as any\n    if (typeof 校验GCD组 === 'object') {\n      if (校验GCD组?.length) {\n        // 大部分技能只检查自己的GCD\n        const GCD = Math.max(this.GCD组[校验GCD组?.[0]] || 0, this.GCD组[校验GCD组?.[1]] || 0)\n        // 武学助手的无GCD技能自带多-1段加速\n        // if (当前技能.技能GCD组 === '自身' && this.开启武学助手) {\n        //   GCD = GCD + 0\n        // }\n        // 增加GCD\n        return GCD || 0\n      }\n    } else {\n      if (当前技能.技能GCD组 === '自身') {\n        校验GCD组 = 当前技能?.技能名称\n      }\n      if (校验GCD组) {\n        // 大部分技能只检查自己的GCD\n        const GCD = this.GCD组[校验GCD组]\n        // 武学助手的无GCD技能自带多-1段加速\n        // if (当前技能.技能GCD组 === '自身' && this.开启武学助手) {\n        //   GCD = GCD + 0\n        // }\n        // 增加GCD\n        return GCD || 0\n      }\n    }\n    return 0\n  }\n\n  // 对所有有CD技能检查和充能\n  对所有有CD技能检查和充能() {\n    Object.keys(this.技能类实例集合).forEach((key) => {\n      const 实例 = this.技能类实例集合[key]\n      if (实例?.技能运行数据) {\n        const 运行数据: 技能运行数据类型 = 实例?.技能运行数据\n        const 待充能时间点 = 运行数据?.待充能时间点\n        if (待充能时间点?.length) {\n          const 新待充能时间点 = 待充能时间点?.filter((item) => item > this.当前时间)\n          实例?.更新技能运行数据({ 待充能时间点: 新待充能时间点 })\n        }\n      }\n    })\n  }\n\n  技能释放前检查运行数据(当前技能: 循环基础技能数据类型, 技能实例: 检查运行数据实例类型, GCD) {\n    let 等待CD时间 = 0\n    const 可以释放时间 = this.当前时间 + GCD || 0\n    if (技能实例?.技能运行数据) {\n      const 待充能时间点 = 技能实例?.技能运行数据?.待充能时间点\n      if (待充能时间点?.length >= (当前技能?.最大充能层数 || 1)) {\n        const 可释放时间 = 待充能时间点?.[0]\n        // 当前没有层数可用，需要等待充能\n        if (可释放时间 > 可以释放时间) {\n          等待CD时间 = 可释放时间 - 可以释放时间\n        }\n      }\n    }\n    return 等待CD时间\n  }\n\n  技能释放后更新运行数据(\n    当前技能: 循环基础技能数据类型,\n    技能实例: 检查运行数据实例类型,\n    增加CD?: number\n  ) {\n    const 实际增加CD = 增加CD || 当前技能?.技能CD || 0\n    if (技能实例?.技能运行数据) {\n      const 待充能时间点 = 技能实例?.技能运行数据?.待充能时间点 || []\n      const 本次释放充能 =\n        (待充能时间点?.[待充能时间点.length - 1] || this.当前时间) + (实际增加CD || 0)\n      const 新待充能时间点 = [...待充能时间点, 本次释放充能]\n      技能实例?.更新技能运行数据({\n        待充能时间点: 新待充能时间点,\n      })\n    }\n  }\n\n  // ----------------- 时间、GCD、CD相关算法 end----------------- //\n\n  // 添加战斗日志\n  添加战斗日志(log: 循环日志数据类型) {\n    const { 日志时间 = this.当前时间, ...rest } = log\n    this.战斗日志 = [\n      ...(this.战斗日志 || []),\n      {\n        日志时间: 日志时间,\n        ...rest,\n      },\n    ]\n  }\n\n  // 造成伤害\n  技能造成伤害(\n    来源,\n    伤害次数 = 1,\n    额外增益列表: string[] = [],\n    造成时间 = this.当前时间,\n    DOT伤害 = false\n  ) {\n    const 对应技能 = 技能系数?.find((item) => item.技能名称 === 来源)\n    const 技能增益列表 = 获取技能信息(对应技能)?.技能增益列表 || []\n\n    const 有关的buff列表 =\n      技能增益列表\n        ?.filter((item) => {\n          const 当前增益数据 = 转化buff和增益名称(item.增益名称, this.当前自身buff列表)\n          if (当前增益数据) {\n            if (造成时间) {\n              const 增益消失时间 = (当前增益数据?.刷新时间 || 0) + (当前增益数据?.最大持续时间 || 0)\n              return 造成时间 <= 增益消失时间 && !!当前增益数据\n            } else {\n              return !!当前增益数据?.当前层数\n            }\n          } else {\n            return false\n          }\n        })\n        ?.map((item) => {\n          // DOT伤害实时部分buff吃快照，由额外增益列表传入\n          if (\n            (['灭影追风·悟', '大橙武增伤']?.includes(item?.增益名称) ||\n              item?.增益名称?.includes('披靡·悟')) &&\n            DOT伤害\n          ) {\n            return ''\n          } else {\n            return item.增益名称\n          }\n        })\n        .filter((item) => !!item) || []\n\n    const 总增益列表 = 有关的buff列表.concat(额外增益列表)\n\n    this.添加战斗日志({\n      日志: 来源,\n      日志类型: '造成伤害',\n      日志时间: 造成时间,\n      buff列表: 总增益列表 || [],\n      其他数据: {\n        伤害次数: 伤害次数,\n      },\n    })\n  }\n\n  检查GCD(当前技能: 循环基础技能数据类型, 技能实例, i) {\n    let GCD = 0\n    if (技能实例?.检查GCD) {\n      GCD = 技能实例?.检查GCD?.(i)\n    } else {\n      GCD = this.技能释放前检查GCD统一方法(当前技能)\n    }\n    return GCD\n  }\n\n  // 判断GCD，技能CD等\n  技能释放前(当前技能: 循环基础技能数据类型, 技能实例, i) {\n    let GCD = 0\n    let 等待CD = 0\n\n    // 判断是否为当前箭袋第一个技能\n    if (i >= 0) {\n      // 判断上一个技能对于本技能是否有GCD限制\n      if (当前技能?.技能GCD组) {\n        GCD = this.检查GCD(当前技能, 技能实例, i)\n      }\n      // 判断技能CD，如果存在CD。增加等待时间\n      if (当前技能?.技能CD) {\n        等待CD = this.技能释放前检查运行数据(当前技能, 技能实例, GCD)\n      }\n    }\n    // const 延迟等待 = this.当前时间 && (GCD || 等待CD) ? this.网络延迟 : 0\n    const 延迟等待 = this.当前时间 ? this.网络延迟 : 0\n\n    const 技能计划释放时间 = this.当前时间 + GCD + 延迟等待\n    return {\n      技能计划释放时间: 技能计划释放时间,\n      技能预估释放时间: 技能计划释放时间 + 等待CD,\n      等待CD,\n    }\n  }\n\n  技能GCD和CD处理(\n    等待CD,\n    技能预估释放时间,\n    当前技能: 循环基础技能数据类型,\n    技能实例: 检查运行数据实例类型\n  ) {\n    // 判断在处理完特殊事件以后，剩余的待定时间还有多少\n    const 时间差 = 技能预估释放时间 - this.当前时间\n    if (时间差 && 时间差 > 0) {\n      this.增加时间(时间差)\n    }\n    if (等待CD) {\n      this.添加战斗日志({\n        日志: `【${当前技能?.技能名称}】等技能CD【${等待CD}】帧`,\n        日志类型: '等CD',\n        日志时间: 技能预估释放时间,\n      })\n      // const 当前层数 = 技能实例?.技能运行数据?.当前层数\n      // const 新层数 = Math.min(当前层数 + 1, 当前技能?.最大充能层数 || 1)\n      // 技能实例?.更新技能运行数据({ 当前层数: 新层数 })\n    }\n    const 待充能时间点 = 技能实例?.技能运行数据?.待充能时间点\n    const 新待充能时间点 = 待充能时间点?.filter((item) => item > 技能预估释放时间)\n    技能实例?.更新技能运行数据?.({ 待充能时间点: 新待充能时间点 })\n  }\n\n  // 增加技能GCD\n  增加技能GCD(当前技能: 循环基础技能数据类型) {\n    // GCD处理\n    if (当前技能?.技能GCD组) {\n      let 待更新GCD组: string | string[] = 当前技能.技能GCD组 as any\n      if (typeof 待更新GCD组 === 'object') {\n        if (待更新GCD组?.length) {\n          待更新GCD组?.forEach((key) => {\n            this.GCD组[key] = (this.GCD组[key] || 0) + 当前技能?.技能释放后添加GCD - this.加速等级\n          })\n        }\n      } else {\n        if (当前技能.技能GCD组 === '自身') {\n          待更新GCD组 = 当前技能?.技能名称\n        }\n        if (待更新GCD组) {\n          this.GCD组[待更新GCD组] =\n            (this.GCD组[待更新GCD组] || 0) + 当前技能?.技能释放后添加GCD - this.加速等级\n        }\n      }\n    }\n  }\n\n  技能成功开始释放(当前技能: 循环基础技能数据类型, 技能实例) {\n    this.增加技能GCD(当前技能)\n    this.增加技能CD(当前技能, 技能实例)\n  }\n\n  // 增加技能CD\n  增加技能CD(当前技能: 循环基础技能数据类型, 技能实例) {\n    // 技能CD处理\n    if (当前技能?.技能CD) {\n      if (技能实例?.技能释放后更新运行数据) {\n        技能实例.技能释放后更新运行数据?.()\n      } else {\n        this.技能释放后更新运行数据(当前技能, 技能实例)\n      }\n    }\n  }\n\n  // 判断添加GCD等\n  技能释放后(当前技能: 循环基础技能数据类型, 计划释放时间: number, 开始释放时间: number, 技能实例) {\n    const 技能释放记录结果 = 技能实例?.获取技能释放记录结果?.() || {}\n    // 技能释放记录\n    this.技能释放记录.push({\n      技能名称: 当前技能?.技能名称,\n      计划释放时间,\n      实际释放时间: 开始释放时间,\n      技能释放记录结果,\n    })\n  }\n\n  清空buff调用函数(对象: '自身' | '目标') {\n    const buff列表 = 对象 === '自身' ? this.当前自身buff列表 : this.当前目标buff列表\n\n    // 更新目标buff\n    Object.keys(buff列表).forEach((key) => {\n      const buff对象 = buff列表[key]\n      const buff应该消失时间 = (buff对象?.刷新时间 || 0) + (buff对象?.最大持续时间 || 0)\n      const 消失层数 = buff对象?.自然消失失去层数 || buff对象?.最大层数\n      if (buff应该消失时间 < this.当前时间) {\n        this.卸除buff({ 名称: key, 对象, 事件时间: buff应该消失时间, 卸除层数: 消失层数 })\n      }\n    })\n  }\n\n  清空已经消失的buff() {\n    // 更新目标buff\n    this.清空buff调用函数('目标')\n    // 更新自身buff\n    this.清空buff调用函数('自身')\n  }\n\n  // 对当前的DOT进行已过期的结算和剩余时间更新\n  DOT结算与更新() {\n    this.技能类实例集合?.流血?.结算流血伤害()\n    this.技能类实例集合?.截辕?.结算截辕伤害()\n  }\n\n  // 模拟轮次开始\n  本轮模拟开始前() {\n    this.重置循环执行结果()\n    this.DOT结算与更新()\n  }\n\n  // 模拟轮次释放结束\n  本轮模拟结束后() {\n    // 判断buff列表，清空已经消失的buff\n    this.清空已经消失的buff()\n    this.对所有有CD技能检查和充能()\n  }\n\n  // 技能释放校验\n  技能释放校验(技能实例, 当前技能) {\n    const 释放判断结果 = 技能实例.释放\n      ? 技能实例.释放?.() || { 可以释放: true }\n      : { 可以释放: true }\n    const 校验结果 = {\n      可以释放: 释放判断结果.可以释放,\n      异常信息: 释放判断结果.异常信息,\n    }\n    if (校验结果.可以释放) {\n      this.添加战斗日志?.({\n        日志: 当前技能?.技能名称,\n        日志类型: '释放技能',\n      })\n    }\n    return 校验结果\n  }\n\n  // 技能释放异常\n  技能释放异常(校验结果, 当前技能, i) {\n    this.添加战斗日志({\n      日志: `循环在第${i + 1}个技能${当前技能?.技能名称}异常终止`,\n      日志类型: '循环异常',\n    })\n    this.循环执行结果 = '异常'\n    if (校验结果?.异常信息) {\n      this.循环异常信息 = {\n        异常索引: i + 1,\n        异常信息: 校验结果?.异常信息,\n      }\n    }\n  }\n\n  待生效事件结算(结算判断时间 = this.当前时间) {\n    if (this.待生效事件队列.length) {\n      // 轮训执行完成所有的事件\n      const 轮训执行事件 = () => {\n        if (this.待生效事件队列[0]?.事件时间 <= 结算判断时间) {\n          // 先推进时间到事件时间\n          const 当前事件 = this.待生效事件队列[0]\n          this.DOT结算与更新()\n          this.增加时间(当前事件.事件时间 - this.当前时间)\n          this.添加战斗日志?.({\n            日志: `事件【${当前事件.事件名称}】触发`,\n            日志类型: '技能释放结果',\n            日志时间: this.当前时间,\n          })\n          if (当前事件.事件名称?.includes('卸除buff')) {\n            if (当前事件?.事件备注?.buff名称) {\n              this.卸除buff({\n                名称: 当前事件?.事件备注?.buff名称,\n                对象: 当前事件?.事件备注?.buff对象,\n                卸除层数: 当前事件?.事件备注?.卸除层数,\n                只添加日志: 当前事件?.事件备注?.buff类型 === 'DOT',\n              })\n            }\n          }\n          this.待生效事件队列?.shift()\n          if (this.待生效事件队列.length) {\n            轮训执行事件()\n          }\n        }\n      }\n\n      轮训执行事件()\n      // this.待生效事件队列 = [...未生效事件]\n    }\n  }\n\n  添加待生效事件队列(传入数据: 待生效事件[], 事件覆盖 = false) {\n    let 新待生效事件队列: 待生效事件[] = []\n    // 把原来事件中的同名事件修改时间\n    if (事件覆盖) {\n      if (this.待生效事件队列?.some((item) => item.事件名称 === 传入数据?.[0]?.事件名称)) {\n        新待生效事件队列 = this.待生效事件队列.map((item) => {\n          if (item.事件名称 === 传入数据?.[0]?.事件名称) {\n            return 传入数据?.[0]\n          } else {\n            return item\n          }\n        })\n      } else {\n        新待生效事件队列 = (this.待生效事件队列 || []).concat(传入数据 || [])\n      }\n    } else {\n      新待生效事件队列 = (this.待生效事件队列 || []).concat(传入数据 || [])\n    }\n    // 由于不确定待生效事件时间分布，重新排序\n    新待生效事件队列.sort((a, b) => {\n      return (a?.事件时间 || 0) - (b?.事件时间 || 0)\n    })\n    this.待生效事件队列 = [...新待生效事件队列]\n  }\n\n  删除待生效事件队列(事件名称) {\n    const 新待生效事件队列: 待生效事件[] = [...(this.待生效事件队列 || [])].filter(\n      (item) => item.事件名称 !== 事件名称\n    )\n    // 由于不确定待生效事件时间分布，重新排序\n    新待生效事件队列.sort((a, b) => {\n      return (a?.事件时间 || 0) - (b?.事件时间 || 0)\n    })\n    this.待生效事件队列 = [...新待生效事件队列]\n  }\n\n  // 模拟函数，一个技能的释放生命周期\n  模拟() {\n    for (let i = 0; i < this.测试循环.length; i++) {\n      this.本轮模拟开始前()\n      const 当前技能 = this?.技能基础数据?.find((item) => item?.技能名称 === this.测试循环[i])\n\n      if (当前技能) {\n        const 技能实例 = this.技能类实例集合[当前技能?.技能名称]\n        if (技能实例) {\n          技能实例?.释放前初始化?.()\n          // 获取预估技能释放时间，处理预估时间前的所有待生效事件，推进时间轴\n          const { 技能计划释放时间, 等待CD, 技能预估释放时间 } = this.技能释放前(\n            当前技能,\n            技能实例,\n            i\n          )\n          const 是否为读条技能 = !!技能实例?.读条时间?.()\n          if (是否为读条技能) {\n            技能实例?.读条?.(技能预估释放时间)\n          }\n          this.每秒回复锐意结算()\n          this.待生效事件结算(技能预估释放时间)\n          this.技能GCD和CD处理(等待CD, 技能预估释放时间, 当前技能, 技能实例)\n          this.技能成功开始释放(当前技能, 技能实例)\n          const 释放校验结果 = this.技能释放校验(技能实例, 当前技能)\n          this.清空已经消失的buff()\n          const 是否为最后一个技能 = i === this.测试循环.length - 1\n          const 开始释放时间 = this.当前时间\n          if (释放校验结果?.可以释放) {\n            技能实例.命中?.(是否为最后一个技能)\n            技能实例.造成伤害?.()\n            技能实例.释放后?.()\n          } else {\n            this.技能释放异常(释放校验结果, 当前技能, i)\n            break\n          }\n          this.技能释放后(当前技能, 技能计划释放时间, 开始释放时间, 技能实例)\n        }\n      }\n      this.本轮模拟结束后()\n    }\n  }\n\n  // 将日志按时间排序\n  日志排序() {\n    const 新日志 = [...(this.战斗日志 || [])]\n\n    新日志.sort((a, b) => {\n      return (a?.日志时间 || 0) - (b?.日志时间 || 0)\n    })\n\n    this.战斗日志 = [...(新日志 || [])]\n  }\n\n  获取当前各技能的运行状态() {\n    const 各技能当前运行状态 = {}\n\n    ;(Object.keys(this.技能类实例集合) || []).forEach((key) => {\n      各技能当前运行状态[key] = this.技能类实例集合[key]?.技能运行数据 || {}\n    })\n\n    return 各技能当前运行状态\n  }\n\n  获取各DOT的运行状态() {\n    const DOT运行数据 = {}\n    ;(Object.keys(this.技能类实例集合) || []).forEach((key) => {\n      if (this.技能类实例集合[key]?.DOT运行数据) {\n        DOT运行数据[key] = this.技能类实例集合[key]?.DOT运行数据 || {}\n      }\n    })\n    return DOT运行数据\n  }\n\n  // 职业特殊函数\n  增加锐意(锐意值, 来源, 添加时间 = this.当前时间) {\n    this.添加战斗日志({\n      日志: `${来源}回复锐意【${锐意值}】点`,\n      日志类型: '回复锐意',\n    })\n    const 更新后锐意 = (this.角色状态信息.锐意 || 0) + 锐意值\n    this.角色状态信息.锐意 = Math.min(更新后锐意, 60)\n    this.添加战斗日志({\n      日志: `锐意变为【${this.角色状态信息.锐意}】`,\n      日志类型: '自身buff变动',\n      日志时间: 添加时间,\n    })\n  }\n\n  减少锐意(锐意值, 来源) {\n    this.添加战斗日志({\n      日志: `${来源}消耗锐意【${锐意值}】点`,\n      日志类型: '消耗锐意',\n    })\n    const 更新后锐意 = (this.角色状态信息.锐意 || 0) - 锐意值\n    this.角色状态信息.锐意 = Math.max(更新后锐意, 0)\n    this.添加战斗日志({\n      日志: `锐意变为【${this.角色状态信息.锐意}】`,\n      日志类型: '自身buff变动',\n    })\n  }\n\n  每秒回复锐意结算() {\n    // 判断当前时间节点是否超过上一个锐意时间点大于等于两秒\n    if (this.当前时间 - this.上一次每两秒回复锐意时间点 >= 每秒郭氏帧 * 2) {\n      const 新的时间点 = this.上一次每两秒回复锐意时间点 + 每秒郭氏帧 * 2\n      this.增加锐意(5, '职业每2秒回复5点', 新的时间点)\n      this.上一次每两秒回复锐意时间点 = 新的时间点\n    }\n  }\n}\n\nexport default 循环主类\n\nexport type 循环主类类型 = typeof 循环主类\n","/**\n * 定义模拟循环类\n */\n\nimport { 角色状态信息类型 } from '../simulator/type'\nimport 循环主类 from './main'\n\ninterface SimulatorCycleProps {\n  测试循环: string[]\n  加速值: number\n  网络延迟: number\n  奇穴: string[]\n  角色状态信息?: 角色状态信息类型\n  // 当前自身buff列表?: Buff枚举\n  // 当前目标buff列表?: Buff枚举\n  起手留层数: number\n  大橙武模拟: boolean\n  开启武学助手: boolean\n}\n\nconst 模拟循环 = (props: SimulatorCycleProps) => {\n  const 模拟实例 = new 循环主类(props)\n  模拟实例.模拟()\n\n  模拟实例.日志排序()\n\n  const 当前各技能运行状态 = 模拟实例.获取当前各技能的运行状态()\n  const 当前DOT运行状态 = 模拟实例.获取各DOT的运行状态()\n\n  return {\n    最终日志: 模拟实例.战斗日志,\n    当前自身buff列表: 模拟实例.当前自身buff列表,\n    当前目标buff列表: 模拟实例.当前目标buff列表,\n    角色状态信息: 模拟实例.角色状态信息,\n    当前时间: 模拟实例.当前时间,\n    循环执行结果: 模拟实例.循环执行结果,\n    循环异常信息: 模拟实例.循环异常信息,\n    技能释放记录: 模拟实例.技能释放记录,\n    当前各技能运行状态,\n    当前DOT运行状态,\n    当前GCD组: 模拟实例.GCD组,\n    技能基础数据: 模拟实例.技能基础数据,\n  }\n}\n\nexport default 模拟循环\n","import 紫武_手动 from './快速导入默认循环/启用循环/紫武_手动'\n// import 紫武_助手 from './快速导入默认循环/启用循环/紫武_助手'\n// import 橙武_手动 from './快速导入默认循环/启用循环/橙武_手动'\n// import 紫武_助手_风雪_一段 from './快速导入默认循环/启用循环/紫武_助手_风雪_一段'\n// import 紫武_助手_风雪_二段 from './快速导入默认循环/启用循环/紫武_助手_风雪_二段'\n// import 橙武_风雪 from './快速导入默认循环/启用循环/橙武_风雪'\n\nexport default [\n  紫武_手动,\n  // 紫武_助手,\n  // 橙武_手动,\n  // 紫武_助手_风雪_一段,\n  // 紫武_助手_风雪_二段,\n]\n","import { 循环数据 } from '@/@types/循环'\n\nconst 紫武手动: Partial<循环数据> = {\n  名称: '紫武_手动',\n  奇穴: ['斩涛·悟', '披靡·悟', '倒海·悟', '孤风破浪·悟'],\n  技能序列: [\n    '灭影追风',\n    '行云势·一',\n    '行云势·二',\n    '横云势·一',\n    '留客雨',\n    '横云势·二',\n    '行云势·三',\n    '行云势·一',\n    '孤风破浪',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '决云势·一',\n    '留客雨',\n    '决云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '横云势·一',\n    '留客雨',\n    '横云势·二',\n    '行云势·三',\n    '行云势·一',\n    '灭影追风',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '决云势·一',\n    '留客雨',\n    '决云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '横云势·一',\n    '留客雨',\n    '横云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '灭影追风',\n    '行云势·二',\n    '决云势·一',\n    '留客雨',\n    '决云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '横云势·一',\n    '留客雨',\n    '横云势·二',\n    '行云势·三',\n    '行云势·一',\n    '孤风破浪',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '决云势·一',\n    '留客雨',\n    '决云势·二',\n    '行云势·三',\n    '行云势·一',\n    '灭影追风',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '横云势·一',\n    '留客雨',\n    '横云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '决云势·一',\n    '留客雨',\n    '决云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '灭影追风',\n    '行云势·二',\n    '横云势·一',\n    '留客雨',\n    '横云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '决云势·一',\n    '留客雨',\n    '决云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '横云势·一',\n    '留客雨',\n    '横云势·二',\n    '行云势·三',\n    '行云势·一',\n    '灭影追风',\n    '行云势·二',\n    '孤风破浪',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '决云势·一',\n    '留客雨',\n    '决云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '横云势·一',\n    '留客雨',\n    '横云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '灭影追风',\n    '行云势·二',\n    '决云势·一',\n    '留客雨',\n    '决云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '横云势·一',\n    '留客雨',\n    '横云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '决云势·一',\n    '留客雨',\n    '决云势·二',\n    '行云势·三',\n    '行云势·一',\n    '灭影追风',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '横云势·一',\n    '留客雨',\n    '横云势·二',\n    '行云势·三',\n    '行云势·一',\n    '孤风破浪',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '决云势·一',\n    '留客雨',\n    '行云势·三',\n    '决云势·二',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '灭影追风',\n    '行云势·二',\n    '横云势·一',\n    '留客雨',\n    '横云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '决云势·一',\n    '留客雨',\n    '决云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '横云势·一',\n    '留客雨',\n    '横云势·二',\n    '行云势·三',\n    '行云势·一',\n    '灭影追风',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '决云势·一',\n    '留客雨',\n    '决云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '横云势·一',\n    '留客雨',\n    '横云势·二',\n    '行云势·三',\n    '行云势·一',\n    '孤风破浪',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '灭影追风',\n    '行云势·二',\n    '决云势·一',\n    '留客雨',\n    '行云势·三',\n    '决云势·二',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '横云势·一',\n    '留客雨',\n    '横云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '决云势·一',\n    '留客雨',\n    '决云势·二',\n    '行云势·三',\n    '行云势·一',\n    '灭影追风',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '横云势·一',\n    '留客雨',\n    '横云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '决云势·一',\n    '留客雨',\n    '行云势·三',\n    '决云势·二',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '灭影追风',\n    '孤风破浪',\n    '行云势·二',\n    '横云势·一',\n    '留客雨',\n    '横云势·二',\n  ],\n}\n\nexport default 紫武手动\n","import { Button, Divider, Dropdown, Menu, message, Popover, Select, Tooltip } from 'antd'\nimport React from 'react'\nimport { 循环基础技能数据类型, 模拟信息类型 } from '../../simulator/type'\nimport 快速导入默认循环 from '../../constant/快速导入默认循环'\nimport { useAppSelector } from '@/hooks'\nimport './index.css'\nimport { 延迟设定 } from '@/数据/常量'\ninterface CycleModalHeaderProps {\n  cycle: 循环基础技能数据类型[]\n  设置自定义循环保存弹窗: (e: boolean) => void\n  清空循环: () => void\n  起手留层数: number\n  设置起手留层数: (e: number) => void\n  快速导入循环: (e: 循环基础技能数据类型[], 循环标记: string) => void\n  网络延迟: number\n  更新网络延迟: (e: number) => void\n  加速等级: number\n  更新加速等级: (e: number) => void\n  模拟信息: 模拟信息类型\n}\n\nfunction CycleModalHeader(props: CycleModalHeaderProps) {\n  const {\n    cycle,\n    设置自定义循环保存弹窗,\n    清空循环,\n    起手留层数,\n    设置起手留层数,\n    快速导入循环,\n    // 更新奇穴弹窗展示,\n    // 更新奇穴信息,\n    加速等级,\n    更新加速等级,\n    模拟信息,\n    网络延迟,\n    更新网络延迟,\n  } = props\n\n  const 自定义循环 = useAppSelector((state) => state?.data?.自定义循环列表)\n\n  const 快捷添加循环 = (名称, 类型 = '默认') => {\n    const 数据源 = 类型 === '默认' ? 快速导入默认循环 : 自定义循环\n\n    const 当前循环数据 = 数据源?.find((item) => item.名称 === 名称)\n\n    const 技能序列信息 = (当前循环数据?.技能序列 || [])\n      .map((item) => {\n        return 模拟信息?.技能基础数据?.find((a) => a?.技能名称 === item) as 循环基础技能数据类型\n      })\n      .filter((item) => item)\n\n    快速导入循环(技能序列信息, 当前循环数据?.标记 || '')\n    // if (当前循环数据?.奇穴) {\n    //   更新奇穴信息(当前循环数据?.奇穴)\n    // }\n  }\n\n  const 粘贴导入 = () => {\n    navigator.clipboard.readText().then((clipboardData) => {\n      if (!clipboardData) {\n        message.error('粘贴板内无可导入数据，请检查或重新复制')\n      } else {\n        const list = clipboardData?.split(',')\n        const 技能序列信息 = (list || [])\n          .map((item) => {\n            return 模拟信息?.技能基础数据?.find((a) => a?.技能名称 === item) as 循环基础技能数据类型\n          })\n          .filter((item) => item)\n        if (技能序列信息.length) {\n          快速导入循环(技能序列信息, '')\n          message.success('数据已全部导入')\n        } else {\n          message.error('粘贴板内无可导入数据，请检查或重新复制')\n        }\n      }\n    })\n  }\n\n  return (\n    <div className={'cycle-simulator-modal-header space-between'}>\n      <div className={'cycle-simulator-modal-title-wrapper'}>\n        <h1 className={'cycle-simulator-modal-title'}>循环模拟</h1>\n        <Popover\n          content={\n            <div>\n              <p>1、点击下方技能按钮添加至循环内</p>\n              <p>2、可以整行删除、复制本行到最后一行</p>\n              <p>3、可以在单行内拖动改变技能顺序</p>\n              <p>\n                更多使用说明详见：\n                <a href='https://www.jx3box.com/tool/75292' target='_blank' rel='noreferrer'>\n                  使用手册及FAQ\n                </a>\n              </p>\n            </div>\n          }\n        >\n          <span className={'cycle-simulator-help'}>如何使用</span>\n        </Popover>\n        {/* <Popover\n          content={\n            <div>\n              目前未支持的功能\n            </div>\n          }\n        >\n          <span className={'cycle-not-support'}>未支持功能</span>\n        </Popover> */}\n      </div>\n      <div className={'cycle-simulator-header-btns'}>\n        <Select\n          size='small'\n          className={'cycle-simulator-header-select'}\n          value={起手留层数}\n          onChange={设置起手留层数}\n          options={Array.from({ length: 4 }, (v, i) => i).map((a) => {\n            return {\n              value: a,\n              label: `${a}层披靡`,\n            }\n          })}\n        />\n        <Select\n          size='small'\n          className={'cycle-simulator-header-select'}\n          value={网络延迟}\n          onChange={更新网络延迟}\n          options={延迟设定}\n        />\n        <Select\n          size='small'\n          className={'cycle-simulator-header-select'}\n          value={加速等级}\n          onChange={更新加速等级}\n          options={Array.from({ length: 6 }, (v, i) => i).map((a) => {\n            return {\n              value: a,\n              label: `${a}段加速`,\n            }\n          })}\n        />\n        <Dropdown\n          overlay={\n            <Menu>\n              {快速导入默认循环?.map((item) => {\n                return (\n                  <Menu.Item key={item?.名称} onClick={() => 快捷添加循环(item?.名称)}>\n                    {item?.名称}\n                  </Menu.Item>\n                )\n              })}\n              {自定义循环?.length\n                ? 自定义循环.map((item, index) => {\n                    return (\n                      <Menu.Item key={index} onClick={() => 快捷添加循环(item?.名称, '自定义')}>\n                        {item?.名称}\n                      </Menu.Item>\n                    )\n                  })\n                : null}\n              <Divider style={{ margin: '4px 0' }} />\n              <Menu.Item key='ctrlv' onClick={粘贴导入}>\n                粘贴导入\n              </Menu.Item>\n            </Menu>\n          }\n        >\n          <Button size='small'>导入循环</Button>\n        </Dropdown>\n        {/* <Tooltip title={'本奇穴设置只会在循环模拟器内生效，不影响外部'}>\n          <Button size='small' onClick={() => 更新奇穴弹窗展示(true)}>\n            奇穴设置\n          </Button>\n        </Tooltip> */}\n        <Button size='small' onClick={() => 清空循环()} danger>\n          清空循环\n        </Button>\n        <Tooltip title='自定义循环和原计算器其他循环的dps会心期望计算方式不同。会导致最终数值偏差。请勿进行跨循环比较。'>\n          <Button\n            size='small'\n            type='primary'\n            onClick={() => 设置自定义循环保存弹窗(true)}\n            disabled={cycle?.length < 1 || 模拟信息?.循环执行结果 === '异常'}\n          >\n            保存为自定义循环\n          </Button>\n        </Tooltip>\n      </div>\n    </div>\n  )\n}\n\nexport default CycleModalHeader\n","import React from 'react'\nimport { 角色状态信息类型 } from '../../../simulator/type'\n\nimport { Progress } from 'antd'\nimport './index.css'\n\ninterface RuiyiProps {\n  角色状态信息: 角色状态信息类型\n}\n\nfunction Ruiyi(props: RuiyiProps) {\n  const { 角色状态信息 } = props\n\n  const 当前锐意 = 角色状态信息?.锐意 || 0\n\n  return (\n    <div className={'cycle-status-bar-content'}>\n      <div className={'cycle-status-bar-title'}>锐意</div>\n      <div className={'cycle-status-bar-body'}>\n        <Progress\n          className={'cycle-status-bar-ruiyi'}\n          percent={(当前锐意 / 60) * 100}\n          format={(percent) => `${Math.round((+(percent || 0) / 100) * 60)}`}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Ruiyi\n","import React from 'react'\n\nimport { Space, Tooltip } from 'antd'\nimport { Buff枚举, DOT列表 } from '../../../simulator/type'\nimport { 每秒郭氏帧 } from '@/数据/常量'\nimport { 原始Buff数据 } from '../../../constant/skill'\nimport './index.css'\n\ninterface BuffProps {\n  title: string\n  buff列表: Buff枚举\n  DOT列表?: DOT列表\n  当前时间点: number\n}\n\nfunction Buff(props: BuffProps) {\n  const { title, buff列表, DOT列表 = {}, 当前时间点 } = props\n\n  const 当前buff列表 = Object.keys(buff列表).map((item) => buff列表[item])\n  const 当前Dot列表 = Object.keys(DOT列表)\n    .map((item) => {\n      const 原始数据 = 原始Buff数据?.[item]\n      return {\n        ...DOT列表[item],\n        ...原始数据,\n      }\n    })\n    ?.filter((item) => item?.待生效数据?.length)\n\n  return (\n    <div className={'cycle-status-bar-content cycle-status-bar-buff-content'}>\n      <div className={'cycle-status-bar-title'}>{title}</div>\n      <Space className={'cycle-status-bar-buff-list'} size={[8, 8]} wrap>\n        {当前buff列表?.length\n          ? 当前buff列表.map((item) => {\n              const 应该消失时间 = (item.刷新时间 || 0) + (item.最大持续时间 || 0)\n              const 剩余时间 = 应该消失时间 - 当前时间点 || 0\n              const 剩余时间秒 = (剩余时间 / 每秒郭氏帧).toFixed(1)\n              const 层数 = item.当前层数 || 0\n              return (\n                <div className={'cycle-status-bar-buff'} key={item.名称}>\n                  <div className={'cycle-status-bar-buff-item'}>\n                    <Tooltip\n                      title={\n                        <div>\n                          <>{`${item.名称}${层数 > 1 ? `${层数}层` : ''}`}</>\n                          <p>{item.备注}</p>\n                        </div>\n                      }\n                    >\n                      <img className={'cycle-status-bar-buff-img'} src={item.图标} />\n                    </Tooltip>\n                    {层数 > 1 ? (\n                      <span className={'cycle-status-bar-buff-count'}>{item.当前层数}</span>\n                    ) : null}\n                  </div>\n                  <p\n                    className={`cycle-status-bar-buff-second ${\n                      剩余时间 < 每秒郭氏帧 * 2 ? 'cycle-status-bar-buff-second-limit' : ''\n                    }`}\n                  >\n                    {剩余时间秒}\n                  </p>\n                </div>\n              )\n            })\n          : null}\n        {当前Dot列表?.length\n          ? 当前Dot列表.map((item) => {\n              const 最后一跳 = item.待生效数据?.[item.待生效数据.length - 1] || {}\n              const 应该消失时间 = 最后一跳?.生效时间 || 0\n              const 剩余时间 = 应该消失时间 - 当前时间点 || 0\n              const 剩余时间秒 = (剩余时间 / 每秒郭氏帧).toFixed(1)\n              const 层数 = 最后一跳.当前层数 || 0\n              return (\n                <div className={'cycle-status-bar-buff'} key={item.名称}>\n                  <div className={'cycle-status-bar-buff-item'}>\n                    <Tooltip\n                      title={\n                        <div>\n                          <p>{`${item.名称}${层数 > 1 ? `${层数}层` : ''}`}</p>\n                          <p>{item.备注}</p>\n                        </div>\n                      }\n                    >\n                      <img className={'cycle-status-bar-buff-img'} src={item.图标} />\n                    </Tooltip>\n                    {层数 > 1 ? (\n                      <span className={'cycle-status-bar-buff-count'}>{层数}</span>\n                    ) : null}\n                  </div>\n                  <p\n                    className={`cycle-status-bar-buff-second ${\n                      剩余时间 < 每秒郭氏帧 * 2 ? 'cycle-status-bar-buff-second-limit' : ''\n                    }`}\n                  >\n                    {剩余时间秒}\n                  </p>\n                </div>\n              )\n            })\n          : null}\n        {!当前buff列表?.length && !当前Dot列表?.length ? (\n          <p className={'cycle-buff-empty'}>无</p>\n        ) : null}\n      </Space>\n    </div>\n  )\n}\n\nexport default Buff\n","import React from 'react'\nimport { Modal, ModalProps, Table } from 'antd'\nimport 循环模拟技能基础数据, { 日志类型数组 } from '../../../../constant/skill'\nimport { 每秒郭氏帧 } from '@/数据/常量'\nimport { 循环日志数据类型 } from '../../../../simulator/type'\nimport '../../../../index.css'\n\ninterface BattleLogModalProps extends ModalProps {\n  logData: 循环日志数据类型[]\n}\n\nconst BattleLogModal: React.FC<BattleLogModalProps> = (props) => {\n  const { open, onCancel, logData } = props\n\n  const columns = [\n    {\n      title: '日志',\n      dataIndex: '日志',\n      filters: [...循环模拟技能基础数据, { 技能名称: '流血' }]?.map((item) => {\n        return {\n          text: item?.技能名称,\n          value: item?.技能名称,\n        }\n      }),\n      onFilter: (value: any, record) => {\n        return record.日志?.includes(value) || record?.日志类型?.includes(value)\n      },\n    },\n    {\n      title: '日志类型',\n      dataIndex: '日志类型',\n      filters: 日志类型数组?.map((item) => {\n        return {\n          text: item,\n          value: item,\n        }\n      }),\n      onFilter: (value: any, record) => record.日志类型.indexOf(value) === 0,\n    },\n    {\n      title: '伤害次数',\n      dataIndex: '伤害次数',\n      render: (_, row) => {\n        return row?.其他数据?.伤害次数 || ''\n      },\n    },\n    {\n      title: 'buff列表',\n      dataIndex: 'buff列表',\n      render: (_, record) => {\n        return record.日志类型 === '造成伤害' ? (_ || [])?.join(',') || '-' : '-'\n      },\n    },\n    {\n      title: '日志帧',\n      dataIndex: '日志时间',\n      render: (_) => {\n        return _\n      },\n    },\n    {\n      title: '日志秒',\n      dataIndex: '日志秒',\n      render: (_, row) => {\n        return row?.日志时间 / 每秒郭氏帧\n      },\n    },\n    // {\n    //   title: '造成伤害',\n    //   dataIndex: '造成伤害',\n    // },\n    // {\n    //   title: '造成总伤害',\n    //   dataIndex: '造成总伤害',\n    // },\n    // {\n    //   title: '秒伤',\n    //   dataIndex: '秒伤',\n    // },\n  ]\n\n  return (\n    <Modal\n      className='cycle-simulator-modal'\n      open={open}\n      onCancel={onCancel}\n      title={\n        <div className={'cycle-simulator-modal-header'}>\n          <h1 className={'cycle-simulator-modal-title'}>战斗日志</h1>\n        </div>\n      }\n      width={'80%'}\n      centered\n      footer={false}\n    >\n      <Table\n        dataSource={logData}\n        columns={columns}\n        size='small'\n        pagination={{ pageSize: 100, showTotal: (total) => total }}\n      />\n    </Modal>\n  )\n}\n\nexport default BattleLogModal\n","import React from 'react'\nimport 结果统计 from '@/功能模块/计算结果/结果统计'\nimport { 计算结果技能列表类型 } from '@/@types/输出'\nimport '../../../../index.css'\n\ninterface SkillCountModalProps {\n  open: boolean\n  onCancel: () => void\n  dpsList: 计算结果技能列表类型[]\n  total: number\n}\n\nconst SkillCountModal: React.FC<SkillCountModalProps> = (props) => {\n  const { open, onCancel, total, dpsList } = props\n\n  return (\n    <结果统计\n      计算结果={{\n        总伤: total,\n        计算结果技能列表: dpsList,\n      }}\n      visible={open}\n      onClose={() => onCancel()}\n    />\n  )\n}\n\nexport default SkillCountModal\n","import { 循环日志数据类型 } from '../../../../../simulator/type'\n\nconst 过滤的buff列表 = ['长溯']\n\nexport const 获取Buff覆盖率 = (日志: 循环日志数据类型[], 总战斗用时: number) => {\n  // 以buff个体分类，组成数字数组代表buff持续时间段\n  const Buff枚举: {\n    [key: string]: number[][]\n  } = {}\n  const 覆盖率 = {}\n\n  // 遍历日志塞入数组\n  for (let i = 0; i < 日志.length; i++) {\n    if (\n      (日志[i]?.日志类型 === '目标buff变动' || 日志[i]?.日志类型 === '自身buff变动') &&\n      (日志[i]?.日志?.includes('获得') || 日志[i]?.日志?.includes('失去'))\n    ) {\n      // 当前buff信息\n      const logName = 日志[i]?.日志\n      const type = logName?.includes('获得') ? 'get' : 'lose'\n      const buffName = type === 'get' ? logName?.split('获得')?.[1] : logName?.split('失去')?.[1]\n      const currentTime: number = 日志[i]?.日志时间 || 0\n      if (buffName && !过滤的buff列表?.includes(buffName)) {\n        if (type === 'get') {\n          if (Buff枚举?.[buffName]) {\n            // 判断当前最后一个数组的长度，如果为1代表还没结束，不处理。为2再塞入新的起始时间\n            if (Buff枚举[buffName][Buff枚举[buffName].length - 1]?.length > 1) {\n              Buff枚举[buffName].push([currentTime])\n            }\n          } else {\n            Buff枚举[buffName] = [[currentTime]]\n          }\n        } else if (type === 'lose') {\n          if (Buff枚举?.[buffName]) {\n            if (Buff枚举?.[buffName]?.[Buff枚举?.[buffName]?.length - 1]) {\n              Buff枚举[buffName][Buff枚举[buffName].length - 1].push(currentTime)\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // 循环结束，对没有结束时间的buff做补充，塞入总战斗用时作为结束时间\n  // 同时，计算各buff的覆盖率\n  Object.keys(Buff枚举).forEach((key) => {\n    if (Buff枚举[key]?.length) {\n      if (\n        Buff枚举[key]?.[Buff枚举[key]?.length - 1] &&\n        Buff枚举[key]?.[Buff枚举[key]?.length - 1]?.length < 2\n      ) {\n        Buff枚举[key][Buff枚举[key].length - 1].push(总战斗用时)\n      }\n\n      let 总持续时间 = 0\n      for (let i = 0; i < Buff枚举[key].length; i++) {\n        if (Buff枚举[key][i] && Buff枚举[key][i].length === 2) {\n          总持续时间 = 总持续时间 + Buff枚举[key][i][1] - Buff枚举[key][i][0]\n        }\n      }\n      覆盖率[key] = ((总持续时间 / 总战斗用时) * 100)?.toFixed(3)\n    }\n  })\n\n  return {\n    Buff枚举,\n    覆盖率,\n  }\n}\n\nexport const 格式化buff覆盖数组 = (Buff枚举) => {\n  const res: any[] = []\n  Object.keys(Buff枚举).forEach((key) => {\n    if (Buff枚举[key]?.length) {\n      Buff枚举[key].forEach((range) => {\n        res.push({ type: key, range: range })\n      })\n    }\n  })\n  return res\n}\n","import { Modal, ModalProps, Space } from 'antd'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { Chart } from '@antv/g2'\nimport { 循环日志数据类型 } from '../../../../../simulator/type'\nimport './index.css'\nimport { 格式化buff覆盖数组, 获取Buff覆盖率 } from './util'\n\ninterface BuffCountModalProps extends ModalProps {\n  open: boolean\n  onCancel: () => void\n  日志: 循环日志数据类型[]\n  总战斗用时: number // 总战斗用时\n}\n\nfunction BuffCountModal(props: BuffCountModalProps) {\n  const { open, onCancel, 日志, 总战斗用时 } = props\n  const [chartData, setChartData] = useState<any>()\n  const limitRef: any = useRef<any>()\n  const [覆盖率, 设置覆盖率] = useState<any>({})\n\n  useEffect(() => {\n    if (open) {\n      setTimeout(() => {\n        initChart()\n      }, 20)\n    }\n    if (open) {\n      limitRef.current = false\n    } else {\n      limitRef.current = false\n      设置覆盖率({})\n      setChartData(undefined)\n    }\n  }, [open, 日志, 总战斗用时])\n\n  const initChart = () => {\n    if (limitRef.current) {\n      return\n    }\n    limitRef.current = true\n\n    const chart = chartData\n      ? chartData\n      : new Chart({\n          container: 'cycle-buff-count-chart',\n          autoFit: true,\n          renderer: 'canvas',\n          padding: [24, 120, 100, 120],\n        })\n\n    chart.tooltip({\n      crosshairs: false,\n    })\n\n    if (!chartData) {\n      setChartData(chart)\n    }\n\n    const dataSource = getDataSource()\n\n    chart.source(dataSource, {\n      time: {\n        tickCount: 10,\n      },\n    })\n    chart.axis('time', {\n      label: {\n        style: {\n          textAlign: 'center', // 文本对齐方向，可取值为： start middle end\n          fontSize: 16, // 文本大小\n        },\n      },\n    })\n\n    const data = getDataSource()\n\n    chart.data(data)\n    chart.coordinate().transpose()\n    chart.interval().position('type*range').color('type').label('range', { offset: 10 })\n    // .color(DOMAIN_COLOR)\n    chart.render()\n    // setLoading(false)\n\n    setTimeout(() => {\n      limitRef.current = false\n    }, 10)\n  }\n\n  const getDataSource = () => {\n    const { Buff枚举, 覆盖率 } = 获取Buff覆盖率(日志, 总战斗用时)\n    设置覆盖率(覆盖率)\n    return 格式化buff覆盖数组(Buff枚举)\n  }\n\n  return (\n    <Modal\n      open={open}\n      onCancel={onCancel}\n      title={\n        <div className={'cycle-simulator-modal-header'}>\n          <h1 className={'cycle-simulator-modal-title'}>Buff覆盖情况（时间单位：帧）</h1>\n        </div>\n      }\n      width={'80%'}\n      centered\n      footer={false}\n    >\n      <Space className='cycle-buff-count-text' size={[16, 16]} wrap>\n        {Object.keys(覆盖率).map((item) => {\n          return (\n            <div key={item} className={'cycle-buff-count-text-wrap'}>\n              <span className='cycle-buff-count-text-label'>{item}：</span>\n              <span className='cycle-buff-count-text-value'>{覆盖率[item]}%</span>\n            </div>\n          )\n        })}\n      </Space>\n      {open ? <div id='cycle-buff-count-chart' className={'cycle-buff-count-chart'} /> : null}\n    </Modal>\n  )\n}\n\nexport default BuffCountModal\n","import React, { useState } from 'react'\nimport { Alert, Tooltip } from 'antd'\nimport { PieChartOutlined, CalendarOutlined, AlignLeftOutlined } from '@ant-design/icons'\nimport { 当前计算结果类型 } from '@/@types/输出'\n\nimport { 循环日志数据类型, 模拟信息类型 } from '../../../simulator/type'\n// import DpsResModal from './components/DpsResModal'\nimport BattleLogModal from './components/BattleLogModal'\nimport SkillCountModal from './components/SkillCountModal'\nimport BuffCountModal from './components/BuffCountModal'\nimport './index.css'\n\ninterface DpsResProps {\n  日志信息: 循环日志数据类型[]\n  模拟信息: 模拟信息类型\n  模拟DPS结果: 当前计算结果类型\n}\n\nfunction DpsRes(props: DpsResProps) {\n  const { 模拟信息, 日志信息, 模拟DPS结果 } = props\n\n  // dps曲线\n  // const [dpsModal, setDpsModal] = useState<boolean>(false)\n\n  // buff分析\n  const [buffCountModalOpen, setBuffCountModalOpen] = useState<boolean>(false)\n  // 日志log\n  const [logModalOpen, setLogModalOpen] = useState<boolean>(false)\n  // 技能统计\n  const [countModal, setCountModal] = useState<boolean>(false)\n\n  // const 开发中 = () => {\n  //   message.success('功能开发中，敬请期待')\n  // }\n\n  return (\n    <div\n      className={`cycle-bar-dps-res ${\n        模拟信息?.循环执行结果 === '异常' ? 'cycle-bar-dps-res-error' : ''\n      }`}\n    >\n      {模拟信息?.循环执行结果 === '异常' ? (\n        <div className={'cycle-dps-res-error'}>\n          <h1 className={'cycle-dps-res-error-title'}>循环异常</h1>\n          <Alert\n            type='error'\n            showIcon\n            message={`异常信息：${模拟信息?.循环异常信息?.异常信息?.信息}`}\n          />\n        </div>\n      ) : 模拟DPS结果?.秒伤 ? (\n        <div className={'cycle-dps-res-success'}>\n          <div className={'cycle-dps-res-success-content'}>\n            <h1 className={'cycle-dps-res-num'}>{模拟DPS结果?.秒伤}</h1>\n            <div className={'cycle-dps-res-success-text-content'}>\n              <div>\n                <span className={'cycle-dps-res-success-text'}>战斗用时</span>\n                <span className={'cycle-dps-res-success-text cycle-dps-res-success-highlight'}>\n                  {模拟DPS结果?.秒伤计算时间}秒\n                </span>\n              </div>\n              <div className={'cycle-dps-res-icons'}>\n                <Tooltip title='Buff分析' placement='left'>\n                  <PieChartOutlined\n                    className={'cycle-dps-res-icon'}\n                    onClick={() => setBuffCountModalOpen(true)}\n                  />\n                </Tooltip>\n                <Tooltip title='战斗日志' placement='left'>\n                  <CalendarOutlined\n                    className={'cycle-dps-res-icon'}\n                    onClick={() => setLogModalOpen(true)}\n                  />\n                </Tooltip>\n                <Tooltip title='技能统计' placement='left'>\n                  <AlignLeftOutlined\n                    className={'cycle-dps-res-icon'}\n                    onClick={() => setCountModal(true)}\n                  />\n                </Tooltip>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : null}\n      {/* dps结果 */}\n      {/* <DpsResModal open={dpsModal} onCancel={() => setDpsModal(false)} logData={日志信息} /> */}\n      {/* 战斗日志 */}\n      <BattleLogModal\n        open={logModalOpen}\n        onCancel={() => setLogModalOpen(false)}\n        logData={日志信息}\n      />\n      {/* 技能统计 */}\n      <SkillCountModal\n        open={countModal}\n        onCancel={() => setCountModal(false)}\n        dpsList={模拟DPS结果?.计算结果技能列表}\n        total={模拟DPS结果?.总伤}\n      />\n      {/* Buff分析 */}\n      {buffCountModalOpen && (\n        <BuffCountModal\n          open={buffCountModalOpen}\n          onCancel={() => setBuffCountModalOpen(false)}\n          日志={日志信息}\n          总战斗用时={模拟信息?.当前时间}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default DpsRes\n","// 当前角色状态栏，只用来展示\nimport React from 'react'\nimport { 当前计算结果类型 } from '@/@types/输出'\nimport { 循环日志数据类型, ShowCycleSingleSkill, 模拟信息类型 } from '../../simulator/type'\n\nimport Ruiyi from './ruiyi'\nimport Buff from './buff'\nimport DpsRes from './dpsRes'\nimport './index.css'\n\ninterface StatusBarProps {\n  模拟信息: 模拟信息类型\n  完整循环: ShowCycleSingleSkill[]\n  日志信息: 循环日志数据类型[]\n  模拟DPS结果: 当前计算结果类型\n}\n\nfunction StatusBar(props: StatusBarProps) {\n  const { 模拟信息, 日志信息, 模拟DPS结果 } = props\n\n  return (\n    <div className={'cycle-status-bar'}>\n      <Ruiyi 角色状态信息={模拟信息?.角色状态信息} />\n      <Buff\n        title='自身Buff'\n        buff列表={模拟信息?.当前自身buff列表}\n        当前时间点={模拟信息?.当前时间}\n      />\n      <Buff\n        title='目标Buff'\n        buff列表={模拟信息?.当前目标buff列表}\n        DOT列表={模拟信息?.当前DOT运行状态}\n        当前时间点={模拟信息?.当前时间}\n      />\n      <DpsRes 模拟信息={模拟信息} 日志信息={日志信息} 模拟DPS结果={模拟DPS结果} />\n    </div>\n  )\n}\n\nexport default StatusBar\n","import React from 'react'\nimport { 原始Buff数据 } from '../../constant/skill'\n\nfunction BuffItem({ data, ...rest }) {\n  const buff = 原始Buff数据?.[data]\n  return buff ? <img src={buff.图标} {...rest} /> : null\n}\n\nexport default BuffItem\n","// 技能循环显示技能单元\nimport React, { useMemo } from 'react'\nimport { Badge, Dropdown, Space, Tooltip } from 'antd'\nimport { CloseCircleFilled } from '@ant-design/icons'\nimport classNames from 'classnames'\nimport { ShowCycleSingleSkill, 模拟信息类型 } from '../../simulator/type'\nimport { 每秒郭氏帧 } from '@/数据/常量'\nimport BuffItem from './BuffItem'\nimport './index.css'\ninterface CycleSkillItemProps {\n  技能: ShowCycleSingleSkill\n  删除循环技能: (e: number) => void\n  模拟信息: 模拟信息类型\n  buff覆盖数据: number[]\n  更新buff覆盖数据: (e: number[]) => void\n  点击下拉菜单: (e: any) => void\n}\n\nfunction CycleSkillItem(props: CycleSkillItemProps) {\n  const { 技能, 删除循环技能, 模拟信息, buff覆盖数据, 更新buff覆盖数据, 点击下拉菜单 } = props\n\n  const 技能释放时间 = Math.round(((技能.实际释放时间 || 0) / 每秒郭氏帧) * 100) / 100\n  const 间隔CD = (技能.实际释放时间 || 0) - (技能.计划释放时间 || 0)\n  // 把帧转成秒，保留两位小数\n  const 剩余秒 = Math.round((间隔CD / 每秒郭氏帧) * 100) / 100\n  // 是否异常\n  // 存在异常索引\n  const 索引 = (模拟信息?.循环异常信息?.异常索引 || 0) + -1\n  const 是否异常 = 模拟信息?.循环执行结果 === '异常' ? (技能?.index || 0) >= 索引 : false\n  const 当前异常 = 模拟信息?.循环执行结果 === '异常' ? (技能?.index || 0) === 索引 : false\n\n  const 技能释放结果 = 技能?.技能释放记录结果 || {}\n\n  const 判断有无重要buff标记 = () => {\n    if (技能释放结果?.造成buff数据?.buff名称) {\n      更新buff覆盖数据([\n        技能释放结果?.造成buff数据?.buff开始时间,\n        技能释放结果?.造成buff数据?.buff结束时间,\n      ])\n    }\n  }\n\n  const 卸除重要buff标记 = () => {\n    更新buff覆盖数据([])\n  }\n\n  const 当前是否需要高亮展示在buff覆盖中 = useMemo(() => {\n    if (\n      (技能?.实际释放时间 || 0) <= buff覆盖数据?.[1] &&\n      (技能?.实际释放时间 || 0) >= buff覆盖数据?.[0]\n    ) {\n      return true\n    } else {\n      return false\n    }\n  }, [buff覆盖数据, 技能])\n\n  const cls = classNames(\n    'cycle-simulator-setting-skill',\n    是否异常 ? 'cycle-simulator-setting-skill-error' : '',\n    当前是否需要高亮展示在buff覆盖中 ? 'cycle-simulator-setting-skill-highlight' : ''\n  )\n\n  const 下拉菜单 = [\n    {\n      key: '前部插入',\n      label: (\n        <span>\n          在<span className='cycle-simulator-menu-tip-before'>前部</span>添加技能\n        </span>\n      ),\n    },\n    {\n      key: '后部插入',\n      label: (\n        <span>\n          在<span className='cycle-simulator-menu-tip-after'>后部</span>添加技能\n        </span>\n      ),\n    },\n  ]\n\n  return (\n    <Badge count={剩余秒} offset={[-52, 8]} className={'cycle-simulator-setting-skill-drag'}>\n      <Dropdown menu={{ items: 下拉菜单, onClick: 点击下拉菜单 }} trigger={['contextMenu']}>\n        <div className={cls} onMouseEnter={判断有无重要buff标记} onMouseLeave={卸除重要buff标记}>\n          <Tooltip\n            title={\n              <div>\n                <p>{技能?.技能名称}</p>\n                {技能释放结果.实际伤害技能 ? <p>伤害名称：{技能释放结果.实际伤害技能}</p> : null}\n                {技能释放时间 ? <p>释放时间：{技能释放时间}秒</p> : null}\n                {剩余秒 ? <p>释放等待CD：{剩余秒}秒</p> : null}\n                {技能释放结果?.重要buff列表?.length ? (\n                  <Space className={'cycle-simulator-setting-buff'} size={[8, 8]} wrap>\n                    {技能释放结果?.重要buff列表.map((item) => {\n                      return (\n                        <BuffItem\n                          data={item}\n                          key={item}\n                          className={'cycle-simulator-setting-buff-item'}\n                        />\n                      )\n                    })}\n                  </Space>\n                ) : null}\n                {是否异常 ? (\n                  当前异常 ? (\n                    <p>异常：{模拟信息?.循环异常信息?.异常信息?.信息}</p>\n                  ) : (\n                    <p>前置技能异常</p>\n                  )\n                ) : null}\n              </div>\n            }\n          >\n            <img className={'daozong-cycle-simulator-setting-skill-img'} src={技能?.图标} />\n          </Tooltip>\n          <CloseCircleFilled\n            className={'cycle-simulator-setting-skill-close'}\n            onClick={() => 删除循环技能(技能?.index || 0)}\n          />\n          {技能释放结果?.伤害段数 ? (\n            <span className={`cycle-simulator-setting-skill-count count${技能释放结果?.伤害段数}`}>\n              {技能释放结果?.伤害段数}\n            </span>\n          ) : null}\n        </div>\n      </Dropdown>\n    </Badge>\n  )\n}\n\nexport default CycleSkillItem\n","import React, { useMemo } from 'react'\nimport { 循环基础技能数据类型, 技能GCD组, 模拟信息类型 } from '../../simulator/type'\nimport { 每秒郭氏帧 } from '@/数据/常量'\nimport classNames from 'classnames'\nimport { Badge, Tooltip } from 'antd'\nimport { ERROR_ACTION } from '../../simulator/utils'\n\ninterface AddCycleSkillBtnProps {\n  技能: 循环基础技能数据类型\n  完整循环: 循环基础技能数据类型[]\n  onClick?: any\n  className?: string\n  模拟信息: 模拟信息类型\n  style?: any\n}\n\ninterface 异常信息数据 {\n  是否禁用?: boolean\n  角标数字?: number\n  异常描述?: string\n}\n\n// 添加循环技能按钮组件\nconst AddCycleSkillBtn: React.FC<AddCycleSkillBtnProps> = (props) => {\n  const { 技能, 模拟信息, onClick, className, ...rest } = props\n\n  const 释放等待CD = 计算可以释放时技能CD(模拟信息, 技能)\n  const 技能当前层数 = 计算技能当前层数(模拟信息, 技能)\n\n  const 异常信息: 异常信息数据 = useMemo(() => {\n    let 禁用信息 = {}\n    if (技能?.技能名称 === '行云势·一' && !!模拟信息?.当前自身buff列表?.['行链']?.当前层数) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.BUFF错误?.信息,\n      }\n    } else if (\n      技能?.技能名称 === '行云势·二' &&\n      模拟信息?.当前自身buff列表?.['行链']?.当前层数 !== 1\n    ) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.BUFF错误?.信息,\n      }\n    } else if (\n      技能?.技能名称 === '行云势·三' &&\n      模拟信息?.当前自身buff列表?.['行链']?.当前层数 !== 2\n    ) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.BUFF错误?.信息,\n      }\n    } else if (技能?.技能名称 === '决云势·二' && !模拟信息?.当前自身buff列表?.['决链']?.当前层数) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.BUFF错误?.信息,\n      }\n    } else if (技能?.技能名称 === '横云势·二' && !模拟信息?.当前自身buff列表?.['横链']?.当前层数) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.BUFF错误?.信息,\n      }\n    } else if (技能?.消耗锐意 && (模拟信息?.角色状态信息?.锐意 || 0) < 技能?.消耗锐意) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.锐意不足?.信息,\n      }\n    }\n    if (释放等待CD > 0 && 技能?.最大充能层数 && 技能?.最大充能层数 > 1) {\n      return {\n        ...禁用信息,\n        角标数字: 释放等待CD,\n        异常描述: `当前技能处于充能中，剩余${释放等待CD}秒`,\n      }\n    } else if (释放等待CD > 0) {\n      return {\n        ...禁用信息,\n        角标数字: 释放等待CD,\n        异常描述: `当前技能处于冷却中，剩余${释放等待CD}秒`,\n      }\n    } else {\n      return { ...禁用信息 }\n    }\n  }, [释放等待CD, 技能, 模拟信息])\n\n  // 点击前判断是否可以释放\n  const beforeOnClick = () => {\n    if (异常信息?.是否禁用) {\n      return\n    }\n    onClick()\n  }\n\n  const cls = classNames(className, 异常信息?.是否禁用 ? 'cycle-simulator-setting-btn-error' : '')\n\n  return (\n    <div onClick={beforeOnClick} className={cls} {...rest}>\n      <Tooltip title={异常信息?.异常描述 || 技能?.说明 || ''}>\n        <Badge count={异常信息?.角标数字} className={'cycle-add-btn-wrap'} offset={[0, 0]}>\n          <img className={`cycle-add-btn`} src={技能?.图标} />\n          {技能?.最大充能层数 && 技能?.最大充能层数 !== 1 ? (\n            <span className={'cycle-add-btn-count'}>{技能当前层数}</span>\n          ) : null}\n        </Badge>\n      </Tooltip>\n      <p className={'cycle-add-btn-text'}>{技能?.技能原始名称 || 技能?.技能名称}</p>\n    </div>\n  )\n}\n\nexport default AddCycleSkillBtn\nconst 计算可以释放时技能CD = (模拟信息: 模拟信息类型, 技能: 循环基础技能数据类型) => {\n  const 技能运行状态 = 模拟信息?.当前各技能运行状态?.[技能?.技能名称]\n  const 待充能时间点 = 技能运行状态?.待充能时间点\n\n  if (待充能时间点?.length) {\n    const GCD = 检查GCD(技能, 模拟信息.当前GCD组)\n    // 当前技能可以释放时间当前时间（为上一个技能释放结束时间）加上本技能释放前结算GCD\n    const 可以释放时间 = (模拟信息?.当前时间 || 0) + (GCD || 0)\n    const 下次预估释放时间 = 待充能时间点?.[0]\n    if (下次预估释放时间 > 可以释放时间) {\n      const 技能CD = 下次预估释放时间 - 可以释放时间\n      // 把帧转成秒，保留两位小数\n      const 剩余秒 = Math.round((技能CD / 每秒郭氏帧) * 100) / 100\n      return 剩余秒\n    } else {\n      return 0\n    }\n  } else {\n    return 0\n  }\n}\n\nconst 计算技能当前层数 = (模拟信息: 模拟信息类型, 技能: 循环基础技能数据类型) => {\n  const 技能运行状态 = 模拟信息?.当前各技能运行状态?.[技能?.技能名称]\n  return (技能?.最大充能层数 || 1) - (技能运行状态?.待充能时间点?.length || 0)\n}\n\nconst 检查GCD = (技能: 循环基础技能数据类型, GCD组: 技能GCD组) => {\n  let 校验GCD组: string = 技能.技能GCD组 as string\n  if (技能.技能GCD组 === '自身') {\n    校验GCD组 = 技能?.技能名称\n  }\n  if (校验GCD组) {\n    // 大部分技能只检查自己的GCD\n    const GCD = GCD组[校验GCD组]\n    return GCD\n  } else {\n    return 0\n  }\n}\n","export const 快捷添加数据: 快捷添加数据类型[] = [\n  {\n    名称: '横留横',\n    技能序列: ['横云势·一', '留客雨', '横云势·二'],\n    color: 'blue',\n  },\n  {\n    名称: '决留决',\n    技能序列: ['决云势·一', '留客雨', '决云势·二'],\n    color: 'red',\n  },\n  {\n    名称: '行行行',\n    技能序列: ['行云势·一', '行云势·二', '行云势·三'],\n    color: 'magenta',\n  },\n  {\n    名称: '停留',\n    技能序列: ['停云势', '留客雨'],\n    color: 'purple',\n  },\n]\n\nexport interface 快捷添加数据类型 {\n  名称: string\n  技能序列: string[]\n  color?: string\n}\n","import { Col, Radio, Row, Space, Tag, Tooltip } from 'antd'\nimport React from 'react'\nimport { 循环基础技能数据类型, 模拟信息类型 } from '../../simulator/type'\nimport AddCycleSkillBtn from './AddCycleSkillBtn'\nimport { 快捷添加数据, 快捷添加数据类型 } from './快捷添加'\nimport './index.css'\n\ninterface AddCycleSkillBtnsProps {\n  新增循环技能: (data: 循环基础技能数据类型) => void\n  批量新增循环: (data: 循环基础技能数据类型[]) => void\n  处理循环结果对象: { 完整循环: 循环基础技能数据类型[] }\n  模拟信息: 模拟信息类型\n  大橙武模拟: boolean\n  开启武学助手?: boolean\n  设置开启武学助手?: (e: boolean) => void\n}\n\nfunction AddCycleSkillBtns(props: AddCycleSkillBtnsProps) {\n  const { 新增循环技能, 批量新增循环, 处理循环结果对象, 模拟信息, 开启武学助手, 设置开启武学助手 } =\n    props\n\n  const 批量新增循环技能 = (数据: 快捷添加数据类型) => {\n    const 技能原始数据: 循环基础技能数据类型[] = 数据?.技能序列\n      .map((item) => {\n        return 模拟信息?.技能基础数据?.find((a) => a.技能名称 === item) || ({} as any)\n      })\n      .filter((item) => item)\n    if (技能原始数据?.length) {\n      批量新增循环(技能原始数据)\n    }\n  }\n\n  return (\n    <div className={'cycle-simulator-setting-btns'}>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'daozong-cycle-btn-type'}>傍身技能</span>\n        <Space className={'cycle-simulator-setting-skills'} size={[8, 16]} wrap>\n          {模拟信息?.技能基础数据\n            ?.filter((item) => !item?.创建循环不可选 && item?.技能类型 === '傍身')\n            .map((item) => {\n              return (\n                <AddCycleSkillBtn\n                  onClick={() => 新增循环技能(item)}\n                  key={item?.技能名称}\n                  className={'daozong-cycle-simulator-setting-btn'}\n                  完整循环={处理循环结果对象?.完整循环 || []}\n                  技能={item}\n                  模拟信息={模拟信息}\n                />\n              )\n            })}\n        </Space>\n      </div>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'daozong-cycle-btn-type'}>对阵技能</span>\n        <Space className={'cycle-simulator-setting-skills'} size={[8, 16]} wrap>\n          {模拟信息?.技能基础数据\n            ?.filter((item) => !item?.创建循环不可选 && item?.技能类型 === '对阵')\n            .map((item) => {\n              return (\n                <AddCycleSkillBtn\n                  onClick={() => 新增循环技能(item)}\n                  key={item?.技能名称}\n                  className={'daozong-cycle-simulator-setting-btn'}\n                  完整循环={处理循环结果对象?.完整循环 || []}\n                  技能={item}\n                  模拟信息={模拟信息}\n                />\n              )\n            })}\n        </Space>\n      </div>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'daozong-cycle-btn-type'}>绝技技能</span>\n        <Space className={'cycle-simulator-setting-skills'} size={[8, 16]} wrap>\n          {模拟信息?.技能基础数据\n            ?.filter((item) => !item?.创建循环不可选 && item?.技能类型 === '绝技')\n            .map((item) => {\n              return (\n                <AddCycleSkillBtn\n                  onClick={() => 新增循环技能(item)}\n                  key={item?.技能名称}\n                  className={'daozong-cycle-simulator-setting-btn'}\n                  完整循环={处理循环结果对象?.完整循环 || []}\n                  技能={item}\n                  模拟信息={模拟信息}\n                />\n              )\n            })}\n        </Space>\n      </div>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'daozong-cycle-btn-type'}>快捷添加</span>\n        <Row className={'cycle-simulator-setting-quick'} style={{ width: 200 }} gutter={[16, 8]}>\n          {快捷添加数据.map((item) => {\n            return (\n              <Col span={12} key={item?.名称}>\n                <Tag\n                  color={item?.color || 'blue'}\n                  onClick={() => 批量新增循环技能(item)}\n                  className={'cycle-simulator-setting-quick-item'}\n                >\n                  {item?.名称}\n                </Tag>\n              </Col>\n            )\n          })}\n        </Row>\n      </div>\n      {设置开启武学助手 ? (\n        <div className={'cycle-simulator-radio-item'}>\n          <p className={'cycle-simulator-radio-item-title'}>武学助手模式</p>\n          <Tooltip\n            title={\n              <div>\n                <p>由于现在武学助手完全没有规律</p>\n                <p>各种Bug包括但不限于</p>\n                <p>1、异常跳过技能不按顺序释放</p>\n                <p>2、相同武学助手打出不同效果</p>\n                <p>所以暂时不放开武学助手的顺序编辑功能，等待后续机制修改和研究明白再放出。</p>\n                <p style={{ fontWeight: 500 }}>\n                  目前经过欧测试，武学助手自带-1段加速，开启后将增加1帧延迟\n                </p>\n              </div>\n            }\n          >\n            <Radio.Group\n              value={开启武学助手}\n              onChange={(e) => 设置开启武学助手?.(e?.target?.value)}\n              size='small'\n              optionType='button'\n              buttonStyle='solid'\n              // disabled\n            >\n              <Radio value={true}>开启</Radio>\n              <Radio value={false}>关闭</Radio>\n            </Radio.Group>\n          </Tooltip>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default AddCycleSkillBtns\n","import { Alert, App, Checkbox, Form, Input, Modal, Select, Tabs } from 'antd'\nimport React, { useEffect, useMemo, useState } from 'react'\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport { 更新当前自定义循环列表 } from '@/store/data'\nimport './index.css'\nimport { 延迟设定 } from '@/数据/常量'\n\nconst { 计算循环 } = 获取当前数据()\n\ninterface SaveCustomCycleModalProps {\n  自定义循环保存弹窗: boolean\n  设置自定义循环保存弹窗: (e: boolean) => void\n  保存自定义循环: (名称, 加速选项, 延迟选项) => void\n}\n\nfunction SaveCustomCycleModal(props: SaveCustomCycleModalProps) {\n  const { modal } = App.useApp()\n\n  const { 自定义循环保存弹窗, 设置自定义循环保存弹窗, 保存自定义循环 } = props\n  // 保存类型，覆盖｜新增\n  const [自定义循环类型, 设置自定义循环类型] = useState<string>()\n  // 自定义循环名称保存输入\n  const [自定义循环名称输入, 设置自定义循环名称输入] = useState<string>()\n  // 保存类型，覆盖｜新增\n  const [覆盖循环名, 设置覆盖循环名] = useState<string>()\n  // 保存加速序列\n  const [加速选项, 设置加速选项] = useState<number[]>([0, 1, 2])\n  const [延迟选项, 设置延迟选项] = useState<number[]>([0, 1, 2])\n\n  const 自定义循环 = useAppSelector((state) => state?.data?.自定义循环列表)\n\n  const dispatch = useAppDispatch()\n\n  const 全部循环 = useMemo(() => {\n    return (计算循环 || []).concat(自定义循环)\n  }, [自定义循环, 计算循环])\n\n  useEffect(() => {\n    if (自定义循环保存弹窗) {\n      if (自定义循环?.length) {\n        设置自定义循环类型('覆盖')\n      } else {\n        设置自定义循环类型('新增')\n      }\n    } else {\n      设置自定义循环类型(undefined)\n      设置自定义循环名称输入(undefined)\n      设置覆盖循环名(undefined)\n    }\n  }, [自定义循环保存弹窗, 自定义循环])\n\n  const 保存自定义循环前 = () => {\n    const 名称 = 自定义循环类型 === '覆盖' ? 覆盖循环名 : 自定义循环名称输入\n    保存自定义循环(名称, 加速选项, 延迟选项)\n  }\n\n  // 删除自定义循环\n  const 删除循环前提示 = (e, 名称) => {\n    e.stopPropagation()\n    e.preventDefault()\n\n    modal.confirm({\n      title: `确定要删除循环【${名称}】吗?`,\n      content: '删除后将无法恢复',\n      okText: '我要删除',\n      onOk: async () => {\n        删除循环(名称)\n      },\n    })\n  }\n\n  const 删除循环 = (名称) => {\n    dispatch(更新当前自定义循环列表(自定义循环.filter((item) => item.名称 !== 名称)))\n  }\n\n  return (\n    <Modal\n      centered\n      title='保存自定义循环'\n      okButtonProps={{\n        disabled: !(自定义循环类型 === '覆盖' ? 覆盖循环名 : 自定义循环名称输入),\n      }}\n      open={自定义循环保存弹窗}\n      onCancel={() => 设置自定义循环保存弹窗(false)}\n      onOk={保存自定义循环前}\n      width={630}\n      destroyOnClose\n      className={'cycle-custom-save-modal'}\n    >\n      <Tabs\n        className={'cycle-custom-save-modal-content'}\n        type='card'\n        activeKey={自定义循环类型}\n        onChange={设置自定义循环类型}\n      >\n        <Tabs.TabPane tab={'覆盖'} key='覆盖'>\n          <Select\n            value={覆盖循环名}\n            onChange={设置覆盖循环名}\n            optionLabelProp='label'\n            placeholder={'请选择你要覆盖的循环'}\n          >\n            {自定义循环.map((item) => {\n              return (\n                <Select.Option value={item.名称} key={item.名称} label={item.名称}>\n                  <div className={'cycle-custom-save-label'}>\n                    <span>{item.名称}</span>\n                    <span\n                      onClick={(e) => 删除循环前提示(e, item.名称)}\n                      className={'cycle-custom-save-delete'}\n                    >\n                      删除\n                    </span>\n                  </div>\n                </Select.Option>\n              )\n            })}\n          </Select>\n        </Tabs.TabPane>\n        <Tabs.TabPane tab={'新增'} key='新增'>\n          <Form>\n            <Form.Item\n              rules={[\n                {\n                  validator: (_, value, callback) => {\n                    if (value) {\n                      if (全部循环?.some((item) => item?.名称 === value)) {\n                        callback('已存在相同的循环名，请更换')\n                      }\n                    }\n                    callback()\n                  },\n                },\n              ]}\n            >\n              <Input\n                value={自定义循环名称输入}\n                placeholder='请输入自定义循环名称'\n                onChange={(e) => 设置自定义循环名称输入(e?.target?.value)}\n              />\n            </Form.Item>\n          </Form>\n        </Tabs.TabPane>\n      </Tabs>\n      <div className='cycle-custom-save-checkbox'>\n        <p>加速</p>\n        <Checkbox.Group value={加速选项} onChange={(e) => 设置加速选项(e as number[])}>\n          {Array.from({ length: 6 }, (v, i) => i).map((a) => {\n            return (\n              <Checkbox value={a} key={a}>\n                {a}段\n              </Checkbox>\n            )\n          })}\n        </Checkbox.Group>\n        <p>延迟</p>\n        <Checkbox.Group value={延迟选项} onChange={(e) => 设置延迟选项(e as number[])}>\n          {延迟设定.map((item) => {\n            return (\n              <Checkbox value={item.value} key={item.value}>\n                {item.label}\n              </Checkbox>\n            )\n          })}\n        </Checkbox.Group>\n      </div>\n      <Alert message={'选项越少保存越快。没选择的选项在外部计算dps时不会进行计算。'} />\n    </Modal>\n  )\n}\n\nexport default SaveCustomCycleModal\n","/**\n * 无界武学助手技能释放序列\n */\nimport React from 'react'\n\nfunction AutoSkillListContent() {\n  return <div />\n}\n\nexport default AutoSkillListContent\n","import { Drawer } from 'antd'\nimport React from 'react'\nimport { 循环基础技能数据类型, 模拟信息类型 } from '../../simulator/type'\nimport AddCycleSkillBtns from '../AddCycleSkillBtns'\n\ninterface AddCycleSkillModalProps {\n  向循环内插入技能: (data: 循环基础技能数据类型[], 插入位置: string, 插入索引: number) => void\n  处理循环结果对象: { 完整循环: 循环基础技能数据类型[] }\n  模拟信息: 模拟信息类型\n  大橙武模拟: boolean\n  奇穴信息: string[]\n  添加设置: { 位置: string; 索引 }\n  添加技能弹窗显示: boolean\n  关闭弹窗: () => void\n}\n\nfunction AddCycleSkillModal(props: AddCycleSkillModalProps) {\n  const {\n    向循环内插入技能,\n    处理循环结果对象,\n    模拟信息,\n    大橙武模拟,\n    添加设置,\n    添加技能弹窗显示,\n    关闭弹窗,\n  } = props\n\n  const 新增循环技能 = (item: 循环基础技能数据类型) => {\n    向循环内插入技能([item], 添加设置?.位置, 添加设置?.索引)\n  }\n\n  const 批量新增循环 = (item: 循环基础技能数据类型[]) => {\n    向循环内插入技能(item, 添加设置?.位置, 添加设置?.索引)\n  }\n\n  return (\n    <Drawer\n      title='插入技能'\n      placement='bottom'\n      open={添加技能弹窗显示}\n      onClose={关闭弹窗}\n      height={180}\n    >\n      <AddCycleSkillBtns\n        新增循环技能={新增循环技能}\n        批量新增循环={批量新增循环}\n        处理循环结果对象={处理循环结果对象}\n        模拟信息={模拟信息}\n        大橙武模拟={大橙武模拟}\n      />\n    </Drawer>\n  )\n}\n\nexport default AddCycleSkillModal\n","// 循环模拟器\nimport React, { useEffect, useMemo, useState } from 'react'\nimport { App, Button, Modal, Tooltip, message } from 'antd'\nimport { ReactSortable } from 'react-sortablejs'\n\nimport { CopyOutlined, DeleteOutlined, AlertOutlined } from '@ant-design/icons'\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport { 每秒郭氏帧 } from '@/数据/常量'\n\nimport 循环模拟技能基础数据 from './constant/skill'\n\nimport { getDpsCycle } from './utils'\nimport {\n  循环日志数据类型,\n  循环基础技能数据类型,\n  ShowCycleSingleSkill,\n  模拟信息类型,\n} from './simulator/type'\n\nimport 模拟循环 from './simulator/index'\n\nimport CycleModalHeader from './components/CycleModalHeader'\nimport StatusBar from './components/StatusBar'\nimport CycleSkillItem from './components/CycleSkillItem'\nimport AddCycleSkillBtns from './components/AddCycleSkillBtns'\nimport SaveCustomCycleModal from './components/SaveCustomCycleModal'\nimport { 循环详情 } from '@/@types/循环'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport './index.css'\nimport { 获取加速等级 } from '@/工具函数/data'\nimport { 秒伤计算 } from '@/计算模块/计算函数'\nimport { 当前计算结果类型 } from '@/@types/输出'\nimport { 更新当前自定义循环列表 } from '@/store/data'\nimport AutoSkillListContent from './components/AutoSkillListContent'\nimport AddCycleSkillModal from './components/AddCycleSkillModal'\n\nconst { 缓存映射 } = 获取当前数据()\n\nconst 加速等级枚举 = {\n  0: 0,\n  1: 206,\n  2: 14156,\n  3: 30158,\n  4: 48622,\n  5: 70163,\n}\n\ninterface CycleSimulatorProps {\n  打开循环模拟器?: () => void\n  disabled?: boolean\n}\n\nfunction CycleSimulator(props: CycleSimulatorProps) {\n  const { modal } = App.useApp()\n\n  const { 打开循环模拟器, disabled } = props\n  const [logData, setLogData] = useState<循环日志数据类型[]>([])\n\n  const [模拟DPS结果, 更新模拟DPS结果] = useState<当前计算结果类型>({\n    秒伤: 0,\n    总伤: 0,\n    秒伤计算时间: 0,\n    计算结果技能列表: [],\n  })\n\n  const [模拟信息, 更新模拟信息] = useState<模拟信息类型>({\n    角色状态信息: {\n      锐意: 60,\n    },\n    当前时间: 0,\n    当前自身buff列表: {},\n    当前目标buff列表: {},\n    循环执行结果: '成功',\n    循环异常信息: {},\n    技能基础数据: [...循环模拟技能基础数据],\n    技能释放记录: [],\n    当前各技能运行状态: {},\n    当前DOT运行状态: {},\n    当前GCD组: {},\n  })\n\n  // 基础弹窗\n  const [basicModalOpen, setBasicModalOpen] = useState<boolean>(false)\n  // 循环\n  const [cycle, setCycle] = useState<循环基础技能数据类型[]>([])\n  const [自定义循环保存弹窗, 设置自定义循环保存弹窗] = useState<boolean>(false)\n  // 当前面板加速值\n  const 外部加速值 = useAppSelector((state) => state?.data?.装备信息?.装备基础属性)?.加速等级 || 0\n  const 大橙武模拟 =\n    !!useAppSelector((state) => state?.data?.装备信息?.装备增益)?.大橙武特效 || false\n  const [加速等级, 更新加速等级] = useState<number>(0)\n  const 外部延迟 = useAppSelector((state) => state?.data?.网络延迟) || 0\n  const [网络延迟, 更新网络延迟] = useState<number>(0)\n  // 自定义循环\n  const 自定义循环列表 = useAppSelector((state) => state?.data?.自定义循环列表)\n  // 是否开启武学助手\n  const [开启武学助手, 设置开启武学助手] = useState<boolean>(false)\n\n  const 加速值 = useMemo(() => {\n    return 加速等级枚举[加速等级] || 0\n  }, [加速等级])\n\n  // 是否实时计算\n  const 是否实时计算 = true\n\n  const [起手留层数, 设置起手留层数] = useState<number>(3)\n\n  // 奇穴\n  const 奇穴信息 = useAppSelector((state) => state?.data?.当前奇穴信息)\n  // const [奇穴信息, 更新奇穴信息] = useState<string[]>([])\n  // const [奇穴弹窗展示, 更新奇穴弹窗展示] = useState<boolean>(false)\n\n  const [buff覆盖数据, 更新buff覆盖数据] = useState<number[]>([])\n\n  // 添加循环\n  const [添加技能弹窗显示, 更新添加技能弹窗显示] = useState<boolean>(false)\n  const [添加设置, 更新添加设置] = useState<{ 位置: string; 索引 }>({ 位置: '', 索引: 0 })\n\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (basicModalOpen) {\n      // 设置外面选择的默认奇穴信息\n      // 更新奇穴信息(reduxQixuedata)\n      更新加速等级(获取加速等级(外部加速值))\n      更新网络延迟(外部延迟)\n    } else {\n      setLogData([])\n      setBasicModalOpen(false)\n      setCycle([])\n      更新模拟DPS结果({ 秒伤: 0, 总伤: 0, 秒伤计算时间: 0, 计算结果技能列表: [] })\n    }\n  }, [basicModalOpen, 外部加速值, 外部延迟])\n\n  useEffect(() => {\n    if (是否实时计算 && basicModalOpen) {\n      simulator({})\n    }\n  }, [basicModalOpen, cycle, 是否实时计算, 起手留层数, 网络延迟, 加速值, 奇穴信息, 开启武学助手])\n\n  const simulator = (props?) => {\n    const { 传入加速 = 加速值, 传入延迟 = 网络延迟, 更新展示 = true, 奇穴 } = props\n    const res = 模拟循环({\n      测试循环: cycle.map((item) => item?.技能名称) || [],\n      加速值: 传入加速 !== undefined ? 传入加速 : 加速值,\n      网络延迟: 传入延迟 !== undefined ? 传入延迟 : 网络延迟,\n      奇穴: 奇穴 || 奇穴信息,\n      起手留层数,\n      大橙武模拟,\n      开启武学助手,\n    })\n\n    const {\n      最终日志,\n      当前自身buff列表: 处理后自身buff,\n      当前目标buff列表: 处理后目标buff,\n      角色状态信息: 处理后角色状态信息,\n      ...rest\n    } = res\n    if (更新展示) {\n      setLogData(最终日志)\n      计算dps(最终日志, rest?.当前时间)\n      更新模拟信息({\n        当前自身buff列表: 处理后自身buff,\n        当前目标buff列表: 处理后目标buff,\n        角色状态信息: 处理后角色状态信息,\n        ...rest,\n      })\n    }\n    return { 最终日志, ...rest }\n  }\n\n  // 计算DPS日志\n  const 计算dps = (data: 循环日志数据类型[], 战斗时间) => {\n    const 获取用于计算的技能组 = getDpsCycle(data, 战斗时间)\n    const { 秒伤, 计算结果技能列表, 秒伤计算时间, 总伤 } = dispatch(\n      秒伤计算({\n        更新循环技能列表: 获取用于计算的技能组,\n        更新计算时间: 战斗时间 / 每秒郭氏帧,\n        更新奇穴数据: 奇穴信息,\n      })\n    )\n    更新模拟DPS结果({\n      秒伤: 战斗时间 > 0 ? 秒伤 : 0,\n      总伤: 战斗时间 > 0 ? 总伤 : 0,\n      秒伤计算时间: 秒伤计算时间,\n      计算结果技能列表: 计算结果技能列表,\n    })\n  }\n\n  // 向循环内新增技能\n  const 新增循环技能 = (item: 循环基础技能数据类型) => {\n    const newCycle = [...(cycle || []), item]\n    setCycle(newCycle)\n  }\n\n  const 批量新增循环 = (item: 循环基础技能数据类型[]) => {\n    const newCycle = [...(cycle || []), ...item]\n    setCycle(newCycle)\n  }\n\n  // 从循环内删除技能\n  const 删除循环技能 = (index) => {\n    const newCycle = [...(cycle || [])]\n    newCycle.splice(index, 1)\n    setCycle(newCycle)\n  }\n\n  // 根据循环计算更适合展示的多层数组，用于显示\n  const 处理循环结果对象 = useMemo(() => {\n    const res: ShowCycleSingleSkill[][] = []\n    const 是否存在换行技能 = cycle?.find((item) => item?.技能名称 === '换行')\n\n    cycle.map((item, index) => {\n      const 找到当前技能释放记录 = 模拟信息?.技能释放记录?.[index]\n      const data = {\n        ...item,\n        ...找到当前技能释放记录,\n      }\n      if (index === 0) {\n        res[res?.length] = [{ ...data, index: index || 0 }]\n      } else {\n        res[res?.length - 1] = [...(res[res?.length - 1] || []), { ...data, index: index || 0 }]\n\n        const 打完本技能换行 = 是否存在换行技能\n          ? data?.技能名称 === '换行'\n          : data?.技能名称 === '横云势·二'\n\n        // const 打完本技能换行 = data?.技能名称 === '横云势二'\n\n        if (打完本技能换行) {\n          res[res?.length] = []\n        }\n      }\n      return data\n    })\n\n    return { 显示循环: res, 完整循环: cycle }\n  }, [cycle, 模拟信息])\n\n  const 向循环内插入技能 = (item: 循环基础技能数据类型[], 插入位置, 插入索引) => {\n    let newCycle: 循环基础技能数据类型[] = [...(cycle || [])]\n    let addCycle: 循环基础技能数据类型[] = []\n\n    if (插入位置 === '前部插入') {\n      // 在索引 2 前插入多个元素\n      addCycle = newCycle.slice(0, 插入索引).concat(item, newCycle.slice(插入索引))\n      更新添加设置({ ...添加设置, 索引: 添加设置.索引 + item.length })\n    } else {\n      // 在索引 2 后插入多个元素\n      addCycle = newCycle\n        .slice(0, 插入索引 + item.length)\n        .concat(item, newCycle.slice(插入索引 + item.length))\n    }\n\n    newCycle = [...addCycle]\n    setCycle(newCycle)\n  }\n\n  // 拖拽更新循环\n  const 拖拽更新循环 = (newList, type) => {\n    if (type == '轮次内') {\n      // 首先获取被替换轮次的第一个元素的index索引\n      const minIndex = newList.reduce(function (min, obj) {\n        return Math.min(min, obj.index)\n      }, Infinity)\n      // 获取最大的索引，判断拖拽生效范围\n      const maxIndex = newList.reduce(function (min, obj) {\n        return Math.max(min, obj.index)\n      }, Number.NEGATIVE_INFINITY)\n      // 将数组哪索引范围内跌元素替换为新的数组元素\n      const newCycle = cycle.map((item, index) => {\n        if (index < minIndex || index > maxIndex) {\n          return { ...item }\n        } else {\n          return newList[index - minIndex]\n        }\n      })\n      // 更新循环\n      setCycle(newCycle)\n    } else if (type === '整个轮次拖拽') {\n      const res: 循环基础技能数据类型[] = []\n      newList.forEach((item) => {\n        item.forEach((a) => {\n          if (a.技能名称) {\n            const 当前技能数据 = 模拟信息?.技能基础数据?.find((b) => b?.技能名称 === a.技能名称)\n            if (当前技能数据) {\n              res.push(当前技能数据)\n            }\n          }\n        })\n      })\n      setCycle(res)\n    }\n  }\n\n  // 复制本轮到最后\n  const 复制本轮至最后 = (轮次) => {\n    const newCycle = cycle.concat(轮次)\n    setCycle(newCycle)\n  }\n\n  // 删除本轮次\n  const 删除本轮次 = (轮次) => {\n    const minIndex = 轮次.reduce(function (min, obj) {\n      return Math.min(min, obj.index)\n    }, Infinity)\n    // 获取最大的索引，判断拖拽生效范围\n    const maxIndex = 轮次.reduce(function (min, obj) {\n      return Math.max(min, obj.index)\n    }, Number.NEGATIVE_INFINITY)\n    // 将数组哪索引范围内跌元素替换为新的数组元素\n    const newCycle = cycle.filter((item, index) => {\n      return index < minIndex || index > maxIndex\n    })\n    // 更新循环\n    setCycle(newCycle)\n  }\n\n  // 删除本轮后全部循环\n  const 删除本轮后全部循环 = (轮次) => {\n    modal.confirm({\n      title: '确认删除本轮后全部循环吗？',\n      onOk() {\n        // 获取最大的索引，判断生效范围\n        const maxIndex = 轮次.reduce(function (min, obj) {\n          return Math.max(min, obj.index)\n        }, Number.NEGATIVE_INFINITY)\n        // 将数组哪索引范围内跌元素替换为新的数组元素\n        const newCycle = cycle.filter((item, index) => {\n          return index <= maxIndex\n        })\n        // 更新循环\n        setCycle(newCycle)\n      },\n    })\n  }\n\n  // 确认保存自定义循环\n  const 确认保存循环 = (名称, 加速选项, 延迟选项) => {\n    // 获取各加速下 各网络延迟的循环\n    const 各延迟枚举 = 延迟选项?.length ? 延迟选项 : [0, 1, 2, 3]\n    const 各加速枚举 = 加速选项?.length ? 加速选项 : [0, 1, 2, 3, 4, 5]\n\n    const 保存循环结果: 循环详情[] = []\n\n    const 异常结果: any[] = []\n\n    各加速枚举.forEach((加速) => {\n      const 实际加速值 = 加速等级枚举[加速]\n      各延迟枚举.forEach((延迟) => {\n        // 保存循环数据的时候，把镇机和界破的数据一起保存，生成两套并存的数据，方便后续切换比较\n        const 模拟结果 = simulator({\n          传入加速: Number(实际加速值),\n          传入延迟: Number(延迟),\n          更新展示: false,\n          奇穴: [...奇穴信息],\n        })\n        const 本次日志 = 模拟结果?.最终日志\n        const 循环执行结果 = 模拟结果?.循环执行结果\n        // const 战斗时间 = 本次日志[本次日志.length - 1].日志时间 || 0\n        const 战斗秒 = 模拟结果?.当前时间 / 每秒郭氏帧\n        const 用于计算循环 = getDpsCycle(本次日志, 模拟结果?.当前时间)\n        if (循环执行结果 === '成功') {\n          保存循环结果.push({\n            循环加速等级: 加速,\n            循环延迟要求: 延迟,\n            战斗时间: 战斗秒,\n            技能详情: 用于计算循环,\n          })\n        } else {\n          异常结果.push({\n            加速,\n            延迟,\n          })\n        }\n      })\n    })\n\n    if (异常结果?.length) {\n      message.error(\n        `以下条件循环异常，将不会保存该加速的循环。异常循环：${异常结果\n          .map((item) => {\n            return `[加速：${item.加速}，延迟：${item.延迟}]`\n          })\n          .join('、')}`\n      )\n    }\n\n    const 技能序列 = cycle.map((item) => item.技能名称)\n\n    const 新自定义循环 = 自定义循环列表?.some((item) => item?.名称 === 名称)\n      ? 自定义循环列表.map((item) => {\n          return item.名称 === 名称\n            ? {\n                名称,\n                标题: 名称,\n                类型: '自定义',\n                标记: '自定义',\n                循环详情: 保存循环结果,\n                奇穴: 奇穴信息,\n                技能序列,\n              }\n            : item\n        })\n      : (自定义循环列表 || []).concat([\n          {\n            名称,\n            标题: 名称,\n            类型: '自定义',\n            标记: '自定义',\n            循环详情: 保存循环结果,\n            奇穴: 奇穴信息,\n            技能序列,\n          },\n        ])\n\n    dispatch(更新当前自定义循环列表(新自定义循环))\n\n    设置自定义循环保存弹窗(false)\n    message.success('保存成功')\n  }\n\n  useEffect(() => {\n    // redux变动，更新storage信息\n    const 保存信息 = {}\n    ;(自定义循环列表 || []).forEach((item) => {\n      保存信息[item.名称] = {\n        ...item,\n      }\n    })\n    localStorage?.setItem(缓存映射.自定义循环, JSON.stringify(保存信息))\n  }, [自定义循环列表, 奇穴信息])\n\n  const 点击下拉菜单 = (data, index) => {\n    更新添加设置({ 位置: data?.key, 索引: index })\n    更新添加技能弹窗显示(true)\n  }\n\n  return (\n    <>\n      <Button\n        danger\n        disabled={disabled}\n        size='small'\n        onClick={() => {\n          setBasicModalOpen(true)\n          打开循环模拟器 && 打开循环模拟器()\n        }}\n      >\n        循环模拟\n      </Button>\n      <Modal\n        className='cycle-simulator-modal'\n        maskClosable={false}\n        width={'100%'}\n        title={\n          <CycleModalHeader\n            cycle={cycle}\n            设置自定义循环保存弹窗={设置自定义循环保存弹窗}\n            清空循环={() => setCycle([])}\n            起手留层数={起手留层数}\n            设置起手留层数={设置起手留层数}\n            快速导入循环={(循环, 循环标记) => {\n              setCycle(循环)\n              设置开启武学助手(循环标记 === '助手')\n            }}\n            网络延迟={网络延迟}\n            更新网络延迟={更新网络延迟}\n            加速等级={加速等级}\n            更新加速等级={更新加速等级}\n            模拟信息={模拟信息}\n          />\n        }\n        centered\n        footer={null}\n        open={basicModalOpen}\n        onCancel={() => setBasicModalOpen(false)}\n        destroyOnClose\n      >\n        <div className={'cycle-simulator-setting'}>\n          {/* 角色状态栏 */}\n          <StatusBar\n            模拟信息={模拟信息}\n            完整循环={处理循环结果对象?.完整循环 as any}\n            日志信息={logData}\n            模拟DPS结果={模拟DPS结果}\n          />\n          {/* // 循环展示模块 */}\n          <div className={'cycle-simulator-setting-res'}>\n            {处理循环结果对象?.显示循环?.length ? (\n              (处理循环结果对象?.显示循环 || []).map((轮次, index) => {\n                return 轮次?.length ? (\n                  <div className={`cycle-simulator-setting-turn cycle-turn-drag`} key={`${index}`}>\n                    <ReactSortable\n                      list={轮次.map((i) =>\n                        Object.assign(i, { id: `${i?.技能名称}_${index}_${i?.index}` })\n                      )}\n                      setList={(e) => {\n                        拖拽更新循环(e, '轮次内')\n                      }}\n                      className='cycle-simulator-setting-turn-drop'\n                      animation={150}\n                      draggable={'.cycle-simulator-setting-skill-drag'}\n                    >\n                      {(轮次 || []).map((item) => {\n                        return (\n                          <CycleSkillItem\n                            技能={item}\n                            删除循环技能={删除循环技能}\n                            key={`${item?.技能名称}_${index}_${item?.index}`}\n                            模拟信息={模拟信息}\n                            buff覆盖数据={buff覆盖数据}\n                            更新buff覆盖数据={更新buff覆盖数据}\n                            点击下拉菜单={(e) => 点击下拉菜单(e, item?.index)}\n                          />\n                        )\n                      })}\n                      <div className={'cycle-turn-operate'}>\n                        <Tooltip title='删除本轮后全部循环'>\n                          <AlertOutlined\n                            className={'cycle-turn-operate-btn'}\n                            style={{ color: '#FF0000' }}\n                            onClick={() => 删除本轮后全部循环(轮次)}\n                          />\n                        </Tooltip>\n                        <Tooltip title='复制并添加到最后'>\n                          <CopyOutlined\n                            className={'cycle-turn-operate-btn'}\n                            onClick={() => 复制本轮至最后(轮次)}\n                          />\n                        </Tooltip>\n                        <Tooltip title='删除此轮'>\n                          <DeleteOutlined\n                            className={'cycle-turn-operate-btn'}\n                            onClick={() => 删除本轮次(轮次)}\n                          />\n                        </Tooltip>\n                      </div>\n                    </ReactSortable>\n                  </div>\n                ) : (\n                  <div />\n                )\n              })\n            ) : (\n              <p className={'cycle-simulator-setting-tip'}>请点击下方技能按钮生成模拟技能序列</p>\n            )}\n          </div>\n        </div>\n        {/* 武学助手技能框 */}\n        <AutoSkillListContent />\n        {/* 添加循环按钮组 */}\n        <AddCycleSkillBtns\n          新增循环技能={新增循环技能}\n          批量新增循环={批量新增循环}\n          处理循环结果对象={处理循环结果对象}\n          模拟信息={模拟信息}\n          大橙武模拟={大橙武模拟}\n          开启武学助手={开启武学助手}\n          设置开启武学助手={设置开启武学助手}\n        />\n        {/* 保存自定义循环弹窗 */}\n        <SaveCustomCycleModal\n          自定义循环保存弹窗={自定义循环保存弹窗}\n          设置自定义循环保存弹窗={设置自定义循环保存弹窗}\n          保存自定义循环={确认保存循环}\n        />\n        {/* 循环自定义奇穴弹窗 */}\n        {/* <QixueSetModal\n          奇穴信息={奇穴信息}\n          更新奇穴信息={更新奇穴信息}\n          奇穴弹窗展示={奇穴弹窗展示}\n          更新奇穴弹窗展示={更新奇穴弹窗展示}\n        /> */}\n\n        {/* 添加技能弹窗 */}\n        <AddCycleSkillModal\n          向循环内插入技能={向循环内插入技能}\n          处理循环结果对象={处理循环结果对象}\n          模拟信息={模拟信息}\n          大橙武模拟={大橙武模拟}\n          奇穴信息={奇穴信息}\n          添加设置={添加设置}\n          添加技能弹窗显示={添加技能弹窗显示}\n          关闭弹窗={() => {\n            更新添加技能弹窗显示(false)\n            更新添加设置({ 位置: '', 索引: 0 })\n          }}\n        />\n      </Modal>\n    </>\n  )\n}\n\nexport default React.memo(CycleSimulator)\n"],"names":["基础GCD帧","技能名称","技能释放后添加GCD","回复锐意","造成伤害次数","技能CD","技能GCD组","技能类型","图标","每秒郭氏帧","说明","日志类型数组","原始Buff数据","名称","最大层数","最大持续时间","最大作用次数","伤害频率","getDpsCycle","data","战斗时间","res","i","当前数据","本次造成伤害次数","其他数据","伤害次数","日志类型","获取当前日志对应技能枚举","Skill_Cycle_Map","日志","增益列表","技能增益列表","length","buff列表","不存在相同增益","map","item","增益名称","split","some","a","includes","增益技能数","concat","join","技能数量","结果循环","Object","keys","v","Math","round","d","触石雨CD","触石雨数量","push","ERROR_ACTION","锐意不足","信息","身形不足","体态错误","BUFF错误","转化buff和增益名称","增益层数","当前层数","技能统一类","模拟循环","本次释放记录","this","减少时间","技能类实例集合","停云势","减少调息时间","留客雨","孤风破浪","大橙武模拟","锐意值","来源","角色状态信息","锐意","添加buff","对象","增加锐意","减少锐意","伤害名称","额外增益列表","触发伤害时间","undefined","DOT伤害","技能造成伤害","技能依赖自身buff列表","技能依赖目标buff列表","重要buff列表","forEach","buff","当前自身buff列表","当前目标buff列表","buff名称","当前时间","buff对象","Buff和Dot数据","buff开始时间","buff结束时间","通用DOT类","DOT运行数据","待生效数据","DOT名称","新数据","结算数组","未结算数组","数据","生效时间","更新DOT运行数据","DOT数据","DOT是否吃加速","是否吃加速","循环加速值","加速等级","实际初次频率","获取实际帧数","初次频率","实际伤害频率","快照buff列表","披靡层数","待添加次数","原最后一次生效时间","添加待生效事件队列","事件名称","事件时间","事件备注","buff类型","卸除层数","流血","当前最后一跳数据","流血最大层数","新流血层数","min","新增层数","只添加日志","获取当前DOT数据","更新待生效数据","结算并更新运行数据","层数","触发伤害行为","流血伤害名称枚举","截辕","新层数","行云势一","可以释放","异常信息","当前是否满锐","保存释放记录","获取当前重要buff列表","释放技能回复锐意","行云势二","行云势三","减少对阵技能CD","卸除buff","有CD技能通用类","技能运行数据","待充能时间点","减少帧数","新待充能时间点","filter","更新技能运行数据","决云势一","初始化技能运行数据","当前流血层数","减少绝技技能CD","对阵招式橙武减少绝技技能CD","触发消耗锐意","技能数据","循环模拟技能基础数据","决云势二","横云势一","获得和刷新流血","造成buff数据","获取施加重要buff信息","横云势二","减少GCD","GCD组","公共","添加战斗日志","傍身","当前锐意","半锐","获得和刷新截辕","减少CD","技能释放后更新运行数据","灭影追风","换行","技能系数","获取当前数据","循环主类","props","循环执行结果","循环异常信息","异常索引","测试循环","奇穴","网络延迟","开始释放上一个技能的时间","战斗日志","技能释放记录","技能基础数据","云刀上次造成伤害时间","待生效事件队列","上一次每两秒回复锐意时间点","开启武学助手","获取加速等级","加速值","初始化技能实例类","起手留层数","刷新时间","起手留客雨BUFF","重置循环执行结果","新buff对象","日志时间","buff刷新时间","待判断奇穴","time","跳过全部GCD时间","DOT结算与更新","清空已经消失的buff","新GCD组","key","max","当前技能","校验GCD组","实例","运行数据","技能实例","GCD","等待CD时间","可以释放时间","最大充能层数","可释放时间","增加CD","实际增加CD","本次释放充能","log","rest","造成时间","对应技能","find","获取技能信息","有关的buff列表","当前增益数据","增益消失时间","总增益列表","检查GCD","技能释放前检查GCD统一方法","等待CD","技能释放前检查运行数据","延迟等待","技能计划释放时间","技能预估释放时间","时间差","增加时间","待更新GCD组","增加技能GCD","增加技能CD","计划释放时间","开始释放时间","技能释放记录结果","获取技能释放记录结果","实际释放时间","buff应该消失时间","消失层数","自然消失失去层数","清空buff调用函数","结算流血伤害","结算截辕伤害","对所有有CD技能检查和充能","释放判断结果","释放","校验结果","结算判断时间","轮训执行事件","当前事件","shift","传入数据","事件覆盖","新待生效事件队列","sort","b","本轮模拟开始前","释放前初始化","技能释放前","读条时间","读条","每秒回复锐意结算","待生效事件结算","技能GCD和CD处理","技能成功开始释放","释放校验结果","技能释放校验","是否为最后一个技能","技能释放异常","命中","造成伤害","释放后","技能释放后","本轮模拟结束后","新日志","各技能当前运行状态","添加时间","更新后锐意","新的时间点","模拟实例","模拟","日志排序","当前各技能运行状态","获取当前各技能的运行状态","当前DOT运行状态","获取各DOT的运行状态","最终日志","当前GCD组","技能序列","cycle","设置自定义循环保存弹窗","清空循环","设置起手留层数","快速导入循环","更新加速等级","模拟信息","更新网络延迟","自定义循环","useAppSelector","state","自定义循环列表","快捷添加循环","类型","数据源","快速导入默认循环","当前循环数据","技能序列信息","标记","className","content","href","target","rel","size","value","onChange","options","Array","from","label","延迟设定","overlay","onClick","index","style","margin","navigator","clipboard","readText","then","clipboardData","message","danger","title","type","disabled","percent","format","DOT列表","当前时间点","当前buff列表","当前Dot列表","原始数据","wrap","剩余时间","剩余时间秒","toFixed","备注","src","最后一跳","open","onCancel","logData","columns","dataIndex","filters","text","onFilter","record","indexOf","render","_","row","width","centered","footer","dataSource","pagination","pageSize","showTotal","total","dpsList","总伤","计算结果技能列表","visible","onClose","过滤的buff列表","总战斗用时","useState","chartData","setChartData","limitRef","useRef","覆盖率","设置覆盖率","useEffect","setTimeout","initChart","current","chart","Chart","container","autoFit","renderer","padding","tooltip","crosshairs","getDataSource","source","tickCount","axis","textAlign","fontSize","coordinate","transpose","interval","position","color","offset","Buff枚举","logName","buffName","currentTime","总持续时间","获取Buff覆盖率","range","格式化buff覆盖数组","id","日志信息","模拟DPS结果","buffCountModalOpen","setBuffCountModalOpen","logModalOpen","setLogModalOpen","countModal","setCountModal","showIcon","秒伤","秒伤计算时间","placement","PieChartOutlined","CalendarOutlined","AlignLeftOutlined","技能","删除循环技能","buff覆盖数据","更新buff覆盖数据","点击下拉菜单","技能释放时间","间隔CD","剩余秒","索引","是否异常","当前异常","技能释放结果","当前是否需要高亮展示在buff覆盖中","useMemo","cls","classNames","下拉菜单","count","menu","items","trigger","onMouseEnter","onMouseLeave","实际伤害技能","CloseCircleFilled","伤害段数","释放等待CD","计算可以释放时技能CD","技能当前层数","计算技能当前层数","禁用信息","是否禁用","异常描述","消耗锐意","角标数字","技能原始名称","技能运行状态","下次预估释放时间","快捷添加数据","新增循环技能","批量新增循环","处理循环结果对象","设置开启武学助手","创建循环不可选","完整循环","gutter","span","技能原始数据","批量新增循环技能","fontWeight","e","optionType","buttonStyle","计算循环","modal","App","自定义循环保存弹窗","保存自定义循环","自定义循环类型","设置自定义循环类型","自定义循环名称输入","设置自定义循环名称输入","覆盖循环名","设置覆盖循环名","加速选项","设置加速选项","延迟选项","设置延迟选项","dispatch","useAppDispatch","全部循环","删除循环","更新当前自定义循环列表","okButtonProps","onOk","destroyOnClose","activeKey","tab","optionLabelProp","placeholder","stopPropagation","preventDefault","confirm","okText","删除循环前提示","rules","validator","callback","向循环内插入技能","添加设置","添加技能弹窗显示","关闭弹窗","height","位置","缓存映射","加速等级枚举","CycleSimulator","打开循环模拟器","setLogData","更新模拟DPS结果","更新模拟信息","basicModalOpen","setBasicModalOpen","setCycle","外部加速值","装备信息","装备基础属性","装备增益","大橙武特效","外部延迟","奇穴信息","当前奇穴信息","更新添加技能弹窗显示","更新添加设置","simulator","传入加速","传入延迟","更新展示","处理后自身buff","处理后目标buff","处理后角色状态信息","计算dps","获取用于计算的技能组","秒伤计算","更新循环技能列表","更新计算时间","更新奇穴数据","newCycle","splice","是否存在换行技能","找到当前技能释放记录","显示循环","保存信息","localStorage","setItem","JSON","stringify","maskClosable","循环","循环标记","轮次","ReactSortable","list","assign","setList","newList","minIndex","reduce","obj","Infinity","maxIndex","Number","NEGATIVE_INFINITY","当前技能数据","拖拽更新循环","animation","draggable","AlertOutlined","删除本轮后全部循环","CopyOutlined","复制本轮至最后","DeleteOutlined","删除本轮次","各延迟枚举","各加速枚举","保存循环结果","异常结果","加速","实际加速值","延迟","模拟结果","本次日志","战斗秒","用于计算循环","循环加速等级","循环延迟要求","技能详情","新自定义循环","标题","循环详情","插入位置","插入索引","addCycle","slice","React"],"sourceRoot":""}