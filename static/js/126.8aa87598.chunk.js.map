{"version":3,"file":"static/js/126.8aa87598.chunk.js","mappings":"wNAKA,MAAMA,EAAW,CAAC,sBA0ElB,QAxEA,WACE,MAAOC,EAAMC,IAAUC,EAAAA,EAAAA,aAChBC,GAAQC,EAAAA,EAAKC,WACbC,EAASC,IAAcL,EAAAA,EAAAA,WAAkB,GA2ChD,OAzCAM,EAAAA,EAAAA,YAAU,KACJ,OAAJL,QAAI,IAAJA,GAAAA,EAAMM,eAAe,CACnBC,2BAAc,OAARX,QAAQ,IAARA,OAAQ,EAARA,EAAW,IACjB,GACD,KAsCDY,EAAAA,EAAAA,KAAA,OAAAC,UACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,SAAUT,EAAQM,SAAA,EACtBD,EAAAA,EAAAA,KAACP,EAAAA,EAAI,CAACD,KAAMA,EAAMa,UAAW,qBAAsBC,OAAO,WAAUL,UAClED,EAAAA,EAAAA,KAACP,EAAAA,EAAKc,KAAI,CAACC,KAAK,eAAKC,MAAM,eAAKC,UAAQ,EAAAT,UACtCD,EAAAA,EAAAA,KAACW,EAAAA,EAAMC,SAAQ,CAACP,UAAW,+BAG/BH,EAAAA,EAAAA,MAAA,OAAKG,UAAW,mBAAmBJ,SAAA,EACjCD,EAAAA,EAAAA,KAACa,EAAAA,GAAM,CAACC,KAAK,UAAUT,UAAU,kBAAkBU,QA5C5CC,UACbxB,EAAKyB,iBAAiBC,MAAKF,UACzBpB,GAAW,GACX,MAAMuB,OCnBSC,KACnB,MAAMD,EAAkB,GAClBE,EAAOC,KAAKC,MAAMH,GAAM,MAmB9B,OAlBAI,OAAOC,KAAKJ,GAAMK,SAASC,IACzB,MAAMC,EAASP,EAAKM,GACdE,EAAmB,GACzBL,OAAOC,KAAKG,GAAQF,SAASI,IAC3B,MAAMC,EAAOH,EAAOE,GAChBC,GACFF,EAAOG,KAAK,CACVC,2BAAU,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAMvB,KACZ0B,2BAAM,gCAAoC,OAAJH,QAAI,IAAJA,OAAI,EAAJA,EAAMI,WAC5CC,GAAQ,OAAJL,QAAI,IAAJA,OAAI,EAAJA,EAAMK,GACVC,2BAAU,OAAJN,QAAI,IAAJA,OAAI,EAAJA,EAAMO,MAEhB,IAEFnB,EAAIa,KAAK,CACPO,2BAAMV,GACN,IAEGV,CAAG,EDFYqB,CAAW,OAANC,QAAM,IAANA,OAAM,EAANA,EAAQrB,cACxB,OAAHD,QAAG,IAAHA,GAAAA,EAAKuB,OACPpD,EAAO6B,GAEPwB,EAAAA,GAAQC,MAAM,4BAEhBhD,GAAW,EAAM,GACjB,EAkCuEK,SAAC,8BAGpED,EAAAA,EAAAA,KAACa,EAAAA,GAAM,CAACgC,UAAWxD,EAAMgB,UAAU,kBAAkBU,QAlChD+B,KACX,MAAM3B,EAAM4B,SAASC,eAAe,sBACpC,GAAI7B,EAAK,CACP,MAAM8B,EAAU,OAAH9B,QAAG,IAAHA,OAAG,EAAHA,EAAK+B,UAClB,GAAID,EAAM,CACR,MAAME,EAAQJ,SAASK,cAAc,SACrCL,SAASM,KAAKC,YAAYH,GAC1BA,EAAMI,aAAa,QAASN,GAC5BE,EAAMK,SACNT,SAASU,YAAY,QACjBV,SAASU,YAAY,UACvBV,SAASU,YAAY,QACrBd,EAAAA,GAAQe,QAAQ,6BAKlBX,SAASM,KAAKM,YAAYR,EAC5B,CACF,GAeyElD,SAAC,qBAIjE,OAAJZ,QAAI,IAAJA,OAAI,EAAJA,EAAMqD,UACL1C,EAAAA,EAAAA,KAAA,OAAKoC,GAAG,qBAAqB/B,UAAW,qBAAqBJ,SAC1DqB,KAAKsC,UAAUvE,SAM5B,C","sources":["功能模块/系统工具/页面右下角工具/网页工具/奇穴导入/index.tsx","功能模块/系统工具/页面右下角工具/网页工具/奇穴导入/tools.ts"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Button, Form, Input, Spin, message } from 'antd'\nimport './index.css'\nimport { 获取数据 } from './tools'\n\nconst 支持导入心法列表 = ['凌海诀']\n\nfunction 奇穴导入() {\n  const [结果数据, 更新结果数据] = useState<any>()\n  const [form] = Form.useForm()\n  const [loading, setLoading] = useState<boolean>(false)\n\n  useEffect(() => {\n    form?.setFieldsValue({\n      当前心法: 支持导入心法列表?.[0],\n    })\n  }, [])\n\n  const 获取远程数据 = async () => {\n    form.validateFields().then(async (values) => {\n      setLoading(true)\n      const res = await 获取数据(values?.数据)\n      if (res?.length) {\n        更新结果数据(res)\n      } else {\n        message.error('解析出错')\n      }\n      setLoading(false)\n    })\n  }\n\n  const copy = () => {\n    const res = document.getElementById('tools-qixue-result')\n    if (res) {\n      const text = res?.innerHTML\n      if (text) {\n        const input = document.createElement('input')\n        document.body.appendChild(input)\n        input.setAttribute('value', text)\n        input.select()\n        document.execCommand('copy') // 执行浏览器复制命令\n        if (document.execCommand('copy')) {\n          document.execCommand('copy')\n          message.success('复制成功')\n        }\n        // if (text?.includes('未匹配')) {\n        //   message.warning('存在未匹配装备')\n        // }\n        document.body.removeChild(input)\n      }\n    }\n  }\n\n  return (\n    <div>\n      <Spin spinning={loading}>\n        <Form form={form} className={'tools-qixue-params'} layout='vertical'>\n          <Form.Item name='数据' label='数据' required>\n            <Input.TextArea className={'tool-qixue-input-area'} />\n          </Form.Item>\n        </Form>\n        <div className={'tools-qixue-btns'}>\n          <Button type='primary' className='tools-qixue-btn' onClick={获取远程数据}>\n            获取数据\n          </Button>\n          <Button disabled={!结果数据} className='tools-qixue-btn' onClick={copy}>\n            复制\n          </Button>\n        </div>\n        {结果数据?.length && (\n          <div id='tools-qixue-result' className={'tools-qixue-result'}>\n            {JSON.stringify(结果数据)}\n          </div>\n        )}\n      </Spin>\n    </div>\n  )\n}\n\nexport default 奇穴导入\n","import { 奇穴列表数据类型, 奇穴数据类型 } from '@/@types/奇穴'\n\nexport const 获取数据 = (数据) => {\n  const res: 奇穴列表数据类型[] = []\n  const 数据对象 = JSON.parse(数据 || '{}')\n  Object.keys(数据对象).forEach((key) => {\n    const keyObj = 数据对象[key]\n    const keyRes: 奇穴数据类型[] = []\n    Object.keys(keyObj).forEach((itemKey) => {\n      const data = keyObj[itemKey]\n      if (data) {\n        keyRes.push({\n          奇穴名称: data?.name,\n          奇穴图片: `https://icon.jx3box.com/icon/${data?.icon}.png`,\n          id: data?.id,\n          奇穴描述: data?.desc,\n        })\n      }\n    })\n    res.push({\n      奇穴列表: keyRes,\n    })\n  })\n  return res\n}\n"],"names":["支持导入心法列表","结果数据","更新结果数据","useState","form","Form","useForm","loading","setLoading","useEffect","setFieldsValue","当前心法","_jsx","children","_jsxs","Spin","spinning","className","layout","Item","name","label","required","Input","TextArea","Button","type","onClick","async","validateFields","then","res","数据","数据对象","JSON","parse","Object","keys","forEach","key","keyObj","keyRes","itemKey","data","push","奇穴名称","奇穴图片","icon","id","奇穴描述","desc","奇穴列表","获取数据","values","length","message","error","disabled","copy","document","getElementById","text","innerHTML","input","createElement","body","appendChild","setAttribute","select","execCommand","success","removeChild","stringify"],"sourceRoot":""}