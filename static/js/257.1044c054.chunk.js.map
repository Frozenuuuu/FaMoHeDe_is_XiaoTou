{"version":3,"file":"static/js/257.1044c054.chunk.js","mappings":"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CA,+BACA,+BACA,+BACA,2BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,2BACA,+BACA,+BACA,+BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,2BACA,+BACA,+BACA,+BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,2BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,2BACA,+BACA,2BACA,+BACA,+BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,2BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,2BACA,+BACA,+BACA,+BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,2BACA,+BACA,+BACA,+BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,2BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,2BACA,+BACA,+BACA,+BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,qBACA,+BACA,+BACA,+BACA,2BACA,+BACA,+BACA,+BACA,2BACA,+BACA,+BACA,qBACA,+BA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","sources":["功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/constant/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/constant/skill.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/utils.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/utils.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/通用类/技能统一类.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/通用类/通用DOT类.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/DOT类/流血/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/DOT类/截辕/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/技能类/行云势一/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/技能类/行云势二/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/技能类/行云势三/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/通用类/有CD技能通用类.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/技能类/决云势一/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/技能类/决云势二/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/技能类/横云势一/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/技能类/横云势二/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/技能类/停云势/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/技能类/留客雨/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/技能类/孤风破浪/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/技能类/灭影追风/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/技能类/换行/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/main.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/constant/快速导入默认循环/启用循环/紫武_手动.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/constant/快速导入默认循环.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/CycleModalHeader/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/StatusBar/ruiyi/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/StatusBar/buff/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/StatusBar/dpsRes/components/BattleLogModal.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/StatusBar/dpsRes/components/SkillCountModal.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/StatusBar/dpsRes/components/BuffCountModal/util.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/StatusBar/dpsRes/components/BuffCountModal/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/StatusBar/dpsRes/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/StatusBar/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/CycleSkillItem/BuffItem.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/CycleSkillItem/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/AddCycleSkillBtns/AddCycleSkillBtn.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/AddCycleSkillBtns/快捷添加.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/AddCycleSkillBtns/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/SaveCustomCycleModal/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/AutoSkillListContent/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/AddCycleSkillModal/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/index.tsx"],"sourcesContent":["// BUFF持续最大时间,视为永久\nexport const BUFF持续最大时间 = 99999999999\n\nexport const 基础GCD帧 = 16\n","import { Buff枚举, 循环基础技能数据类型, 日志类型 } from '../simulator/type'\nimport { 基础GCD帧 } from '.'\nimport { 每秒郭氏帧 } from '@/数据/常量'\n\nconst 循环模拟技能基础数据: 循环基础技能数据类型[] = [\n  {\n    技能名称: '行云势·一',\n    技能释放后添加GCD: 基础GCD帧,\n    回复锐意: 10,\n    造成伤害次数: 1,\n    技能CD: 0,\n    技能GCD组: ['公共', '傍身'],\n    技能类型: '傍身',\n    图标: 'https://icon.jx3box.com/icon/17567.png',\n  },\n  {\n    技能名称: '行云势·二',\n    技能释放后添加GCD: 基础GCD帧,\n    回复锐意: 10,\n    造成伤害次数: 1,\n    技能CD: 0,\n    技能GCD组: ['傍身'],\n    技能类型: '傍身',\n    图标: 'https://icon.jx3box.com/icon/17733.png',\n  },\n  {\n    技能名称: '行云势·三',\n    技能释放后添加GCD: 基础GCD帧,\n    回复锐意: 10,\n    造成伤害次数: 1,\n    技能CD: 0,\n    技能GCD组: ['傍身'],\n    技能类型: '傍身',\n    图标: 'https://icon.jx3box.com/icon/17744.png',\n  },\n  {\n    技能名称: '决云势·一',\n    技能释放后添加GCD: 基础GCD帧,\n    造成伤害次数: 1,\n    技能CD: 每秒郭氏帧 * 15,\n    技能GCD组: '公共',\n    技能类型: '对阵',\n    图标: 'https://icon.jx3box.com/icon/17569.png',\n  },\n  {\n    技能名称: '决云势·二',\n    技能释放后添加GCD: 基础GCD帧,\n    造成伤害次数: 1,\n    技能GCD组: '公共',\n    技能类型: '对阵',\n    图标: 'https://icon.jx3box.com/icon/17741.png',\n  },\n  {\n    技能名称: '横云势·一',\n    技能释放后添加GCD: 基础GCD帧,\n    造成伤害次数: 1,\n    技能CD: 每秒郭氏帧 * 15,\n    技能GCD组: '公共',\n    技能类型: '对阵',\n    图标: 'https://icon.jx3box.com/icon/17574.png',\n  },\n  {\n    技能名称: '横云势·二',\n    技能释放后添加GCD: 基础GCD帧,\n    造成伤害次数: 1,\n    技能GCD组: '公共',\n    技能类型: '对阵',\n    图标: 'https://icon.jx3box.com/icon/17572.png',\n  },\n  {\n    技能名称: '停云势',\n    技能释放后添加GCD: 基础GCD帧,\n    造成伤害次数: 1,\n    技能CD: 每秒郭氏帧 * 15,\n    技能GCD组: '公共',\n    技能类型: '对阵',\n    图标: 'https://icon.jx3box.com/icon/17568.png',\n  },\n  {\n    技能名称: '留客雨',\n    技能释放后添加GCD: 基础GCD帧,\n    回复锐意: 30,\n    造成伤害次数: 1,\n    技能GCD组: '自身',\n    技能类型: '对阵',\n    技能CD: 每秒郭氏帧 * 8,\n    图标: 'https://icon.jx3box.com/icon/17580.png',\n  },\n  {\n    技能名称: '灭影追风',\n    技能释放后添加GCD: 基础GCD帧,\n    造成伤害次数: 0,\n    技能CD: 每秒郭氏帧 * 20,\n    技能GCD组: '公共',\n    技能类型: '对阵',\n    图标: 'https://icon.jx3box.com/icon/17576.png',\n  },\n  {\n    技能名称: '孤风破浪',\n    技能释放后添加GCD: 基础GCD帧,\n    造成伤害次数: 1,\n    技能CD: 每秒郭氏帧 * 60,\n    技能GCD组: '公共',\n    技能类型: '绝技',\n    图标: 'https://icon.jx3box.com/icon/17575.png',\n  },\n  {\n    技能名称: '换行',\n    技能释放后添加GCD: 0,\n    技能CD: 0,\n    技能GCD组: '自身',\n    造成伤害次数: 0,\n    技能类型: '绝技',\n    图标: 'https://icon.jx3box.com/icon/17632.png',\n    说明: '插入换行将只以”换行“作为展示换行。 若无\"换行\"则默认以”横云势·二“作为展示换行.',\n  },\n]\n\nexport default 循环模拟技能基础数据\n\nexport const 日志类型数组: 日志类型[] = [\n  '释放技能',\n  '自身buff变动',\n  '目标buff变动',\n  '造成伤害',\n  '技能释放结果',\n  '等CD',\n]\n\n// Map预备数据\nexport const 原始Buff数据: Buff枚举 = {\n  // Buff\n  ['灭影追风·悟']: {\n    名称: '灭影追风·悟',\n    最大层数: 1,\n    最大持续时间: 每秒郭氏帧 * 10,\n    图标: 'https://icon.jx3box.com/icon/17576.png',\n  },\n  ['披靡·悟']: {\n    名称: '披靡·悟',\n    最大层数: 3,\n    最大持续时间: 每秒郭氏帧 * 12,\n    图标: 'https://icon.jx3box.com/icon/17742.png',\n  },\n  行链: {\n    名称: '行链',\n    最大层数: 2,\n    最大持续时间: 每秒郭氏帧 * 4,\n    图标: 'https://icon.jx3box.com/icon/17733.png',\n  },\n  决链: {\n    名称: '决链',\n    最大层数: 1,\n    最大持续时间: 每秒郭氏帧 * 10,\n    图标: 'https://icon.jx3box.com/icon/17569.png',\n  },\n  横链: {\n    名称: '横链',\n    最大层数: 1,\n    最大持续时间: 每秒郭氏帧 * 10,\n    图标: 'https://icon.jx3box.com/icon/17572.png',\n  },\n  横云一式: {\n    名称: '横云一式',\n    最大层数: 1,\n    最大持续时间: 每秒郭氏帧 * 10,\n    图标: 'https://icon.jx3box.com/icon/17574.png',\n  },\n  // 停云势: {\n  //   名称: '停云势',\n  //   最大层数: 1,\n  //   最大持续时间: 每秒郭氏帧 * 5,\n  //   图标: 'https://icon.jx3box.com/icon/17568.png',\n  // },\n  大橙武增伤: {\n    名称: '大橙武增伤',\n    最大层数: 999, // 可以叠加\n    最大持续时间: 每秒郭氏帧 * 30,\n    图标: 'https://icon.jx3box.com/icon/17801.png',\n  },\n  // DOT\n  流血: {\n    名称: '流血',\n    最大层数: 3,\n    最大作用次数: 9,\n    最大持续时间: 每秒郭氏帧 * 18,\n    伤害频率: 32,\n    图标: 'https://icon.jx3box.com/icon/17574.png',\n  },\n  截辕: {\n    名称: '截辕',\n    最大层数: 1,\n    最大作用次数: 6,\n    最大持续时间: 每秒郭氏帧 * 12,\n    伤害频率: 32,\n    图标: 'https://icon.jx3box.com/icon/17759.png',\n  },\n}\n","import { 每秒郭氏帧 } from '@/数据/常量'\nimport { 循环日志数据类型 } from './simulator/type'\n// import { 属性系数 } from '@/数据/常量'\nimport { 循环技能详情, 技能增益列表数据 } from '@/@types/循环'\n\nexport const getDpsCycle = (data: 循环日志数据类型[], 战斗时间): 循环技能详情[] => {\n  const res: { [key: string]: 循环技能详情 } = {}\n  for (let i = 0; i < data.length; i++) {\n    const 当前数据 = data[i]\n    const 本次造成伤害次数 = 当前数据?.其他数据?.伤害次数 || 1\n    if (当前数据?.日志类型 === '造成伤害') {\n      const 获取当前日志对应技能枚举 = Skill_Cycle_Map[当前数据?.日志] || 当前数据?.日志\n      let 增益列表 = res[获取当前日志对应技能枚举]?.技能增益列表 || []\n      if (!增益列表?.length) {\n        if (当前数据?.buff列表?.length) {\n          增益列表 = 增益列表.concat([\n            {\n              增益名称: 当前数据?.buff列表?.join(','),\n              增益技能数: 本次造成伤害次数,\n            },\n          ])\n        }\n      } else {\n        if (当前数据?.buff列表?.length) {\n          let 不存在相同增益 = true\n          增益列表 = 增益列表.map((item) => {\n            const 技能增益列表 = item?.增益名称?.split(',') || []\n            if (\n              技能增益列表?.length === 当前数据?.buff列表?.length &&\n              !技能增益列表?.some((a) => !当前数据?.buff列表?.includes(a))\n            ) {\n              不存在相同增益 = false\n              return {\n                增益名称: item.增益名称,\n                增益技能数: item.增益技能数 + 本次造成伤害次数,\n              }\n            } else {\n              return {\n                ...item,\n              }\n            }\n          })\n          if (不存在相同增益) {\n            增益列表 = 增益列表.concat({\n              增益名称: 当前数据?.buff列表?.join(','),\n              增益技能数: 本次造成伤害次数,\n            })\n          }\n        }\n      }\n\n      res[获取当前日志对应技能枚举] = {\n        ...res[获取当前日志对应技能枚举],\n        技能名称: 获取当前日志对应技能枚举,\n        技能数量: (res[获取当前日志对应技能枚举]?.技能数量 || 0) + 本次造成伤害次数,\n        技能增益列表: [...增益列表],\n      }\n    }\n  }\n\n  let 结果循环 = Object.keys(res).map((item) => {\n    const v = res[item]\n    return {\n      ...v,\n      技能数量: Math.round(v.技能数量),\n      技能增益列表: v.技能增益列表?.map((d) => {\n        return {\n          ...d,\n          增益技能数: Math.round(d.增益技能数),\n        }\n      }),\n    }\n  })\n\n  // 根据战斗时间加入触石雨和对应的避石击虚数量\n  if (战斗时间) {\n    const 触石雨CD = 每秒郭氏帧 * (25 + 5) // 30秒CD，按只有单刀期间打计算\n    const 触石雨数量 = Math.round(战斗时间 / 触石雨CD)\n    结果循环.push({\n      技能名称: '触石雨',\n      技能数量: 触石雨数量,\n      技能增益列表: [{ 增益名称: '灭影追风,流岚', 增益技能数: 触石雨数量 }],\n    })\n\n    结果循环 = 结果循环.map((item) => {\n      if (item.技能名称 === '避实击虚') {\n        return {\n          ...item,\n          技能数量: item.技能数量 + 触石雨数量,\n          技能增益列表: (item.技能增益列表 || []).map((a) => {\n            return a?.增益名称 === '流岚'\n              ? {\n                  ...a,\n                  增益技能数: a.增益技能数 + 触石雨数量,\n                }\n              : a\n          }),\n        }\n      } else {\n        return item\n      }\n    })\n  }\n\n  return 结果循环\n}\n\nexport const getSingleSkillDpsCycle = (当前数据: 循环日志数据类型): 循环技能详情 => {\n  const 获取当前日志对应技能枚举 = Skill_Cycle_Map[当前数据?.日志] || 当前数据?.日志\n  const 伤害次数 = 当前数据?.其他数据?.伤害次数 || 1\n  let 增益列表: 技能增益列表数据[] = []\n  if (!增益列表?.length) {\n    if (当前数据?.buff列表) {\n      增益列表 = 增益列表.concat({\n        增益名称: 当前数据?.buff列表?.join(','),\n        增益技能数: 伤害次数,\n      })\n    }\n  } else {\n    if (当前数据?.buff列表?.length) {\n      let 不存在相同增益 = true\n      增益列表 = 增益列表.map((item) => {\n        const 技能增益列表 = item?.增益名称?.split(',') || []\n        if (\n          技能增益列表?.length === 当前数据?.buff列表?.length &&\n          !技能增益列表?.some((a) => !当前数据?.buff列表?.includes(a))\n        ) {\n          不存在相同增益 = false\n          return {\n            增益名称: item.增益名称,\n            增益技能数: item.增益技能数 + 伤害次数,\n          }\n        } else {\n          return {\n            ...item,\n          }\n        }\n      })\n      if (不存在相同增益) {\n        增益列表 = 增益列表.concat({\n          增益名称: 当前数据?.buff列表?.join(','),\n          增益技能数: 伤害次数,\n        })\n      }\n    }\n  }\n\n  return {\n    技能名称: 获取当前日志对应技能枚举,\n    技能数量: 伤害次数,\n    技能增益列表: [...增益列表],\n  }\n}\n\nexport const 判断上一个同名技能 = (当前技能, 循环) => {\n  // 上一个同名技能\n  const 循环副本 = [...循环]\n  循环副本.reverse()\n  let 剩余CD = 0\n\n  const 上一个同名技能 = 循环副本?.find((item) => {\n    if (item?.实际技能) {\n      // 用下一个技能可以释放时间判断不是当前技能\n      return item?.实际技能 === 当前技能?.实际技能 && item?.下一个技能可以释放时间\n    } else {\n      const 正常技能判定 = item?.技能名称 === 当前技能?.技能名称 && item?.下一个技能可以释放时间\n      // 用下一个技能可以释放时间判断不是当前技能\n      return 正常技能判定\n    }\n  })\n\n  if (上一个同名技能) {\n    const 实际CD = 当前技能?.技能CD\n    const 上一个同名技能释放时间 = (上一个同名技能?.本技能实际释放时间 || 0) + (实际CD || 0)\n    const 下一个技能可以释放时间 = 循环[循环.length - 1]?.下一个技能可以释放时间\n\n    剩余CD =\n      上一个同名技能释放时间 - 下一个技能可以释放时间 > 0\n        ? 上一个同名技能释放时间 - 下一个技能可以释放时间\n        : 0\n  }\n\n  return { 上一个同名技能, 剩余CD }\n}\n\nexport const 获取总用时 = (时间) => {\n  const 用时秒 = Math.round((时间 / 每秒郭氏帧) * 100) / 100\n  return 用时秒\n}\n\nexport const 获取显示秒伤 = (最后一条伤害数据) => {\n  return Math.round((最后一条伤害数据?.造成总伤害 || 0) / (最后一条伤害数据?.日志时间 / 每秒郭氏帧))\n}\n\n// 没表明枚举就直接取原值\nexport const Skill_Cycle_Map = {}\n\nexport const 根据加速等级获取虚拟加速值 = (加速等级) => {\n  const 加速等级枚举 = {\n    0: 0,\n    1: 206,\n    2: 14156,\n    3: 30158,\n    4: 48622,\n    5: 70163,\n  }\n  return 加速等级枚举[加速等级]\n}\n","// import { 每秒郭氏帧 } from '../constant'\nimport 循环模拟技能基础数据, { 原始Buff数据 } from '../constant/skill'\nimport { 循环基础技能数据类型 } from './type'\n\nexport const 根据奇穴修改buff数据 = () => {\n  // const res = {}\n\n  // Object.keys(原始Buff数据).forEach((key) => {\n  //   const obj = 原始Buff数据[key]\n  //   res[key] = obj\n  // })\n\n  return 原始Buff数据\n}\n\nexport const 根据奇穴修改技能数据 = (): 循环基础技能数据类型[] => {\n  // const 判断奇穴 = (val) => {\n  //   return 奇穴?.includes(val)\n  // }\n\n  return 循环模拟技能基础数据\n}\n\nexport const ERROR_ACTION = {\n  锐意不足: {\n    信息: '当前锐意不足，无法释放该技能',\n  },\n  身形不足: {\n    信息: '当前身形不足，无法释放该技能',\n  },\n  体态错误: {\n    信息: '当前体态无法释放该技能',\n  },\n  BUFF错误: {\n    信息: '当前没有对应的BUFF',\n  },\n}\n\nexport const 起手留客雨BUFF = (Buff和Dot数据, 起手留层数 = 1) => {\n  return {\n    '披靡·悟': {\n      ...Buff和Dot数据['披靡·悟'],\n      当前层数: 起手留层数,\n      刷新时间: 0,\n    },\n  }\n}\n\nexport const 转化buff和增益名称 = (增益名称, buff列表) => {\n  if (增益名称?.includes('披靡·悟')) {\n    const 增益层数 = 增益名称?.split('·')?.[2]?.[0] || 0\n    if (!增益层数) {\n      return {}\n    } else {\n      return +buff列表?.['披靡·悟']?.当前层数 === +增益层数 ? buff列表?.['披靡·悟'] : {}\n    }\n  } else {\n    return buff列表?.[增益名称]\n  }\n}\n","import 循环主类类型 from '../main'\nimport { 技能释放记录结果 } from '../type'\n\nclass 技能统一类 {\n  模拟循环: Partial<循环主类类型> = {}\n  本次释放记录: 技能释放记录结果 = {}\n\n  constructor(模拟循环) {\n    this.模拟循环 = 模拟循环\n    return\n  }\n\n  释放前初始化() {\n    // 重置释放记录\n    this.本次释放记录 = {}\n  }\n\n  减少对阵技能CD(减少时间 = 16) {\n    this.模拟循环.技能类实例集合?.停云势?.减少调息时间?.(减少时间)\n    this.模拟循环.技能类实例集合?.['横云势·一']?.减少调息时间?.(减少时间)\n    this.模拟循环.技能类实例集合?.['决云势·一']?.减少调息时间?.(减少时间)\n    this.模拟循环.技能类实例集合?.['灭影追风']?.减少调息时间?.(减少时间)\n    this.模拟循环.技能类实例集合?.留客雨?.减少调息时间?.(减少时间)\n  }\n\n  减少绝技技能CD(减少时间 = 32) {\n    this.模拟循环.技能类实例集合?.孤风破浪?.减少调息时间?.(减少时间)\n  }\n\n  对阵招式橙武减少绝技技能CD() {\n    if (this.模拟循环.大橙武模拟) {\n      this.模拟循环.技能类实例集合?.孤风破浪?.减少调息时间?.(0.3125 * 16)\n    }\n  }\n\n  释放技能回复锐意(锐意值, 来源) {\n    const 当前是否满锐 = this.模拟循环.角色状态信息?.锐意 && this.模拟循环.角色状态信息?.锐意 >= 60\n\n    if (当前是否满锐) {\n      this.模拟循环.添加buff?.({ 名称: '披靡·悟', 对象: '自身' })\n    }\n\n    this.模拟循环.增加锐意?.(锐意值, 来源)\n  }\n\n  触发消耗锐意(锐意值, 来源) {\n    this.模拟循环.减少锐意?.(锐意值, 来源)\n  }\n\n  触发伤害行为(\n    伤害名称,\n    伤害次数 = 1,\n    额外增益列表: string[] = [],\n    触发伤害时间: number | undefined = undefined,\n    DOT伤害 = false\n  ) {\n    this.模拟循环.技能造成伤害?.(伤害名称, 伤害次数, 额外增益列表, 触发伤害时间, DOT伤害)\n  }\n\n  获取技能释放记录结果() {\n    return {\n      ...this.本次释放记录,\n    }\n  }\n\n  获取当前重要buff列表(技能依赖自身buff列表: string[] = [], 技能依赖目标buff列表: string[] = []) {\n    const 重要buff列表: string[] = []\n    技能依赖自身buff列表.forEach((buff) => {\n      if (this.模拟循环.当前自身buff列表?.[buff]?.当前层数) {\n        重要buff列表.push(buff)\n      }\n    })\n    技能依赖目标buff列表.forEach((buff) => {\n      if (this.模拟循环.当前目标buff列表?.[buff]?.当前层数) {\n        重要buff列表.push(buff)\n      }\n    })\n    return 重要buff列表 || []\n  }\n\n  获取施加重要buff信息(buff名称) {\n    const 当前时间 = this.模拟循环.当前时间 || 0\n    const buff对象 = this.模拟循环.Buff和Dot数据?.[buff名称]\n\n    return buff对象\n      ? {\n          buff名称: buff名称,\n          buff开始时间: 当前时间,\n          buff结束时间: 当前时间 + (buff对象?.最大持续时间 || 0),\n        }\n      : null\n  }\n}\n\nexport default 技能统一类\n","import { 获取实际帧数 } from '@/工具函数/data'\nimport { 根据加速等级获取虚拟加速值 } from '../../utils'\nimport { DOT待生效数据类型, DOT运行数据类型, DotDTO } from '../type'\nimport 技能统一类 from './技能统一类'\n\nclass 通用DOT类 extends 技能统一类 {\n  DOT运行数据: DOT运行数据类型 = {\n    待生效数据: [],\n  }\n\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  获取当前DOT数据(DOT名称) {\n    const DOT数据: DotDTO = this.模拟循环.Buff和Dot数据?.[DOT名称] as DotDTO\n    return DOT数据\n  }\n\n  更新DOT运行数据(新数据) {\n    this.DOT运行数据 = {\n      ...this.DOT运行数据,\n      ...新数据,\n    }\n  }\n\n  结算并更新运行数据() {\n    const 待生效数据 = this.DOT运行数据?.待生效数据 || []\n    if (待生效数据.length > 0) {\n      const 结算数组: DOT待生效数据类型[] = []\n      const 未结算数组: DOT待生效数据类型[] = []\n      const 当前时间 = this.模拟循环.当前时间 || 0\n      待生效数据.forEach((数据) => {\n        if ((数据.生效时间 || 0) <= 当前时间) {\n          结算数组.push(数据)\n        } else {\n          未结算数组.push(数据)\n        }\n      })\n      this.更新DOT运行数据({\n        待生效数据: 未结算数组,\n      })\n      return {\n        结算数组,\n        未结算数组,\n      }\n    } else {\n      return {\n        结算数组: [],\n        未结算数组: [],\n      }\n    }\n  }\n\n  // 对当前dot进行结算和运行数据\n  更新待生效数据(当前层数: number, DOT数据: DotDTO) {\n    const DOT是否吃加速 = DOT数据.是否吃加速 !== undefined ? DOT数据.是否吃加速 : true\n\n    const 循环加速值 = 根据加速等级获取虚拟加速值(this.模拟循环.加速等级)\n    const 实际初次频率 = DOT是否吃加速\n      ? 获取实际帧数(DOT数据.初次频率 || DOT数据.伤害频率, 循环加速值)\n      : DOT数据.初次频率 || DOT数据.伤害频率\n\n    const 实际伤害频率 = DOT是否吃加速\n      ? 获取实际帧数(DOT数据.伤害频率, 循环加速值)\n      : DOT数据.伤害频率\n\n    const 当前时间 = this.模拟循环.当前时间 || 0\n\n    const 快照buff列表: string[] = []\n\n    if (this.模拟循环?.当前自身buff列表?.['灭影追风·悟']?.当前层数) {\n      快照buff列表.push('灭影追风·悟')\n    }\n    if (this.模拟循环?.当前自身buff列表?.['大橙武增伤']?.当前层数) {\n      快照buff列表.push('大橙武增伤')\n    }\n    if (this.模拟循环?.当前自身buff列表?.['披靡·悟']?.当前层数) {\n      const 披靡层数 = this.模拟循环?.当前自身buff列表?.['披靡·悟']?.当前层数\n      快照buff列表.push(`披靡·悟·${披靡层数}`)\n    }\n\n    const 待生效数据: DOT待生效数据类型[] =\n      this.DOT运行数据?.待生效数据.map((item) => {\n        return { ...item, 当前层数, 快照buff列表 }\n      }) || []\n\n    // 如果DOT依然存在\n    if (待生效数据?.length > 0) {\n      const 待添加次数 = DOT数据.最大作用次数 - 待生效数据?.length\n      const 原最后一次生效时间 = 待生效数据[待生效数据?.length - 1]?.生效时间 || 0\n      for (let i = 0; i < 待添加次数; i++) {\n        待生效数据.push({\n          当前层数,\n          生效时间: 原最后一次生效时间 + 实际伤害频率 * (i + 1),\n          快照buff列表,\n        })\n      }\n    } else {\n      const 待添加次数 = DOT数据.最大作用次数\n      for (let i = 0; i < 待添加次数; i++) {\n        const 生效时间 = 当前时间 + (i === 0 ? 实际初次频率 : 实际伤害频率 * (i + 1))\n        待生效数据.push({\n          当前层数,\n          生效时间,\n          快照buff列表,\n        })\n      }\n    }\n\n    this.更新DOT运行数据({\n      待生效数据: 待生效数据,\n    })\n\n    // 每次刷新和更新时，删除前面的待生效数据\n    this.模拟循环.添加待生效事件队列?.(\n      [\n        {\n          事件名称: `卸除buff-${DOT数据?.名称}`,\n          事件时间: 待生效数据?.[待生效数据.length - 1]?.生效时间 || 0,\n          事件备注: { buff名称: DOT数据?.名称, buff类型: 'DOT', buff对象: '目标', 卸除层数: 9999 },\n        },\n      ],\n      true\n    )\n  }\n}\n\nexport default 通用DOT类\n","// import 循环主类 from '../main'\nimport 通用DOT类 from '../../通用类/通用DOT类'\n\nclass 流血 extends 通用DOT类 {\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  获得和刷新流血() {\n    const 当前最后一跳数据 =\n      this?.DOT运行数据?.待生效数据?.[this?.DOT运行数据?.待生效数据?.length - 1] || {}\n    const 当前层数 = 当前最后一跳数据?.当前层数 || 0\n    const 流血最大层数 = this?.模拟循环?.Buff和Dot数据?.流血?.最大层数 || 3\n    const 新流血层数 = Math.min(当前层数 + 1, 流血最大层数)\n\n    this.模拟循环.添加buff?.({\n      名称: '流血',\n      对象: '目标',\n      新增层数: 1,\n      只添加日志: true,\n    })\n    const 数据 = this.获取当前DOT数据('流血')\n\n    this.更新待生效数据(新流血层数, 数据)\n  }\n\n  结算流血伤害() {\n    const { 结算数组: 待生效数据 } = this.结算并更新运行数据()\n\n    待生效数据.forEach((数据) => {\n      const 层数 = 数据.当前层数 || 1\n      const 生效时间 = 数据.生效时间 || 0\n      const 快照buff列表 = 数据.快照buff列表 || []\n      if (生效时间) {\n        this.触发伤害行为(流血伤害名称枚举[层数], 1, 快照buff列表, 生效时间, true)\n      }\n    })\n  }\n}\n\nexport default 流血\n\nexport const 流血DOT类型 = typeof 流血\n\nconst 流血伤害名称枚举 = {\n  1: '流血·悟·一',\n  2: '流血·悟·二',\n  3: '流血·悟·三',\n}\n","// import 循环主类 from '../main'\nimport 通用DOT类 from '../../通用类/通用DOT类'\n\nclass 截辕 extends 通用DOT类 {\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  获得和刷新截辕() {\n    const 当前最后一跳数据 =\n      this?.DOT运行数据?.待生效数据?.[this?.DOT运行数据?.待生效数据?.length - 1] || {}\n    const 当前层数 = 当前最后一跳数据?.当前层数 || 0\n    const 最大层数 = this?.模拟循环?.Buff和Dot数据?.截辕?.最大层数 || 1\n    const 新层数 = Math.min(当前层数 + 1, 最大层数)\n    this.模拟循环.添加buff?.({\n      名称: '截辕',\n      对象: '目标',\n      新增层数: 1,\n      只添加日志: true,\n    })\n    const 数据 = this.获取当前DOT数据('截辕')\n    this.更新待生效数据(新层数, 数据)\n  }\n\n  结算截辕伤害() {\n    const { 结算数组: 待生效数据 } = this.结算并更新运行数据()\n\n    待生效数据.forEach((数据) => {\n      const 生效时间 = 数据.生效时间 || 0\n      const 快照buff列表 = 数据.快照buff列表 || []\n\n      if (生效时间) {\n        this.触发伤害行为('截辕·悟(DOT)', 1, 快照buff列表, 生效时间, true)\n      }\n    })\n  }\n}\n\nexport default 截辕\n\nexport const 截辕DOT类型 = typeof 截辕\n","import { ERROR_ACTION } from '../../utils'\nimport 技能统一类 from '../../通用类/技能统一类'\n\nclass 行云势一 extends 技能统一类 {\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  释放() {\n    const 行链层数 = this.模拟循环.当前自身buff列表?.['行链']?.当前层数\n\n    if (行链层数) {\n      return {\n        可以释放: false,\n        异常信息: ERROR_ACTION.BUFF错误,\n      }\n    }\n  }\n\n  造成伤害() {\n    const 当前是否满锐 = this.模拟循环.角色状态信息?.锐意 && this.模拟循环.角色状态信息?.锐意 >= 60\n\n    this.触发伤害行为('行云势·悟·一', 1, 当前是否满锐 ? ['满锐增伤'] : [])\n    this.保存释放记录()\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表(['灭影追风·悟', '披靡·悟', '横云一式', '大橙武增伤']),\n    }\n  }\n\n  释放后() {\n    this.释放技能回复锐意(10, '行云势·悟·一')\n    this.模拟循环.添加buff?.({ 名称: '行链', 对象: '自身' })\n  }\n}\n\nexport default 行云势一\n\nexport const 行云势一类型 = typeof 行云势一\n","import { ERROR_ACTION } from '../../utils'\nimport 技能统一类 from '../../通用类/技能统一类'\n\nclass 行云势二 extends 技能统一类 {\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  释放() {\n    const 行链层数 = this.模拟循环.当前自身buff列表?.['行链']?.当前层数\n    if (行链层数 !== 1) {\n      return {\n        可以释放: false,\n        异常信息: ERROR_ACTION.BUFF错误,\n      }\n    }\n  }\n\n  造成伤害() {\n    const 当前是否满锐 = this.模拟循环.角色状态信息?.锐意 && this.模拟循环.角色状态信息?.锐意 >= 60\n\n    this.触发伤害行为('行云势·悟·二', 1, 当前是否满锐 ? ['满锐增伤'] : [])\n    this.保存释放记录()\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表(['灭影追风·悟', '披靡·悟', '横云一式', '大橙武增伤']),\n    }\n  }\n\n  释放后() {\n    this.释放技能回复锐意(10, '行云势·悟·二')\n    this.模拟循环.添加buff?.({ 名称: '行链', 对象: '自身' })\n  }\n}\n\nexport default 行云势二\n\nexport const 行云势二类型 = typeof 行云势二\n","import { ERROR_ACTION } from '../../utils'\nimport 技能统一类 from '../../通用类/技能统一类'\n\nclass 行云势三 extends 技能统一类 {\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  释放() {\n    const 行链层数 = this.模拟循环.当前自身buff列表?.['行链']?.当前层数\n    if (行链层数 !== 2) {\n      return {\n        可以释放: false,\n        异常信息: ERROR_ACTION.BUFF错误,\n      }\n    }\n  }\n\n  造成伤害() {\n    const 当前是否满锐 = this.模拟循环.角色状态信息?.锐意 && this.模拟循环.角色状态信息?.锐意 >= 60\n\n    this.触发伤害行为('行云势·悟·三', 1, 当前是否满锐 ? ['满锐增伤'] : [])\n    this.保存释放记录()\n\n    if (当前是否满锐) {\n      this.减少对阵技能CD()\n    }\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表(['灭影追风·悟', '披靡·悟', '横云一式', '大橙武增伤']),\n    }\n  }\n\n  释放后() {\n    this.释放技能回复锐意(10, '行云势·悟·三')\n    this.模拟循环.卸除buff?.({ 名称: '行链', 对象: '自身', 卸除层数: 2 })\n  }\n}\n\nexport default 行云势三\n\nexport const 行云势一类型 = typeof 行云势三\n","import { 技能运行数据类型 } from '../type'\nimport 技能统一类 from './技能统一类'\n\nclass 有CD技能通用类 extends 技能统一类 {\n  技能运行数据: 技能运行数据类型 = {\n    待充能时间点: [],\n  }\n\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  初始化技能运行数据() {\n    this.技能运行数据.待充能时间点 = []\n  }\n\n  更新技能运行数据(新数据) {\n    this.技能运行数据 = {\n      ...this.技能运行数据,\n      ...新数据,\n    }\n  }\n\n  减少调息时间(减少帧数) {\n    const 待充能时间点 = this.技能运行数据.待充能时间点\n    if (待充能时间点?.length) {\n      const 新待充能时间点 = 待充能时间点\n        .map((item) => {\n          return item - 减少帧数\n        })\n        ?.filter((item) => {\n          return item > (this.模拟循环.当前时间 || 0)\n        })\n      this.更新技能运行数据({ 待充能时间点: 新待充能时间点 })\n    }\n  }\n}\n\nexport default 有CD技能通用类\n","import 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 决云势一 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '决云势·悟·一')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n    this.初始化技能运行数据()\n  }\n\n  造成伤害() {\n    const 当前流血层数 =\n      this.模拟循环?.技能类实例集合?.流血?.DOT运行数据?.待生效数据?.[0]?.当前层数 || 0\n    const buff列表: string[] = []\n\n    if (当前流血层数 > 0) {\n      buff列表.push(`流血增伤·${当前流血层数}`)\n    }\n\n    this.触发伤害行为('决云势·悟·一', 1, buff列表)\n  }\n\n  释放后() {\n    this.保存释放记录()\n    this.减少绝技技能CD()\n    this.对阵招式橙武减少绝技技能CD()\n    const 当前锐意 = this.模拟循环.角色状态信息?.锐意 || 0\n    if (当前锐意 >= 30) {\n      this.触发消耗锐意(30, '决云势·悟·一')\n      this.模拟循环.添加buff?.({ 名称: '决链', 对象: '自身' })\n    }\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表([\n        '灭影追风·悟',\n        '披靡·悟',\n        '横云一式',\n        '大橙武增伤',\n        '流血增伤',\n      ]),\n    }\n  }\n}\n\nexport default 决云势一\n\nexport const 停云势类型 = typeof 决云势一\n","// import 循环主类 from '../main'\nimport { ERROR_ACTION } from '../../utils'\nimport 技能统一类 from '../../通用类/技能统一类'\n\nclass 决云势二 extends 技能统一类 {\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  释放() {\n    const 决链层数 = this.模拟循环.当前自身buff列表?.['决链']?.当前层数\n\n    if (!决链层数) {\n      return {\n        可以释放: false,\n        异常信息: ERROR_ACTION.BUFF错误,\n      }\n    }\n  }\n\n  造成伤害() {\n    const 当前流血层数 =\n      this.模拟循环?.技能类实例集合?.流血?.DOT运行数据?.待生效数据?.[0]?.当前层数 || 0\n    const buff列表: string[] = []\n\n    if (当前流血层数 > 0) {\n      buff列表.push(`流血增伤·${当前流血层数}`)\n    }\n\n    this.触发伤害行为('决云势·悟·二', 1, buff列表)\n  }\n\n  释放后() {\n    this.保存释放记录()\n    this.对阵招式橙武减少绝技技能CD()\n    this.模拟循环.卸除buff?.({ 名称: '决链', 对象: '自身' })\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表([\n        '灭影追风·悟',\n        '披靡·悟',\n        '横云一式',\n        '大橙武增伤',\n        '流血增伤',\n      ]),\n    }\n  }\n}\n\nexport default 决云势二\n\nexport const 停云势类型 = typeof 决云势二\n","import 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 横云势一 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '横云势·悟·一')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n    this.初始化技能运行数据()\n  }\n\n  命中() {\n    this.模拟循环.添加buff?.({ 名称: '横云一式', 对象: '自身' })\n  }\n\n  造成伤害() {\n    this.触发伤害行为('横云势·悟·一')\n  }\n\n  释放后() {\n    this.保存释放记录()\n    this.减少绝技技能CD()\n    this.对阵招式橙武减少绝技技能CD()\n    this.模拟循环.技能类实例集合?.流血?.获得和刷新流血?.()\n\n    const 当前锐意 = this.模拟循环.角色状态信息?.锐意 || 0\n    if (当前锐意 >= 30) {\n      this.触发消耗锐意(30, '横云势·悟·一')\n      this.模拟循环.添加buff?.({ 名称: '横链', 对象: '自身' })\n    }\n  }\n\n  保存释放记录() {\n    const 造成buff数据 = this.获取施加重要buff信息('横云一式')\n    this.本次释放记录 = {\n      造成buff数据: 造成buff数据 ? 造成buff数据 : undefined,\n      重要buff列表: this.获取当前重要buff列表([\n        '灭影追风·悟',\n        '披靡·悟',\n        '横云一式',\n        '大橙武增伤',\n        '流血增伤',\n      ]),\n    }\n  }\n}\n\nexport default 横云势一\n\nexport const 停云势类型 = typeof 横云势一\n","import { ERROR_ACTION } from '../../utils'\nimport 技能统一类 from '../../通用类/技能统一类'\n\nclass 横云势二 extends 技能统一类 {\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  释放() {\n    const 横链层数 = this.模拟循环.当前自身buff列表?.['横链']?.当前层数\n\n    if (!横链层数) {\n      return {\n        可以释放: false,\n        异常信息: ERROR_ACTION.BUFF错误,\n      }\n    }\n  }\n\n  造成伤害() {\n    const 当前流血层数 =\n      this.模拟循环?.技能类实例集合?.流血?.DOT运行数据?.待生效数据?.[0]?.当前层数 || 0\n    const buff列表: string[] = []\n\n    if (当前流血层数 > 0) {\n      buff列表.push(`流血增伤·${当前流血层数}`)\n    }\n\n    this.触发伤害行为('横云势·悟·二', 1, buff列表)\n  }\n\n  释放后() {\n    this.保存释放记录()\n    this.对阵招式橙武减少绝技技能CD()\n    this.模拟循环.卸除buff?.({ 名称: '横链', 对象: '自身' })\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表([\n        '灭影追风·悟',\n        '披靡·悟',\n        '横云一式',\n        '大橙武增伤',\n        '流血增伤',\n      ]),\n    }\n  }\n}\n\nexport default 横云势二\n\nexport const 停云势类型 = typeof 横云势二\n","// import 循环主类 from '../main'\nimport 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 停云势 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '停云势')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n    this.初始化技能运行数据()\n  }\n\n  释放() {\n    const 当前锐意 = this.模拟循环.角色状态信息?.锐意 || 0\n    if (当前锐意 >= 30) {\n      this.触发消耗锐意(30, '停云势·悟')\n    }\n  }\n\n  // 命中() {\n  //   this.模拟循环.添加buff?.({ 名称: '停云势', 对象: '自身' })\n  // }\n\n  造成伤害() {\n    this.触发伤害行为('停云势·悟')\n  }\n\n  释放后() {\n    this.保存释放记录()\n    this.减少绝技技能CD()\n    this.对阵招式橙武减少绝技技能CD()\n  }\n\n  保存释放记录() {\n    const 造成buff数据 = this.获取施加重要buff信息('横云一式')\n    this.本次释放记录 = {\n      造成buff数据: 造成buff数据 ? 造成buff数据 : undefined,\n      重要buff列表: this.获取当前重要buff列表(['灭影追风·悟', '披靡·悟', '横云一式', '大橙武增伤']),\n    }\n  }\n}\n\nexport default 停云势\n\nexport const 停云势类型 = typeof 停云势\n","// import 循环主类 from '../main'\nimport 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 留客雨 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '留客雨')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n    this.初始化技能运行数据()\n  }\n\n  造成伤害() {\n    const 当前流血层数 =\n      this.模拟循环?.技能类实例集合?.流血?.DOT运行数据?.待生效数据?.[0]?.当前层数 || 0\n    const buff列表: string[] = []\n    if (当前流血层数 > 0) {\n      buff列表.push('流血增伤')\n    }\n    this.触发伤害行为('留客雨·悟', 1, buff列表)\n\n    // 倒海悟命中流血额外添加一层\n    if (当前流血层数) {\n      this.模拟循环.技能类实例集合?.流血?.获得和刷新流血?.()\n    }\n  }\n\n  释放后() {\n    this.释放技能回复锐意(30, '留客雨·悟')\n    this.减少GCD()\n    this.保存释放记录()\n    this.减少绝技技能CD(16)\n    this.对阵招式橙武减少绝技技能CD()\n  }\n\n  减少GCD() {\n    if (this.模拟循环?.GCD组?.公共) {\n      // 这里给没有GCD的技能添加1帧的按键延迟，因为人的手速没有那么快\n      this.模拟循环.GCD组.公共 = 0\n      this.模拟循环.添加战斗日志?.({\n        日志: `留客雨命中减重置GCD`,\n        日志类型: '技能释放结果',\n      })\n    }\n    if (this.模拟循环?.GCD组?.傍身) {\n      // 这里给没有GCD的技能添加1帧的按键延迟，因为人的手速没有那么快\n      this.模拟循环.GCD组.傍身 = 0\n      this.模拟循环.添加战斗日志?.({\n        日志: `留客雨命中减重置GCD`,\n        日志类型: '技能释放结果',\n      })\n    }\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表(['灭影追风·悟', '披靡·悟', '横云一式', '大橙武增伤']),\n    }\n  }\n}\n\nexport default 留客雨\n\nexport const 留客雨类型 = typeof 留客雨\n","// import 循环主类 from '../main'\nimport { 每秒郭氏帧 } from '@/数据/常量'\nimport 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 孤风破浪 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '孤风破浪')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n    this.初始化技能运行数据()\n  }\n\n  造成伤害() {\n    const buff列表: string[] = []\n    const 当前锐意 = this.模拟循环.角色状态信息?.锐意 || 0\n\n    const 满锐 = 当前锐意 >= 60\n    const 半锐 = 当前锐意 >= 30 && 当前锐意 < 60\n\n    if (满锐) {\n      buff列表.push('满锐增伤')\n    } else if (半锐) {\n      buff列表.push('半锐增伤')\n    }\n\n    this.触发伤害行为('孤风破浪·悟', 1, buff列表)\n  }\n\n  释放后() {\n    this.保存释放记录()\n    const 当前锐意 = this.模拟循环.角色状态信息?.锐意 || 0\n\n    if (当前锐意 >= 60) {\n      this.触发伤害行为('截辕·悟')\n      this.模拟循环.技能类实例集合?.截辕?.获得和刷新截辕?.()\n    }\n\n    if (this.模拟循环.大橙武模拟) {\n      this.模拟循环.添加buff?.({ 名称: '大橙武增伤', 对象: '自身' })\n    }\n  }\n\n  保存释放记录() {\n    const 造成buff数据 = this.获取施加重要buff信息('大橙武增伤')\n    this.本次释放记录 = {\n      造成buff数据: 造成buff数据 ? 造成buff数据 : undefined,\n      重要buff列表: this.获取当前重要buff列表(['灭影追风·悟', '披靡·悟', '横云一式', '大橙武增伤']),\n    }\n  }\n\n  技能释放后更新运行数据() {\n    // 非潋风奇穴的识破决，释放后重置技能CD\n    const 当前锐意 = this.模拟循环.角色状态信息?.锐意 || 0\n    const 减少CD = 当前锐意 >= 60 ? 每秒郭氏帧 * 5 : 0\n    if (孤风破浪.技能数据) {\n      this?.模拟循环?.技能释放后更新运行数据?.(\n        孤风破浪.技能数据,\n        this,\n        (孤风破浪.技能数据.技能CD || 0) - 减少CD\n      )\n    }\n  }\n}\n\nexport default 孤风破浪\n\nexport const 孤风破浪类型 = typeof 孤风破浪\n","// import 循环主类 from '../main'\nimport 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 灭影追风 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '灭影追风')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n    this.初始化技能运行数据()\n  }\n\n  命中() {\n    this.模拟循环.添加buff?.({ 名称: '灭影追风·悟', 对象: '自身' })\n    this.保存释放记录()\n  }\n\n  释放() {\n    this.释放技能回复锐意(30, '灭影追风·悟')\n  }\n\n  释放后() {\n    this.减少绝技技能CD(48)\n  }\n\n  保存释放记录() {\n    const 造成buff数据 = this.获取施加重要buff信息('灭影追风·悟')\n    this.本次释放记录 = 造成buff数据 ? { 造成buff数据 } : {}\n  }\n}\n\nexport default 灭影追风\n\nexport const 灭影随风类型 = typeof 灭影追风\n","import 循环模拟技能基础数据 from '../../../constant/skill'\nimport 技能统一类 from '../../通用类/技能统一类'\n\nclass 换行 extends 技能统一类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '换行')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n}\n\nexport default 换行\n\nexport const 换行类型 = typeof 换行\n","/**\n * 定义模拟循环类\n */\n\nimport {\n  根据奇穴修改buff数据,\n  根据奇穴修改技能数据,\n  起手留客雨BUFF,\n  转化buff和增益名称,\n} from './utils'\nimport {\n  技能GCD组,\n  技能类实例集合,\n  检查运行数据实例类型,\n  Buff枚举,\n  循环日志数据类型,\n  循环基础技能数据类型,\n  角色状态信息类型,\n  技能释放记录数据,\n  待生效事件,\n  技能运行数据类型,\n} from './type'\n\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport { 获取加速等级 } from '@/工具函数/data'\nimport 获取技能信息 from '@/数据/数据工具/获取技能等级信息'\n\nimport 流血 from './DOT类/流血'\nimport 截辕 from './DOT类/截辕'\nimport 行云势一 from './技能类/行云势一'\nimport 行云势二 from './技能类/行云势二'\nimport 行云势三 from './技能类/行云势三'\nimport 决云势一 from './技能类/决云势一'\nimport 决云势二 from './技能类/决云势二'\nimport 横云势一 from './技能类/横云势一'\nimport 横云势二 from './技能类/横云势二'\nimport 停云势 from './技能类/停云势'\nimport 留客雨 from './技能类/留客雨'\nimport 孤风破浪 from './技能类/孤风破浪'\nimport 灭影追风 from './技能类/灭影追风'\nimport 换行 from './技能类/换行'\nimport { 每秒郭氏帧 } from '@/数据/常量'\n\nconst { 技能系数 } = 获取当前数据()\n\ninterface SimulatorCycleProps {\n  测试循环: string[]\n  加速值: number\n  网络延迟: number\n  奇穴: string[]\n  起手留层数: number\n  大橙武模拟: boolean\n  开启武学助手: boolean\n}\n\nclass 循环主类 {\n  循环执行结果: '成功' | '异常' = '成功'\n  循环异常信息 = { 异常索引: 0, 异常信息: '' }\n  测试循环: string[] = []\n  奇穴: string[] = []\n  加速等级 = 0\n  网络延迟 = 0\n  角色状态信息: 角色状态信息类型 = {\n    锐意: 60,\n  }\n  当前自身buff列表: Buff枚举 = {}\n  当前目标buff列表: Buff枚举 = {}\n  当前时间 = 0\n  开始释放上一个技能的时间 = 0\n  战斗日志: 循环日志数据类型[] = []\n  技能释放记录: 技能释放记录数据[] = []\n  Buff和Dot数据: Buff枚举 = {}\n  技能基础数据: 循环基础技能数据类型[] = []\n  GCD组: 技能GCD组 = {\n    公共: 0,\n  }\n  技能类实例集合: 技能类实例集合 = {}\n  云刀上次造成伤害时间: number | undefined = undefined\n  大橙武模拟 = false\n  待生效事件队列: 待生效事件[] = []\n  上一次每两秒回复锐意时间点 = 0\n  开启武学助手 = false\n\n  // 初始化创建\n  constructor(props: SimulatorCycleProps) {\n    // 模拟开始后不会变动的数据\n    this.测试循环 = props.测试循环\n    this.大橙武模拟 = props.大橙武模拟\n    this.奇穴 = props.奇穴\n    this.加速等级 = 获取加速等级(props.加速值)\n\n    // !无界体感延迟多一段，这里比PC多按1帧延迟计算\n    // !武学助手自带-1段加速\n    this.网络延迟 = props.网络延迟 + (props.开启武学助手 ? 2 : 0)\n\n    this.Buff和Dot数据 = 根据奇穴修改buff数据()\n    this.技能基础数据 = 根据奇穴修改技能数据()\n\n    // 模拟初始化\n    this.初始化技能实例类()\n    this.当前自身buff列表 = props.起手留层数\n      ? { ...起手留客雨BUFF(this.Buff和Dot数据, props.起手留层数) }\n      : {}\n    this.当前目标buff列表 = {}\n    this.角色状态信息 = {\n      锐意: 60,\n    }\n    this.上一次每两秒回复锐意时间点 = 0\n    this.开启武学助手 = props.开启武学助手\n    this.重置循环执行结果()\n  }\n\n  重置循环执行结果() {\n    this.循环执行结果 = '成功'\n    this.循环异常信息 = { 异常索引: 0, 异常信息: '' }\n  }\n\n  初始化技能实例类() {\n    this.技能类实例集合 = {\n      '行云势·一': new 行云势一(this),\n      '行云势·二': new 行云势二(this),\n      '行云势·三': new 行云势三(this),\n      '决云势·一': new 决云势一(this),\n      '决云势·二': new 决云势二(this),\n      '横云势·一': new 横云势一(this),\n      '横云势·二': new 横云势二(this),\n      停云势: new 停云势(this),\n      留客雨: new 留客雨(this),\n      孤风破浪: new 孤风破浪(this),\n      灭影追风: new 灭影追风(this),\n      流血: new 流血(this),\n      截辕: new 截辕(this),\n      换行: new 换行(this),\n    }\n  }\n\n  添加buff({ 名称, 对象 = '目标', 事件时间 = this.当前时间, 新增层数 = 1, 只添加日志 = false }) {\n    const 当前层数 =\n      对象 === '自身'\n        ? this.当前自身buff列表[名称]?.当前层数\n        : this.当前目标buff列表[名称]?.当前层数\n\n    const 新buff对象 = {\n      ...this.Buff和Dot数据[名称],\n      当前层数: Math.min((当前层数 || 0) + 新增层数, this.Buff和Dot数据[名称].最大层数 || 1),\n      刷新时间: 事件时间,\n    }\n    if (新buff对象.当前层数 !== 当前层数 && 新buff对象.当前层数 !== 1) {\n      this.添加战斗日志({\n        日志: `${名称}层数变为【${新buff对象.当前层数}】`,\n        日志类型: 对象 === '自身' ? '自身buff变动' : '目标buff变动',\n        日志时间: 事件时间,\n      })\n    } else {\n      this.添加战斗日志({\n        日志: `${对象}获得${名称}`,\n        日志类型: 对象 === '自身' ? '自身buff变动' : '目标buff变动',\n        日志时间: 事件时间,\n      })\n    }\n\n    if (!只添加日志) {\n      if (对象 === '自身') {\n        this.当前自身buff列表[名称] = { ...新buff对象 }\n      } else {\n        this.当前目标buff列表[名称] = { ...新buff对象 }\n      }\n    }\n  }\n\n  卸除buff({\n    名称,\n    buff刷新时间 = 0,\n    对象 = '目标',\n    事件时间 = this.当前时间,\n    卸除层数 = 1,\n    只添加日志 = false,\n  }) {\n    const 当前层数 =\n      对象 === '自身'\n        ? this.当前自身buff列表[名称]?.当前层数\n        : this.当前目标buff列表[名称]?.当前层数\n\n    if (当前层数 && 当前层数 >= 0) {\n      if (当前层数 - 卸除层数 > 0) {\n        this.添加战斗日志({\n          日志: `${名称}层数变为【${当前层数 - 卸除层数}】`,\n          日志类型: 对象 === '自身' ? '自身buff变动' : '目标buff变动',\n          日志时间: 事件时间,\n        })\n        if (!只添加日志) {\n          const 新buff对象 = {\n            ...this.Buff和Dot数据[名称],\n            当前层数: 当前层数 - 卸除层数,\n            刷新时间: buff刷新时间 || 事件时间,\n          }\n          if (对象 === '自身') {\n            this.当前自身buff列表[名称] = { ...新buff对象 }\n          } else {\n            this.当前目标buff列表[名称] = { ...新buff对象 }\n          }\n        }\n      } else {\n        this.添加战斗日志({\n          日志: `${对象}失去${名称}`,\n          日志类型: 对象 === '自身' ? '自身buff变动' : '目标buff变动',\n          日志时间: 事件时间,\n        })\n        if (!只添加日志) {\n          if (对象 === '自身') {\n            delete this.当前自身buff列表[名称]\n          } else {\n            delete this.当前目标buff列表[名称]\n          }\n        }\n      }\n    } else if (只添加日志) {\n      this.添加战斗日志({\n        日志: `${对象}失去${名称}`,\n        日志类型: 对象 === '自身' ? '自身buff变动' : '目标buff变动',\n        日志时间: 事件时间,\n      })\n    }\n  }\n\n  // 校验奇穴是否存在\n  校验奇穴是否存在(待判断奇穴) {\n    return this?.奇穴?.includes(待判断奇穴)\n  }\n\n  // ----------------- 时间、GCD、CD相关算法 start----------------- //\n  /**\n   *\n   * @param 增加时间方法\n   * @description 每次增加时间方法都要同步推进GCD\n   */\n  增加时间(time) {\n    this.跳过全部GCD时间(time)\n    // 增加时间\n    this.当前时间 = this.当前时间 + (time > 0 ? time : 0 || 0)\n    this.DOT结算与更新()\n    this.清空已经消失的buff()\n  }\n\n  跳过全部GCD时间(time) {\n    // 减少GCD剩余时间\n    const 新GCD组: 技能GCD组 = { 公共: 0 }\n    Object.keys(this.GCD组).map((key) => {\n      新GCD组[key] = Math.max((this.GCD组[key] || 0) - time, 0)\n    })\n    this.GCD组 = { ...新GCD组 }\n  }\n\n  技能释放前检查GCD统一方法(当前技能: 循环基础技能数据类型) {\n    let 校验GCD组: string | string[] = 当前技能.技能GCD组 as any\n    if (typeof 校验GCD组 === 'object') {\n      if (校验GCD组?.length) {\n        // 大部分技能只检查自己的GCD\n        const GCD = Math.max(this.GCD组[校验GCD组?.[0]] || 0, this.GCD组[校验GCD组?.[1]] || 0)\n        // 武学助手的无GCD技能自带多-1段加速\n        // if (当前技能.技能GCD组 === '自身' && this.开启武学助手) {\n        //   GCD = GCD + 0\n        // }\n        // 增加GCD\n        return GCD || 0\n      }\n    } else {\n      if (当前技能.技能GCD组 === '自身') {\n        校验GCD组 = 当前技能?.技能名称\n      }\n      if (校验GCD组) {\n        // 大部分技能只检查自己的GCD\n        const GCD = this.GCD组[校验GCD组]\n        // 武学助手的无GCD技能自带多-1段加速\n        // if (当前技能.技能GCD组 === '自身' && this.开启武学助手) {\n        //   GCD = GCD + 0\n        // }\n        // 增加GCD\n        return GCD || 0\n      }\n    }\n    return 0\n  }\n\n  // 对所有有CD技能检查和充能\n  对所有有CD技能检查和充能() {\n    Object.keys(this.技能类实例集合).forEach((key) => {\n      const 实例 = this.技能类实例集合[key]\n      if (实例?.技能运行数据) {\n        const 运行数据: 技能运行数据类型 = 实例?.技能运行数据\n        const 待充能时间点 = 运行数据?.待充能时间点\n        if (待充能时间点?.length) {\n          const 新待充能时间点 = 待充能时间点?.filter((item) => item > this.当前时间)\n          实例?.更新技能运行数据({ 待充能时间点: 新待充能时间点 })\n        }\n      }\n    })\n  }\n\n  技能释放前检查运行数据(当前技能: 循环基础技能数据类型, 技能实例: 检查运行数据实例类型, GCD) {\n    let 等待CD时间 = 0\n    const 可以释放时间 = this.当前时间 + GCD || 0\n    if (技能实例?.技能运行数据) {\n      const 待充能时间点 = 技能实例?.技能运行数据?.待充能时间点\n      if (待充能时间点?.length >= (当前技能?.最大充能层数 || 1)) {\n        const 可释放时间 = 待充能时间点?.[0]\n        // 当前没有层数可用，需要等待充能\n        if (可释放时间 > 可以释放时间) {\n          等待CD时间 = 可释放时间 - 可以释放时间\n        }\n      }\n    }\n    return 等待CD时间\n  }\n\n  技能释放后更新运行数据(\n    当前技能: 循环基础技能数据类型,\n    技能实例: 检查运行数据实例类型,\n    增加CD?: number\n  ) {\n    const 实际增加CD = 增加CD || 当前技能?.技能CD || 0\n    if (技能实例?.技能运行数据) {\n      const 待充能时间点 = 技能实例?.技能运行数据?.待充能时间点 || []\n      const 本次释放充能 =\n        (待充能时间点?.[待充能时间点.length - 1] || this.当前时间) + (实际增加CD || 0)\n      const 新待充能时间点 = [...待充能时间点, 本次释放充能]\n      技能实例?.更新技能运行数据({\n        待充能时间点: 新待充能时间点,\n      })\n    }\n  }\n\n  // ----------------- 时间、GCD、CD相关算法 end----------------- //\n\n  // 添加战斗日志\n  添加战斗日志(log: 循环日志数据类型) {\n    const { 日志时间 = this.当前时间, ...rest } = log\n    this.战斗日志 = [\n      ...(this.战斗日志 || []),\n      {\n        日志时间: 日志时间,\n        ...rest,\n      },\n    ]\n  }\n\n  // 造成伤害\n  技能造成伤害(\n    来源,\n    伤害次数 = 1,\n    额外增益列表: string[] = [],\n    造成时间 = this.当前时间,\n    DOT伤害 = false\n  ) {\n    const 对应技能 = 技能系数?.find((item) => item.技能名称 === 来源)\n    const 技能增益列表 = 获取技能信息(对应技能)?.技能增益列表 || []\n\n    const 有关的buff列表 =\n      技能增益列表\n        ?.filter((item) => {\n          const 当前增益数据 = 转化buff和增益名称(item.增益名称, this.当前自身buff列表)\n          if (当前增益数据) {\n            if (造成时间) {\n              const 增益消失时间 = (当前增益数据?.刷新时间 || 0) + (当前增益数据?.最大持续时间 || 0)\n              return 造成时间 <= 增益消失时间 && !!当前增益数据\n            } else {\n              return !!当前增益数据?.当前层数\n            }\n          } else {\n            return false\n          }\n        })\n        ?.map((item) => {\n          // DOT伤害实时部分buff吃快照，由额外增益列表传入\n          if (\n            (['灭影追风·悟', '大橙武增伤']?.includes(item?.增益名称) ||\n              item?.增益名称?.includes('披靡·悟')) &&\n            DOT伤害\n          ) {\n            return ''\n          } else {\n            return item.增益名称\n          }\n        })\n        .filter((item) => !!item) || []\n\n    const 总增益列表 = 有关的buff列表.concat(额外增益列表)\n\n    this.添加战斗日志({\n      日志: 来源,\n      日志类型: '造成伤害',\n      日志时间: 造成时间,\n      buff列表: 总增益列表 || [],\n      其他数据: {\n        伤害次数: 伤害次数,\n      },\n    })\n  }\n\n  检查GCD(当前技能: 循环基础技能数据类型, 技能实例, i) {\n    let GCD = 0\n    if (技能实例?.检查GCD) {\n      GCD = 技能实例?.检查GCD?.(i)\n    } else {\n      GCD = this.技能释放前检查GCD统一方法(当前技能)\n    }\n    return GCD\n  }\n\n  // 判断GCD，技能CD等\n  技能释放前(当前技能: 循环基础技能数据类型, 技能实例, i) {\n    let GCD = 0\n    let 等待CD = 0\n\n    // 判断是否为当前箭袋第一个技能\n    if (i >= 0) {\n      // 判断上一个技能对于本技能是否有GCD限制\n      if (当前技能?.技能GCD组) {\n        GCD = this.检查GCD(当前技能, 技能实例, i)\n      }\n      // 判断技能CD，如果存在CD。增加等待时间\n      if (当前技能?.技能CD) {\n        等待CD = this.技能释放前检查运行数据(当前技能, 技能实例, GCD)\n      }\n    }\n    // const 延迟等待 = this.当前时间 && (GCD || 等待CD) ? this.网络延迟 : 0\n    const 延迟等待 = this.当前时间 ? this.网络延迟 : 0\n\n    const 技能计划释放时间 = this.当前时间 + GCD + 延迟等待\n    return {\n      技能计划释放时间: 技能计划释放时间,\n      技能预估释放时间: 技能计划释放时间 + 等待CD,\n      等待CD,\n    }\n  }\n\n  技能GCD和CD处理(\n    等待CD,\n    技能预估释放时间,\n    当前技能: 循环基础技能数据类型,\n    技能实例: 检查运行数据实例类型\n  ) {\n    // 判断在处理完特殊事件以后，剩余的待定时间还有多少\n    const 时间差 = 技能预估释放时间 - this.当前时间\n    if (时间差 && 时间差 > 0) {\n      this.增加时间(时间差)\n    }\n    if (等待CD) {\n      this.添加战斗日志({\n        日志: `【${当前技能?.技能名称}】等技能CD【${等待CD}】帧`,\n        日志类型: '等CD',\n        日志时间: 技能预估释放时间,\n      })\n      // const 当前层数 = 技能实例?.技能运行数据?.当前层数\n      // const 新层数 = Math.min(当前层数 + 1, 当前技能?.最大充能层数 || 1)\n      // 技能实例?.更新技能运行数据({ 当前层数: 新层数 })\n    }\n    const 待充能时间点 = 技能实例?.技能运行数据?.待充能时间点\n    const 新待充能时间点 = 待充能时间点?.filter((item) => item > 技能预估释放时间)\n    技能实例?.更新技能运行数据?.({ 待充能时间点: 新待充能时间点 })\n  }\n\n  // 增加技能GCD\n  增加技能GCD(当前技能: 循环基础技能数据类型) {\n    // GCD处理\n    if (当前技能?.技能GCD组) {\n      let 待更新GCD组: string | string[] = 当前技能.技能GCD组 as any\n      if (typeof 待更新GCD组 === 'object') {\n        if (待更新GCD组?.length) {\n          待更新GCD组?.forEach((key) => {\n            this.GCD组[key] = (this.GCD组[key] || 0) + 当前技能?.技能释放后添加GCD - this.加速等级\n          })\n        }\n      } else {\n        if (当前技能.技能GCD组 === '自身') {\n          待更新GCD组 = 当前技能?.技能名称\n        }\n        if (待更新GCD组) {\n          this.GCD组[待更新GCD组] =\n            (this.GCD组[待更新GCD组] || 0) + 当前技能?.技能释放后添加GCD - this.加速等级\n        }\n      }\n    }\n  }\n\n  技能成功开始释放(当前技能: 循环基础技能数据类型, 技能实例) {\n    this.增加技能GCD(当前技能)\n    this.增加技能CD(当前技能, 技能实例)\n  }\n\n  // 增加技能CD\n  增加技能CD(当前技能: 循环基础技能数据类型, 技能实例) {\n    // 技能CD处理\n    if (当前技能?.技能CD) {\n      if (技能实例?.技能释放后更新运行数据) {\n        技能实例.技能释放后更新运行数据?.()\n      } else {\n        this.技能释放后更新运行数据(当前技能, 技能实例)\n      }\n    }\n  }\n\n  // 判断添加GCD等\n  技能释放后(当前技能: 循环基础技能数据类型, 计划释放时间: number, 开始释放时间: number, 技能实例) {\n    const 技能释放记录结果 = 技能实例?.获取技能释放记录结果?.() || {}\n    // 技能释放记录\n    this.技能释放记录.push({\n      技能名称: 当前技能?.技能名称,\n      计划释放时间,\n      实际释放时间: 开始释放时间,\n      技能释放记录结果,\n    })\n  }\n\n  清空buff调用函数(对象: '自身' | '目标') {\n    const buff列表 = 对象 === '自身' ? this.当前自身buff列表 : this.当前目标buff列表\n\n    // 更新目标buff\n    Object.keys(buff列表).forEach((key) => {\n      const buff对象 = buff列表[key]\n      const buff应该消失时间 = (buff对象?.刷新时间 || 0) + (buff对象?.最大持续时间 || 0)\n      const 消失层数 = buff对象?.自然消失失去层数 || buff对象?.最大层数\n      if (buff应该消失时间 < this.当前时间) {\n        this.卸除buff({ 名称: key, 对象, 事件时间: buff应该消失时间, 卸除层数: 消失层数 })\n      }\n    })\n  }\n\n  清空已经消失的buff() {\n    // 更新目标buff\n    this.清空buff调用函数('目标')\n    // 更新自身buff\n    this.清空buff调用函数('自身')\n  }\n\n  // 对当前的DOT进行已过期的结算和剩余时间更新\n  DOT结算与更新() {\n    this.技能类实例集合?.流血?.结算流血伤害()\n    this.技能类实例集合?.截辕?.结算截辕伤害()\n  }\n\n  // 模拟轮次开始\n  本轮模拟开始前() {\n    this.重置循环执行结果()\n    this.DOT结算与更新()\n  }\n\n  // 模拟轮次释放结束\n  本轮模拟结束后() {\n    // 判断buff列表，清空已经消失的buff\n    this.清空已经消失的buff()\n    this.对所有有CD技能检查和充能()\n  }\n\n  // 技能释放校验\n  技能释放校验(技能实例, 当前技能) {\n    const 释放判断结果 = 技能实例.释放\n      ? 技能实例.释放?.() || { 可以释放: true }\n      : { 可以释放: true }\n    const 校验结果 = {\n      可以释放: 释放判断结果.可以释放,\n      异常信息: 释放判断结果.异常信息,\n    }\n    if (校验结果.可以释放) {\n      this.添加战斗日志?.({\n        日志: 当前技能?.技能名称,\n        日志类型: '释放技能',\n      })\n    }\n    return 校验结果\n  }\n\n  // 技能释放异常\n  技能释放异常(校验结果, 当前技能, i) {\n    this.添加战斗日志({\n      日志: `循环在第${i + 1}个技能${当前技能?.技能名称}异常终止`,\n      日志类型: '循环异常',\n    })\n    this.循环执行结果 = '异常'\n    if (校验结果?.异常信息) {\n      this.循环异常信息 = {\n        异常索引: i + 1,\n        异常信息: 校验结果?.异常信息,\n      }\n    }\n  }\n\n  待生效事件结算(结算判断时间 = this.当前时间) {\n    if (this.待生效事件队列.length) {\n      // 轮训执行完成所有的事件\n      const 轮训执行事件 = () => {\n        if (this.待生效事件队列[0]?.事件时间 <= 结算判断时间) {\n          // 先推进时间到事件时间\n          const 当前事件 = this.待生效事件队列[0]\n          this.DOT结算与更新()\n          this.增加时间(当前事件.事件时间 - this.当前时间)\n          this.添加战斗日志?.({\n            日志: `事件【${当前事件.事件名称}】触发`,\n            日志类型: '技能释放结果',\n            日志时间: this.当前时间,\n          })\n          if (当前事件.事件名称?.includes('卸除buff')) {\n            if (当前事件?.事件备注?.buff名称) {\n              this.卸除buff({\n                名称: 当前事件?.事件备注?.buff名称,\n                对象: 当前事件?.事件备注?.buff对象,\n                卸除层数: 当前事件?.事件备注?.卸除层数,\n                只添加日志: 当前事件?.事件备注?.buff类型 === 'DOT',\n              })\n            }\n          }\n          this.待生效事件队列?.shift()\n          if (this.待生效事件队列.length) {\n            轮训执行事件()\n          }\n        }\n      }\n\n      轮训执行事件()\n      // this.待生效事件队列 = [...未生效事件]\n    }\n  }\n\n  添加待生效事件队列(传入数据: 待生效事件[], 事件覆盖 = false) {\n    let 新待生效事件队列: 待生效事件[] = []\n    // 把原来事件中的同名事件修改时间\n    if (事件覆盖) {\n      if (this.待生效事件队列?.some((item) => item.事件名称 === 传入数据?.[0]?.事件名称)) {\n        新待生效事件队列 = this.待生效事件队列.map((item) => {\n          if (item.事件名称 === 传入数据?.[0]?.事件名称) {\n            return 传入数据?.[0]\n          } else {\n            return item\n          }\n        })\n      } else {\n        新待生效事件队列 = (this.待生效事件队列 || []).concat(传入数据 || [])\n      }\n    } else {\n      新待生效事件队列 = (this.待生效事件队列 || []).concat(传入数据 || [])\n    }\n    // 由于不确定待生效事件时间分布，重新排序\n    新待生效事件队列.sort((a, b) => {\n      return (a?.事件时间 || 0) - (b?.事件时间 || 0)\n    })\n    this.待生效事件队列 = [...新待生效事件队列]\n  }\n\n  删除待生效事件队列(事件名称) {\n    const 新待生效事件队列: 待生效事件[] = [...(this.待生效事件队列 || [])].filter(\n      (item) => item.事件名称 !== 事件名称\n    )\n    // 由于不确定待生效事件时间分布，重新排序\n    新待生效事件队列.sort((a, b) => {\n      return (a?.事件时间 || 0) - (b?.事件时间 || 0)\n    })\n    this.待生效事件队列 = [...新待生效事件队列]\n  }\n\n  // 模拟函数，一个技能的释放生命周期\n  模拟() {\n    for (let i = 0; i < this.测试循环.length; i++) {\n      this.本轮模拟开始前()\n      const 当前技能 = this?.技能基础数据?.find((item) => item?.技能名称 === this.测试循环[i])\n\n      if (当前技能) {\n        const 技能实例 = this.技能类实例集合[当前技能?.技能名称]\n        if (技能实例) {\n          技能实例?.释放前初始化?.()\n          // 获取预估技能释放时间，处理预估时间前的所有待生效事件，推进时间轴\n          const { 技能计划释放时间, 等待CD, 技能预估释放时间 } = this.技能释放前(\n            当前技能,\n            技能实例,\n            i\n          )\n          const 是否为读条技能 = !!技能实例?.读条时间?.()\n          if (是否为读条技能) {\n            技能实例?.读条?.(技能预估释放时间)\n          }\n          this.每秒回复锐意结算()\n          this.待生效事件结算(技能预估释放时间)\n          this.技能GCD和CD处理(等待CD, 技能预估释放时间, 当前技能, 技能实例)\n          this.技能成功开始释放(当前技能, 技能实例)\n          const 释放校验结果 = this.技能释放校验(技能实例, 当前技能)\n          this.清空已经消失的buff()\n          const 是否为最后一个技能 = i === this.测试循环.length - 1\n          const 开始释放时间 = this.当前时间\n          if (释放校验结果?.可以释放) {\n            技能实例.命中?.(是否为最后一个技能)\n            技能实例.造成伤害?.()\n            技能实例.释放后?.()\n          } else {\n            this.技能释放异常(释放校验结果, 当前技能, i)\n            break\n          }\n          this.技能释放后(当前技能, 技能计划释放时间, 开始释放时间, 技能实例)\n        }\n      }\n      this.本轮模拟结束后()\n    }\n  }\n\n  // 将日志按时间排序\n  日志排序() {\n    const 新日志 = [...(this.战斗日志 || [])]\n\n    新日志.sort((a, b) => {\n      return (a?.日志时间 || 0) - (b?.日志时间 || 0)\n    })\n\n    this.战斗日志 = [...(新日志 || [])]\n  }\n\n  获取当前各技能的运行状态() {\n    const 各技能当前运行状态 = {}\n\n    ;(Object.keys(this.技能类实例集合) || []).forEach((key) => {\n      各技能当前运行状态[key] = this.技能类实例集合[key]?.技能运行数据 || {}\n    })\n\n    return 各技能当前运行状态\n  }\n\n  获取各DOT的运行状态() {\n    const DOT运行数据 = {}\n    ;(Object.keys(this.技能类实例集合) || []).forEach((key) => {\n      if (this.技能类实例集合[key]?.DOT运行数据) {\n        DOT运行数据[key] = this.技能类实例集合[key]?.DOT运行数据 || {}\n      }\n    })\n    return DOT运行数据\n  }\n\n  // 职业特殊函数\n  增加锐意(锐意值, 来源, 添加时间 = this.当前时间) {\n    this.添加战斗日志({\n      日志: `${来源}回复锐意【${锐意值}】点`,\n      日志类型: '回复锐意',\n    })\n    const 更新后锐意 = (this.角色状态信息.锐意 || 0) + 锐意值\n    this.角色状态信息.锐意 = Math.min(更新后锐意, 60)\n    this.添加战斗日志({\n      日志: `锐意变为【${this.角色状态信息.锐意}】`,\n      日志类型: '自身buff变动',\n      日志时间: 添加时间,\n    })\n  }\n\n  减少锐意(锐意值, 来源) {\n    this.添加战斗日志({\n      日志: `${来源}消耗锐意【${锐意值}】点`,\n      日志类型: '消耗锐意',\n    })\n    const 更新后锐意 = (this.角色状态信息.锐意 || 0) - 锐意值\n    this.角色状态信息.锐意 = Math.max(更新后锐意, 0)\n    this.添加战斗日志({\n      日志: `锐意变为【${this.角色状态信息.锐意}】`,\n      日志类型: '自身buff变动',\n    })\n  }\n\n  每秒回复锐意结算() {\n    // 判断当前时间节点是否超过上一个锐意时间点大于等于两秒\n    if (this.当前时间 - this.上一次每两秒回复锐意时间点 >= 每秒郭氏帧 * 2) {\n      const 新的时间点 = this.上一次每两秒回复锐意时间点 + 每秒郭氏帧 * 2\n      this.增加锐意(5, '职业每2秒回复5点', 新的时间点)\n      this.上一次每两秒回复锐意时间点 = 新的时间点\n    }\n  }\n}\n\nexport default 循环主类\n\nexport type 循环主类类型 = typeof 循环主类\n","/**\n * 定义模拟循环类\n */\n\nimport { 角色状态信息类型 } from '../simulator/type'\nimport 循环主类 from './main'\n\ninterface SimulatorCycleProps {\n  测试循环: string[]\n  加速值: number\n  网络延迟: number\n  奇穴: string[]\n  角色状态信息?: 角色状态信息类型\n  // 当前自身buff列表?: Buff枚举\n  // 当前目标buff列表?: Buff枚举\n  起手留层数: number\n  大橙武模拟: boolean\n  开启武学助手: boolean\n}\n\nconst 模拟循环 = (props: SimulatorCycleProps) => {\n  const 模拟实例 = new 循环主类(props)\n  模拟实例.模拟()\n\n  模拟实例.日志排序()\n\n  const 当前各技能运行状态 = 模拟实例.获取当前各技能的运行状态()\n  const 当前DOT运行状态 = 模拟实例.获取各DOT的运行状态()\n\n  return {\n    最终日志: 模拟实例.战斗日志,\n    当前自身buff列表: 模拟实例.当前自身buff列表,\n    当前目标buff列表: 模拟实例.当前目标buff列表,\n    角色状态信息: 模拟实例.角色状态信息,\n    当前时间: 模拟实例.当前时间,\n    循环执行结果: 模拟实例.循环执行结果,\n    循环异常信息: 模拟实例.循环异常信息,\n    技能释放记录: 模拟实例.技能释放记录,\n    当前各技能运行状态,\n    当前DOT运行状态,\n    当前GCD组: 模拟实例.GCD组,\n    技能基础数据: 模拟实例.技能基础数据,\n  }\n}\n\nexport default 模拟循环\n","import { 循环数据 } from '@/@types/循环'\n\nconst 紫武手动: Partial<循环数据> = {\n  名称: '紫武_手动',\n  奇穴: ['斩涛·悟', '披靡·悟', '倒海·悟', '孤风破浪·悟'],\n  技能序列: [\n    '灭影追风',\n    '行云势·一',\n    '行云势·二',\n    '横云势·一',\n    '留客雨',\n    '横云势·二',\n    '行云势·三',\n    '行云势·一',\n    '孤风破浪',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '决云势·一',\n    '留客雨',\n    '决云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '横云势·一',\n    '留客雨',\n    '横云势·二',\n    '行云势·三',\n    '行云势·一',\n    '灭影追风',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '决云势·一',\n    '留客雨',\n    '决云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '横云势·一',\n    '留客雨',\n    '横云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '灭影追风',\n    '行云势·二',\n    '决云势·一',\n    '留客雨',\n    '决云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '横云势·一',\n    '留客雨',\n    '横云势·二',\n    '行云势·三',\n    '行云势·一',\n    '孤风破浪',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '决云势·一',\n    '留客雨',\n    '决云势·二',\n    '行云势·三',\n    '行云势·一',\n    '灭影追风',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '横云势·一',\n    '留客雨',\n    '横云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '决云势·一',\n    '留客雨',\n    '决云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '灭影追风',\n    '行云势·二',\n    '横云势·一',\n    '留客雨',\n    '横云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '决云势·一',\n    '留客雨',\n    '决云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '横云势·一',\n    '留客雨',\n    '横云势·二',\n    '行云势·三',\n    '行云势·一',\n    '灭影追风',\n    '行云势·二',\n    '孤风破浪',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '决云势·一',\n    '留客雨',\n    '决云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '横云势·一',\n    '留客雨',\n    '横云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '灭影追风',\n    '行云势·二',\n    '决云势·一',\n    '留客雨',\n    '决云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '横云势·一',\n    '留客雨',\n    '横云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '决云势·一',\n    '留客雨',\n    '决云势·二',\n    '行云势·三',\n    '行云势·一',\n    '灭影追风',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '横云势·一',\n    '留客雨',\n    '横云势·二',\n    '行云势·三',\n    '行云势·一',\n    '孤风破浪',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '决云势·一',\n    '留客雨',\n    '行云势·三',\n    '决云势·二',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '灭影追风',\n    '行云势·二',\n    '横云势·一',\n    '留客雨',\n    '横云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '决云势·一',\n    '留客雨',\n    '决云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '横云势·一',\n    '留客雨',\n    '横云势·二',\n    '行云势·三',\n    '行云势·一',\n    '灭影追风',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '决云势·一',\n    '留客雨',\n    '决云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '横云势·一',\n    '留客雨',\n    '横云势·二',\n    '行云势·三',\n    '行云势·一',\n    '孤风破浪',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '灭影追风',\n    '行云势·二',\n    '决云势·一',\n    '留客雨',\n    '行云势·三',\n    '决云势·二',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '横云势·一',\n    '留客雨',\n    '横云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '决云势·一',\n    '留客雨',\n    '决云势·二',\n    '行云势·三',\n    '行云势·一',\n    '灭影追风',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '横云势·一',\n    '留客雨',\n    '横云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '行云势·二',\n    '决云势·一',\n    '留客雨',\n    '行云势·三',\n    '决云势·二',\n    '行云势·一',\n    '行云势·二',\n    '行云势·三',\n    '行云势·一',\n    '灭影追风',\n    '孤风破浪',\n    '行云势·二',\n    '横云势·一',\n    '留客雨',\n    '横云势·二',\n  ],\n}\n\nexport default 紫武手动\n","import 紫武_手动 from './快速导入默认循环/启用循环/紫武_手动'\n// import 紫武_助手 from './快速导入默认循环/启用循环/紫武_助手'\n// import 橙武_手动 from './快速导入默认循环/启用循环/橙武_手动'\n// import 紫武_助手_风雪_一段 from './快速导入默认循环/启用循环/紫武_助手_风雪_一段'\n// import 紫武_助手_风雪_二段 from './快速导入默认循环/启用循环/紫武_助手_风雪_二段'\n// import 橙武_风雪 from './快速导入默认循环/启用循环/橙武_风雪'\n\nexport default [\n  紫武_手动,\n  // 紫武_助手,\n  // 橙武_手动,\n  // 紫武_助手_风雪_一段,\n  // 紫武_助手_风雪_二段,\n]\n","import { Button, Divider, Dropdown, Menu, message, Popover, Select, Tooltip } from 'antd'\nimport React from 'react'\nimport { 循环基础技能数据类型, 模拟信息类型 } from '../../simulator/type'\nimport 快速导入默认循环 from '../../constant/快速导入默认循环'\nimport { useAppSelector } from '@/hooks'\nimport './index.css'\nimport { 延迟设定 } from '@/数据/常量'\ninterface CycleModalHeaderProps {\n  cycle: 循环基础技能数据类型[]\n  设置自定义循环保存弹窗: (e: boolean) => void\n  清空循环: () => void\n  起手留层数: number\n  设置起手留层数: (e: number) => void\n  快速导入循环: (e: 循环基础技能数据类型[], 循环标记: string) => void\n  网络延迟: number\n  更新网络延迟: (e: number) => void\n  加速等级: number\n  更新加速等级: (e: number) => void\n  模拟信息: 模拟信息类型\n}\n\nfunction CycleModalHeader(props: CycleModalHeaderProps) {\n  const {\n    cycle,\n    设置自定义循环保存弹窗,\n    清空循环,\n    起手留层数,\n    设置起手留层数,\n    快速导入循环,\n    // 更新奇穴弹窗展示,\n    // 更新奇穴信息,\n    加速等级,\n    更新加速等级,\n    模拟信息,\n    网络延迟,\n    更新网络延迟,\n  } = props\n\n  const 自定义循环 = useAppSelector((state) => state?.data?.自定义循环列表)\n\n  const 快捷添加循环 = (名称, 类型 = '默认') => {\n    const 数据源 = 类型 === '默认' ? 快速导入默认循环 : 自定义循环\n\n    const 当前循环数据 = 数据源?.find((item) => item.名称 === 名称)\n\n    const 技能序列信息 = (当前循环数据?.技能序列 || [])\n      .map((item) => {\n        return 模拟信息?.技能基础数据?.find((a) => a?.技能名称 === item) as 循环基础技能数据类型\n      })\n      .filter((item) => item)\n\n    快速导入循环(技能序列信息, 当前循环数据?.标记 || '')\n    // if (当前循环数据?.奇穴) {\n    //   更新奇穴信息(当前循环数据?.奇穴)\n    // }\n  }\n\n  const 粘贴导入 = () => {\n    navigator.clipboard.readText().then((clipboardData) => {\n      if (!clipboardData) {\n        message.error('粘贴板内无可导入数据，请检查或重新复制')\n      } else {\n        const list = clipboardData?.split(',')\n        const 技能序列信息 = (list || [])\n          .map((item) => {\n            return 模拟信息?.技能基础数据?.find((a) => a?.技能名称 === item) as 循环基础技能数据类型\n          })\n          .filter((item) => item)\n        if (技能序列信息.length) {\n          快速导入循环(技能序列信息, '')\n          message.success('数据已全部导入')\n        } else {\n          message.error('粘贴板内无可导入数据，请检查或重新复制')\n        }\n      }\n    })\n  }\n\n  return (\n    <div className={'cycle-simulator-modal-header space-between'}>\n      <div className={'cycle-simulator-modal-title-wrapper'}>\n        <h1 className={'cycle-simulator-modal-title'}>循环模拟</h1>\n        <Popover\n          content={\n            <div>\n              <p>1、点击下方技能按钮添加至循环内</p>\n              <p>2、可以整行删除、复制本行到最后一行</p>\n              <p>3、可以在单行内拖动改变技能顺序</p>\n              <p>\n                更多使用说明详见：\n                <a href='https://www.jx3box.com/tool/75292' target='_blank' rel='noreferrer'>\n                  使用手册及FAQ\n                </a>\n              </p>\n            </div>\n          }\n        >\n          <span className={'cycle-simulator-help'}>如何使用</span>\n        </Popover>\n        {/* <Popover\n          content={\n            <div>\n              目前未支持的功能\n            </div>\n          }\n        >\n          <span className={'cycle-not-support'}>未支持功能</span>\n        </Popover> */}\n      </div>\n      <div className={'cycle-simulator-header-btns'}>\n        <Select\n          size='small'\n          className={'cycle-simulator-header-select'}\n          value={起手留层数}\n          onChange={设置起手留层数}\n          options={Array.from({ length: 4 }, (v, i) => i).map((a) => {\n            return {\n              value: a,\n              label: `${a}层披靡`,\n            }\n          })}\n        />\n        <Select\n          size='small'\n          className={'cycle-simulator-header-select'}\n          value={网络延迟}\n          onChange={更新网络延迟}\n          options={延迟设定}\n        />\n        <Select\n          size='small'\n          className={'cycle-simulator-header-select'}\n          value={加速等级}\n          onChange={更新加速等级}\n          options={Array.from({ length: 6 }, (v, i) => i).map((a) => {\n            return {\n              value: a,\n              label: `${a}段加速`,\n            }\n          })}\n        />\n        <Dropdown\n          overlay={\n            <Menu>\n              {快速导入默认循环?.map((item) => {\n                return (\n                  <Menu.Item key={item?.名称} onClick={() => 快捷添加循环(item?.名称)}>\n                    {item?.名称}\n                  </Menu.Item>\n                )\n              })}\n              {自定义循环?.length\n                ? 自定义循环.map((item, index) => {\n                    return (\n                      <Menu.Item key={index} onClick={() => 快捷添加循环(item?.名称, '自定义')}>\n                        {item?.名称}\n                      </Menu.Item>\n                    )\n                  })\n                : null}\n              <Divider style={{ margin: '4px 0' }} />\n              <Menu.Item key='ctrlv' onClick={粘贴导入}>\n                粘贴导入\n              </Menu.Item>\n            </Menu>\n          }\n        >\n          <Button size='small'>导入循环</Button>\n        </Dropdown>\n        {/* <Tooltip title={'本奇穴设置只会在循环模拟器内生效，不影响外部'}>\n          <Button size='small' onClick={() => 更新奇穴弹窗展示(true)}>\n            奇穴设置\n          </Button>\n        </Tooltip> */}\n        <Button size='small' onClick={() => 清空循环()} danger>\n          清空循环\n        </Button>\n        <Tooltip title='自定义循环和原计算器其他循环的dps会心期望计算方式不同。会导致最终数值偏差。请勿进行跨循环比较。'>\n          <Button\n            size='small'\n            type='primary'\n            onClick={() => 设置自定义循环保存弹窗(true)}\n            disabled={cycle?.length < 1 || 模拟信息?.循环执行结果 === '异常'}\n          >\n            保存为自定义循环\n          </Button>\n        </Tooltip>\n      </div>\n    </div>\n  )\n}\n\nexport default CycleModalHeader\n","import React from 'react'\nimport { 角色状态信息类型 } from '../../../simulator/type'\n\nimport { Progress } from 'antd'\nimport './index.css'\n\ninterface RuiyiProps {\n  角色状态信息: 角色状态信息类型\n}\n\nfunction Ruiyi(props: RuiyiProps) {\n  const { 角色状态信息 } = props\n\n  const 当前锐意 = 角色状态信息?.锐意 || 0\n\n  return (\n    <div className={'cycle-status-bar-content'}>\n      <div className={'cycle-status-bar-title'}>锐意</div>\n      <div className={'cycle-status-bar-body'}>\n        <Progress\n          className={'cycle-status-bar-ruiyi'}\n          percent={(当前锐意 / 60) * 100}\n          format={(percent) => `${Math.round((+(percent || 0) / 100) * 60)}`}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Ruiyi\n","import React from 'react'\n\nimport { Space, Tooltip } from 'antd'\nimport { Buff枚举, DOT列表 } from '../../../simulator/type'\nimport { 每秒郭氏帧 } from '@/数据/常量'\nimport { 原始Buff数据 } from '../../../constant/skill'\nimport './index.css'\n\ninterface BuffProps {\n  title: string\n  buff列表: Buff枚举\n  DOT列表?: DOT列表\n  当前时间点: number\n}\n\nfunction Buff(props: BuffProps) {\n  const { title, buff列表, DOT列表 = {}, 当前时间点 } = props\n\n  const 当前buff列表 = Object.keys(buff列表).map((item) => buff列表[item])\n  const 当前Dot列表 = Object.keys(DOT列表)\n    .map((item) => {\n      const 原始数据 = 原始Buff数据?.[item]\n      return {\n        ...DOT列表[item],\n        ...原始数据,\n      }\n    })\n    ?.filter((item) => item?.待生效数据?.length)\n\n  return (\n    <div className={'cycle-status-bar-content cycle-status-bar-buff-content'}>\n      <div className={'cycle-status-bar-title'}>{title}</div>\n      <Space className={'cycle-status-bar-buff-list'} size={[8, 8]} wrap>\n        {当前buff列表?.length\n          ? 当前buff列表.map((item) => {\n              const 应该消失时间 = (item.刷新时间 || 0) + (item.最大持续时间 || 0)\n              const 剩余时间 = 应该消失时间 - 当前时间点 || 0\n              const 剩余时间秒 = (剩余时间 / 每秒郭氏帧).toFixed(1)\n              const 层数 = item.当前层数 || 0\n              return (\n                <div className={'cycle-status-bar-buff'} key={item.名称}>\n                  <div className={'cycle-status-bar-buff-item'}>\n                    <Tooltip\n                      title={\n                        <div>\n                          <>{`${item.名称}${层数 > 1 ? `${层数}层` : ''}`}</>\n                          <p>{item.备注}</p>\n                        </div>\n                      }\n                    >\n                      <img className={'cycle-status-bar-buff-img'} src={item.图标} />\n                    </Tooltip>\n                    {层数 > 1 ? (\n                      <span className={'cycle-status-bar-buff-count'}>{item.当前层数}</span>\n                    ) : null}\n                  </div>\n                  <p\n                    className={`cycle-status-bar-buff-second ${\n                      剩余时间 < 每秒郭氏帧 * 2 ? 'cycle-status-bar-buff-second-limit' : ''\n                    }`}\n                  >\n                    {剩余时间秒}\n                  </p>\n                </div>\n              )\n            })\n          : null}\n        {当前Dot列表?.length\n          ? 当前Dot列表.map((item) => {\n              const 最后一跳 = item.待生效数据?.[item.待生效数据.length - 1] || {}\n              const 应该消失时间 = 最后一跳?.生效时间 || 0\n              const 剩余时间 = 应该消失时间 - 当前时间点 || 0\n              const 剩余时间秒 = (剩余时间 / 每秒郭氏帧).toFixed(1)\n              const 层数 = 最后一跳.当前层数 || 0\n              return (\n                <div className={'cycle-status-bar-buff'} key={item.名称}>\n                  <div className={'cycle-status-bar-buff-item'}>\n                    <Tooltip\n                      title={\n                        <div>\n                          <p>{`${item.名称}${层数 > 1 ? `${层数}层` : ''}`}</p>\n                          <p>{item.备注}</p>\n                        </div>\n                      }\n                    >\n                      <img className={'cycle-status-bar-buff-img'} src={item.图标} />\n                    </Tooltip>\n                    {层数 > 1 ? (\n                      <span className={'cycle-status-bar-buff-count'}>{层数}</span>\n                    ) : null}\n                  </div>\n                  <p\n                    className={`cycle-status-bar-buff-second ${\n                      剩余时间 < 每秒郭氏帧 * 2 ? 'cycle-status-bar-buff-second-limit' : ''\n                    }`}\n                  >\n                    {剩余时间秒}\n                  </p>\n                </div>\n              )\n            })\n          : null}\n        {!当前buff列表?.length && !当前Dot列表?.length ? (\n          <p className={'cycle-buff-empty'}>无</p>\n        ) : null}\n      </Space>\n    </div>\n  )\n}\n\nexport default Buff\n","import React from 'react'\nimport { Modal, ModalProps, Table } from 'antd'\nimport 循环模拟技能基础数据, { 日志类型数组 } from '../../../../constant/skill'\nimport { 每秒郭氏帧 } from '@/数据/常量'\nimport { 循环日志数据类型 } from '../../../../simulator/type'\nimport '../../../../index.css'\n\ninterface BattleLogModalProps extends ModalProps {\n  logData: 循环日志数据类型[]\n}\n\nconst BattleLogModal: React.FC<BattleLogModalProps> = (props) => {\n  const { open, onCancel, logData } = props\n\n  const columns = [\n    {\n      title: '日志',\n      dataIndex: '日志',\n      filters: [...循环模拟技能基础数据, { 技能名称: '流血' }]?.map((item) => {\n        return {\n          text: item?.技能名称,\n          value: item?.技能名称,\n        }\n      }),\n      onFilter: (value: any, record) => {\n        return record.日志?.includes(value) || record?.日志类型?.includes(value)\n      },\n    },\n    {\n      title: '日志类型',\n      dataIndex: '日志类型',\n      filters: 日志类型数组?.map((item) => {\n        return {\n          text: item,\n          value: item,\n        }\n      }),\n      onFilter: (value: any, record) => record.日志类型.indexOf(value) === 0,\n    },\n    {\n      title: '伤害次数',\n      dataIndex: '伤害次数',\n      render: (_, row) => {\n        return row?.其他数据?.伤害次数 || ''\n      },\n    },\n    {\n      title: 'buff列表',\n      dataIndex: 'buff列表',\n      render: (_, record) => {\n        return record.日志类型 === '造成伤害' ? (_ || [])?.join(',') || '-' : '-'\n      },\n    },\n    {\n      title: '日志帧',\n      dataIndex: '日志时间',\n      render: (_) => {\n        return _\n      },\n    },\n    {\n      title: '日志秒',\n      dataIndex: '日志秒',\n      render: (_, row) => {\n        return row?.日志时间 / 每秒郭氏帧\n      },\n    },\n    // {\n    //   title: '造成伤害',\n    //   dataIndex: '造成伤害',\n    // },\n    // {\n    //   title: '造成总伤害',\n    //   dataIndex: '造成总伤害',\n    // },\n    // {\n    //   title: '秒伤',\n    //   dataIndex: '秒伤',\n    // },\n  ]\n\n  return (\n    <Modal\n      className='cycle-simulator-modal'\n      open={open}\n      onCancel={onCancel}\n      title={\n        <div className={'cycle-simulator-modal-header'}>\n          <h1 className={'cycle-simulator-modal-title'}>战斗日志</h1>\n        </div>\n      }\n      width={'80%'}\n      centered\n      footer={false}\n    >\n      <Table\n        dataSource={logData}\n        columns={columns}\n        size='small'\n        pagination={{ pageSize: 100, showTotal: (total) => total }}\n      />\n    </Modal>\n  )\n}\n\nexport default BattleLogModal\n","import React from 'react'\nimport 结果统计 from '@/功能模块/计算结果/结果统计'\nimport { 计算结果技能列表类型 } from '@/@types/输出'\nimport '../../../../index.css'\n\ninterface SkillCountModalProps {\n  open: boolean\n  onCancel: () => void\n  dpsList: 计算结果技能列表类型[]\n  total: number\n}\n\nconst SkillCountModal: React.FC<SkillCountModalProps> = (props) => {\n  const { open, onCancel, total, dpsList } = props\n\n  return (\n    <结果统计\n      计算结果={{\n        总伤: total,\n        计算结果技能列表: dpsList,\n      }}\n      visible={open}\n      onClose={() => onCancel()}\n    />\n  )\n}\n\nexport default SkillCountModal\n","import { 循环日志数据类型 } from '../../../../../simulator/type'\n\nconst 过滤的buff列表 = ['长溯']\n\nexport const 获取Buff覆盖率 = (日志: 循环日志数据类型[], 总战斗用时: number) => {\n  // 以buff个体分类，组成数字数组代表buff持续时间段\n  const Buff枚举: {\n    [key: string]: number[][]\n  } = {}\n  const 覆盖率 = {}\n\n  // 遍历日志塞入数组\n  for (let i = 0; i < 日志.length; i++) {\n    if (\n      (日志[i]?.日志类型 === '目标buff变动' || 日志[i]?.日志类型 === '自身buff变动') &&\n      (日志[i]?.日志?.includes('获得') || 日志[i]?.日志?.includes('失去'))\n    ) {\n      // 当前buff信息\n      const logName = 日志[i]?.日志\n      const type = logName?.includes('获得') ? 'get' : 'lose'\n      const buffName = type === 'get' ? logName?.split('获得')?.[1] : logName?.split('失去')?.[1]\n      const currentTime: number = 日志[i]?.日志时间 || 0\n      if (buffName && !过滤的buff列表?.includes(buffName)) {\n        if (type === 'get') {\n          if (Buff枚举?.[buffName]) {\n            // 判断当前最后一个数组的长度，如果为1代表还没结束，不处理。为2再塞入新的起始时间\n            if (Buff枚举[buffName][Buff枚举[buffName].length - 1]?.length > 1) {\n              Buff枚举[buffName].push([currentTime])\n            }\n          } else {\n            Buff枚举[buffName] = [[currentTime]]\n          }\n        } else if (type === 'lose') {\n          if (Buff枚举?.[buffName]) {\n            if (Buff枚举?.[buffName]?.[Buff枚举?.[buffName]?.length - 1]) {\n              Buff枚举[buffName][Buff枚举[buffName].length - 1].push(currentTime)\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // 循环结束，对没有结束时间的buff做补充，塞入总战斗用时作为结束时间\n  // 同时，计算各buff的覆盖率\n  Object.keys(Buff枚举).forEach((key) => {\n    if (Buff枚举[key]?.length) {\n      if (\n        Buff枚举[key]?.[Buff枚举[key]?.length - 1] &&\n        Buff枚举[key]?.[Buff枚举[key]?.length - 1]?.length < 2\n      ) {\n        Buff枚举[key][Buff枚举[key].length - 1].push(总战斗用时)\n      }\n\n      let 总持续时间 = 0\n      for (let i = 0; i < Buff枚举[key].length; i++) {\n        if (Buff枚举[key][i] && Buff枚举[key][i].length === 2) {\n          总持续时间 = 总持续时间 + Buff枚举[key][i][1] - Buff枚举[key][i][0]\n        }\n      }\n      覆盖率[key] = ((总持续时间 / 总战斗用时) * 100)?.toFixed(3)\n    }\n  })\n\n  return {\n    Buff枚举,\n    覆盖率,\n  }\n}\n\nexport const 格式化buff覆盖数组 = (Buff枚举) => {\n  const res: any[] = []\n  Object.keys(Buff枚举).forEach((key) => {\n    if (Buff枚举[key]?.length) {\n      Buff枚举[key].forEach((range) => {\n        res.push({ type: key, range: range })\n      })\n    }\n  })\n  return res\n}\n","import { Modal, ModalProps, Space } from 'antd'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { Chart } from '@antv/g2'\nimport { 循环日志数据类型 } from '../../../../../simulator/type'\nimport './index.css'\nimport { 格式化buff覆盖数组, 获取Buff覆盖率 } from './util'\n\ninterface BuffCountModalProps extends ModalProps {\n  open: boolean\n  onCancel: () => void\n  日志: 循环日志数据类型[]\n  总战斗用时: number // 总战斗用时\n}\n\nfunction BuffCountModal(props: BuffCountModalProps) {\n  const { open, onCancel, 日志, 总战斗用时 } = props\n  const [chartData, setChartData] = useState<any>()\n  const limitRef: any = useRef<any>()\n  const [覆盖率, 设置覆盖率] = useState<any>({})\n\n  useEffect(() => {\n    if (open) {\n      setTimeout(() => {\n        initChart()\n      }, 20)\n    }\n    if (open) {\n      limitRef.current = false\n    } else {\n      limitRef.current = false\n      设置覆盖率({})\n      setChartData(undefined)\n    }\n  }, [open, 日志, 总战斗用时])\n\n  const initChart = () => {\n    if (limitRef.current) {\n      return\n    }\n    limitRef.current = true\n\n    const chart = chartData\n      ? chartData\n      : new Chart({\n          container: 'cycle-buff-count-chart',\n          autoFit: true,\n          renderer: 'canvas',\n          padding: [24, 120, 100, 120],\n        })\n\n    chart.tooltip({\n      crosshairs: false,\n    })\n\n    if (!chartData) {\n      setChartData(chart)\n    }\n\n    const dataSource = getDataSource()\n\n    chart.source(dataSource, {\n      time: {\n        tickCount: 10,\n      },\n    })\n    chart.axis('time', {\n      label: {\n        style: {\n          textAlign: 'center', // 文本对齐方向，可取值为： start middle end\n          fontSize: 16, // 文本大小\n        },\n      },\n    })\n\n    const data = getDataSource()\n\n    chart.data(data)\n    chart.coordinate().transpose()\n    chart.interval().position('type*range').color('type').label('range', { offset: 10 })\n    // .color(DOMAIN_COLOR)\n    chart.render()\n    // setLoading(false)\n\n    setTimeout(() => {\n      limitRef.current = false\n    }, 10)\n  }\n\n  const getDataSource = () => {\n    const { Buff枚举, 覆盖率 } = 获取Buff覆盖率(日志, 总战斗用时)\n    设置覆盖率(覆盖率)\n    return 格式化buff覆盖数组(Buff枚举)\n  }\n\n  return (\n    <Modal\n      open={open}\n      onCancel={onCancel}\n      title={\n        <div className={'cycle-simulator-modal-header'}>\n          <h1 className={'cycle-simulator-modal-title'}>Buff覆盖情况（时间单位：帧）</h1>\n        </div>\n      }\n      width={'80%'}\n      centered\n      footer={false}\n    >\n      <Space className='cycle-buff-count-text' size={[16, 16]} wrap>\n        {Object.keys(覆盖率).map((item) => {\n          return (\n            <div key={item} className={'cycle-buff-count-text-wrap'}>\n              <span className='cycle-buff-count-text-label'>{item}：</span>\n              <span className='cycle-buff-count-text-value'>{覆盖率[item]}%</span>\n            </div>\n          )\n        })}\n      </Space>\n      {open ? <div id='cycle-buff-count-chart' className={'cycle-buff-count-chart'} /> : null}\n    </Modal>\n  )\n}\n\nexport default BuffCountModal\n","import React, { useState } from 'react'\nimport { Alert, Tooltip } from 'antd'\nimport { PieChartOutlined, CalendarOutlined, AlignLeftOutlined } from '@ant-design/icons'\nimport { 当前计算结果类型 } from '@/@types/输出'\n\nimport { 循环日志数据类型, 模拟信息类型 } from '../../../simulator/type'\n// import DpsResModal from './components/DpsResModal'\nimport BattleLogModal from './components/BattleLogModal'\nimport SkillCountModal from './components/SkillCountModal'\nimport BuffCountModal from './components/BuffCountModal'\nimport './index.css'\n\ninterface DpsResProps {\n  日志信息: 循环日志数据类型[]\n  模拟信息: 模拟信息类型\n  模拟DPS结果: 当前计算结果类型\n}\n\nfunction DpsRes(props: DpsResProps) {\n  const { 模拟信息, 日志信息, 模拟DPS结果 } = props\n\n  // dps曲线\n  // const [dpsModal, setDpsModal] = useState<boolean>(false)\n\n  // buff分析\n  const [buffCountModalOpen, setBuffCountModalOpen] = useState<boolean>(false)\n  // 日志log\n  const [logModalOpen, setLogModalOpen] = useState<boolean>(false)\n  // 技能统计\n  const [countModal, setCountModal] = useState<boolean>(false)\n\n  // const 开发中 = () => {\n  //   message.success('功能开发中，敬请期待')\n  // }\n\n  return (\n    <div\n      className={`cycle-bar-dps-res ${\n        模拟信息?.循环执行结果 === '异常' ? 'cycle-bar-dps-res-error' : ''\n      }`}\n    >\n      {模拟信息?.循环执行结果 === '异常' ? (\n        <div className={'cycle-dps-res-error'}>\n          <h1 className={'cycle-dps-res-error-title'}>循环异常</h1>\n          <Alert\n            type='error'\n            showIcon\n            message={`异常信息：${模拟信息?.循环异常信息?.异常信息?.信息}`}\n          />\n        </div>\n      ) : 模拟DPS结果?.秒伤 ? (\n        <div className={'cycle-dps-res-success'}>\n          <div className={'cycle-dps-res-success-content'}>\n            <h1 className={'cycle-dps-res-num'}>{模拟DPS结果?.秒伤}</h1>\n            <div className={'cycle-dps-res-success-text-content'}>\n              <div>\n                <span className={'cycle-dps-res-success-text'}>战斗用时</span>\n                <span className={'cycle-dps-res-success-text cycle-dps-res-success-highlight'}>\n                  {模拟DPS结果?.秒伤计算时间}秒\n                </span>\n              </div>\n              <div className={'cycle-dps-res-icons'}>\n                <Tooltip title='Buff分析' placement='left'>\n                  <PieChartOutlined\n                    className={'cycle-dps-res-icon'}\n                    onClick={() => setBuffCountModalOpen(true)}\n                  />\n                </Tooltip>\n                <Tooltip title='战斗日志' placement='left'>\n                  <CalendarOutlined\n                    className={'cycle-dps-res-icon'}\n                    onClick={() => setLogModalOpen(true)}\n                  />\n                </Tooltip>\n                <Tooltip title='技能统计' placement='left'>\n                  <AlignLeftOutlined\n                    className={'cycle-dps-res-icon'}\n                    onClick={() => setCountModal(true)}\n                  />\n                </Tooltip>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : null}\n      {/* dps结果 */}\n      {/* <DpsResModal open={dpsModal} onCancel={() => setDpsModal(false)} logData={日志信息} /> */}\n      {/* 战斗日志 */}\n      <BattleLogModal\n        open={logModalOpen}\n        onCancel={() => setLogModalOpen(false)}\n        logData={日志信息}\n      />\n      {/* 技能统计 */}\n      <SkillCountModal\n        open={countModal}\n        onCancel={() => setCountModal(false)}\n        dpsList={模拟DPS结果?.计算结果技能列表}\n        total={模拟DPS结果?.总伤}\n      />\n      {/* Buff分析 */}\n      {buffCountModalOpen && (\n        <BuffCountModal\n          open={buffCountModalOpen}\n          onCancel={() => setBuffCountModalOpen(false)}\n          日志={日志信息}\n          总战斗用时={模拟信息?.当前时间}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default DpsRes\n","// 当前角色状态栏，只用来展示\nimport React from 'react'\nimport { 当前计算结果类型 } from '@/@types/输出'\nimport { 循环日志数据类型, ShowCycleSingleSkill, 模拟信息类型 } from '../../simulator/type'\n\nimport Ruiyi from './ruiyi'\nimport Buff from './buff'\nimport DpsRes from './dpsRes'\nimport './index.css'\n\ninterface StatusBarProps {\n  模拟信息: 模拟信息类型\n  完整循环: ShowCycleSingleSkill[]\n  日志信息: 循环日志数据类型[]\n  模拟DPS结果: 当前计算结果类型\n}\n\nfunction StatusBar(props: StatusBarProps) {\n  const { 模拟信息, 日志信息, 模拟DPS结果 } = props\n\n  return (\n    <div className={'cycle-status-bar'}>\n      <Ruiyi 角色状态信息={模拟信息?.角色状态信息} />\n      <Buff\n        title='自身Buff'\n        buff列表={模拟信息?.当前自身buff列表}\n        当前时间点={模拟信息?.当前时间}\n      />\n      <Buff\n        title='目标Buff'\n        buff列表={模拟信息?.当前目标buff列表}\n        DOT列表={模拟信息?.当前DOT运行状态}\n        当前时间点={模拟信息?.当前时间}\n      />\n      <DpsRes 模拟信息={模拟信息} 日志信息={日志信息} 模拟DPS结果={模拟DPS结果} />\n    </div>\n  )\n}\n\nexport default StatusBar\n","import React from 'react'\nimport { 原始Buff数据 } from '../../constant/skill'\n\nfunction BuffItem({ data, ...rest }) {\n  const buff = 原始Buff数据?.[data]\n  return buff ? <img src={buff.图标} {...rest} /> : null\n}\n\nexport default BuffItem\n","// 技能循环显示技能单元\nimport React, { useMemo } from 'react'\nimport { Badge, Dropdown, Space, Tooltip } from 'antd'\nimport { CloseCircleFilled } from '@ant-design/icons'\nimport classNames from 'classnames'\nimport { ShowCycleSingleSkill, 模拟信息类型 } from '../../simulator/type'\nimport { 每秒郭氏帧 } from '@/数据/常量'\nimport BuffItem from './BuffItem'\nimport './index.css'\ninterface CycleSkillItemProps {\n  技能: ShowCycleSingleSkill\n  删除循环技能: (e: number) => void\n  模拟信息: 模拟信息类型\n  buff覆盖数据: number[]\n  更新buff覆盖数据: (e: number[]) => void\n  点击下拉菜单: (e: any) => void\n}\n\nfunction CycleSkillItem(props: CycleSkillItemProps) {\n  const { 技能, 删除循环技能, 模拟信息, buff覆盖数据, 更新buff覆盖数据, 点击下拉菜单 } = props\n\n  const 技能释放时间 = Math.round(((技能.实际释放时间 || 0) / 每秒郭氏帧) * 100) / 100\n  const 间隔CD = (技能.实际释放时间 || 0) - (技能.计划释放时间 || 0)\n  // 把帧转成秒，保留两位小数\n  const 剩余秒 = Math.round((间隔CD / 每秒郭氏帧) * 100) / 100\n  // 是否异常\n  // 存在异常索引\n  const 索引 = (模拟信息?.循环异常信息?.异常索引 || 0) + -1\n  const 是否异常 = 模拟信息?.循环执行结果 === '异常' ? (技能?.index || 0) >= 索引 : false\n  const 当前异常 = 模拟信息?.循环执行结果 === '异常' ? (技能?.index || 0) === 索引 : false\n\n  const 技能释放结果 = 技能?.技能释放记录结果 || {}\n\n  const 判断有无重要buff标记 = () => {\n    if (技能释放结果?.造成buff数据?.buff名称) {\n      更新buff覆盖数据([\n        技能释放结果?.造成buff数据?.buff开始时间,\n        技能释放结果?.造成buff数据?.buff结束时间,\n      ])\n    }\n  }\n\n  const 卸除重要buff标记 = () => {\n    更新buff覆盖数据([])\n  }\n\n  const 当前是否需要高亮展示在buff覆盖中 = useMemo(() => {\n    if (\n      (技能?.实际释放时间 || 0) <= buff覆盖数据?.[1] &&\n      (技能?.实际释放时间 || 0) >= buff覆盖数据?.[0]\n    ) {\n      return true\n    } else {\n      return false\n    }\n  }, [buff覆盖数据, 技能])\n\n  const cls = classNames(\n    'cycle-simulator-setting-skill',\n    是否异常 ? 'cycle-simulator-setting-skill-error' : '',\n    当前是否需要高亮展示在buff覆盖中 ? 'cycle-simulator-setting-skill-highlight' : ''\n  )\n\n  const 下拉菜单 = [\n    {\n      key: '前部插入',\n      label: (\n        <span>\n          在<span className='cycle-simulator-menu-tip-before'>前部</span>添加技能\n        </span>\n      ),\n    },\n    {\n      key: '后部插入',\n      label: (\n        <span>\n          在<span className='cycle-simulator-menu-tip-after'>后部</span>添加技能\n        </span>\n      ),\n    },\n  ]\n\n  return (\n    <Badge count={剩余秒} offset={[-52, 8]} className={'cycle-simulator-setting-skill-drag'}>\n      <Dropdown menu={{ items: 下拉菜单, onClick: 点击下拉菜单 }} trigger={['contextMenu']}>\n        <div className={cls} onMouseEnter={判断有无重要buff标记} onMouseLeave={卸除重要buff标记}>\n          <Tooltip\n            title={\n              <div>\n                <p>{技能?.技能名称}</p>\n                {技能释放结果.实际伤害技能 ? <p>伤害名称：{技能释放结果.实际伤害技能}</p> : null}\n                {技能释放时间 ? <p>释放时间：{技能释放时间}秒</p> : null}\n                {剩余秒 ? <p>释放等待CD：{剩余秒}秒</p> : null}\n                {技能释放结果?.重要buff列表?.length ? (\n                  <Space className={'cycle-simulator-setting-buff'} size={[8, 8]} wrap>\n                    {技能释放结果?.重要buff列表.map((item) => {\n                      return (\n                        <BuffItem\n                          data={item}\n                          key={item}\n                          className={'cycle-simulator-setting-buff-item'}\n                        />\n                      )\n                    })}\n                  </Space>\n                ) : null}\n                {是否异常 ? (\n                  当前异常 ? (\n                    <p>异常：{模拟信息?.循环异常信息?.异常信息?.信息}</p>\n                  ) : (\n                    <p>前置技能异常</p>\n                  )\n                ) : null}\n              </div>\n            }\n          >\n            <img className={'daozong-cycle-simulator-setting-skill-img'} src={技能?.图标} />\n          </Tooltip>\n          <CloseCircleFilled\n            className={'cycle-simulator-setting-skill-close'}\n            onClick={() => 删除循环技能(技能?.index || 0)}\n          />\n          {技能释放结果?.伤害段数 ? (\n            <span className={`cycle-simulator-setting-skill-count count${技能释放结果?.伤害段数}`}>\n              {技能释放结果?.伤害段数}\n            </span>\n          ) : null}\n        </div>\n      </Dropdown>\n    </Badge>\n  )\n}\n\nexport default CycleSkillItem\n","import React, { useMemo } from 'react'\nimport { 循环基础技能数据类型, 技能GCD组, 模拟信息类型 } from '../../simulator/type'\nimport { 每秒郭氏帧 } from '@/数据/常量'\nimport classNames from 'classnames'\nimport { Badge, Tooltip } from 'antd'\nimport { ERROR_ACTION } from '../../simulator/utils'\n\ninterface AddCycleSkillBtnProps {\n  技能: 循环基础技能数据类型\n  完整循环: 循环基础技能数据类型[]\n  onClick?: any\n  className?: string\n  模拟信息: 模拟信息类型\n  style?: any\n}\n\ninterface 异常信息数据 {\n  是否禁用?: boolean\n  角标数字?: number\n  异常描述?: string\n}\n\n// 添加循环技能按钮组件\nconst AddCycleSkillBtn: React.FC<AddCycleSkillBtnProps> = (props) => {\n  const { 技能, 模拟信息, onClick, className, ...rest } = props\n\n  const 释放等待CD = 计算可以释放时技能CD(模拟信息, 技能)\n  const 技能当前层数 = 计算技能当前层数(模拟信息, 技能)\n\n  const 异常信息: 异常信息数据 = useMemo(() => {\n    let 禁用信息 = {}\n    if (技能?.技能名称 === '行云势·一' && !!模拟信息?.当前自身buff列表?.['行链']?.当前层数) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.BUFF错误?.信息,\n      }\n    } else if (\n      技能?.技能名称 === '行云势·二' &&\n      模拟信息?.当前自身buff列表?.['行链']?.当前层数 !== 1\n    ) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.BUFF错误?.信息,\n      }\n    } else if (\n      技能?.技能名称 === '行云势·三' &&\n      模拟信息?.当前自身buff列表?.['行链']?.当前层数 !== 2\n    ) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.BUFF错误?.信息,\n      }\n    } else if (技能?.技能名称 === '决云势·二' && !模拟信息?.当前自身buff列表?.['决链']?.当前层数) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.BUFF错误?.信息,\n      }\n    } else if (技能?.技能名称 === '横云势·二' && !模拟信息?.当前自身buff列表?.['横链']?.当前层数) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.BUFF错误?.信息,\n      }\n    } else if (技能?.消耗锐意 && (模拟信息?.角色状态信息?.锐意 || 0) < 技能?.消耗锐意) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.锐意不足?.信息,\n      }\n    }\n    if (释放等待CD > 0 && 技能?.最大充能层数 && 技能?.最大充能层数 > 1) {\n      return {\n        ...禁用信息,\n        角标数字: 释放等待CD,\n        异常描述: `当前技能处于充能中，剩余${释放等待CD}秒`,\n      }\n    } else if (释放等待CD > 0) {\n      return {\n        ...禁用信息,\n        角标数字: 释放等待CD,\n        异常描述: `当前技能处于冷却中，剩余${释放等待CD}秒`,\n      }\n    } else {\n      return { ...禁用信息 }\n    }\n  }, [释放等待CD, 技能, 模拟信息])\n\n  // 点击前判断是否可以释放\n  const beforeOnClick = () => {\n    if (异常信息?.是否禁用) {\n      return\n    }\n    onClick()\n  }\n\n  const cls = classNames(className, 异常信息?.是否禁用 ? 'cycle-simulator-setting-btn-error' : '')\n\n  return (\n    <div onClick={beforeOnClick} className={cls} {...rest}>\n      <Tooltip title={异常信息?.异常描述 || 技能?.说明 || ''}>\n        <Badge count={异常信息?.角标数字} className={'cycle-add-btn-wrap'} offset={[0, 0]}>\n          <img className={`cycle-add-btn`} src={技能?.图标} />\n          {技能?.最大充能层数 && 技能?.最大充能层数 !== 1 ? (\n            <span className={'cycle-add-btn-count'}>{技能当前层数}</span>\n          ) : null}\n        </Badge>\n      </Tooltip>\n      <p className={'cycle-add-btn-text'}>{技能?.技能原始名称 || 技能?.技能名称}</p>\n    </div>\n  )\n}\n\nexport default AddCycleSkillBtn\nconst 计算可以释放时技能CD = (模拟信息: 模拟信息类型, 技能: 循环基础技能数据类型) => {\n  const 技能运行状态 = 模拟信息?.当前各技能运行状态?.[技能?.技能名称]\n  const 待充能时间点 = 技能运行状态?.待充能时间点\n\n  if (待充能时间点?.length) {\n    const GCD = 检查GCD(技能, 模拟信息.当前GCD组)\n    // 当前技能可以释放时间当前时间（为上一个技能释放结束时间）加上本技能释放前结算GCD\n    const 可以释放时间 = (模拟信息?.当前时间 || 0) + (GCD || 0)\n    const 下次预估释放时间 = 待充能时间点?.[0]\n    if (下次预估释放时间 > 可以释放时间) {\n      const 技能CD = 下次预估释放时间 - 可以释放时间\n      // 把帧转成秒，保留两位小数\n      const 剩余秒 = Math.round((技能CD / 每秒郭氏帧) * 100) / 100\n      return 剩余秒\n    } else {\n      return 0\n    }\n  } else {\n    return 0\n  }\n}\n\nconst 计算技能当前层数 = (模拟信息: 模拟信息类型, 技能: 循环基础技能数据类型) => {\n  const 技能运行状态 = 模拟信息?.当前各技能运行状态?.[技能?.技能名称]\n  return (技能?.最大充能层数 || 1) - (技能运行状态?.待充能时间点?.length || 0)\n}\n\nconst 检查GCD = (技能: 循环基础技能数据类型, GCD组: 技能GCD组) => {\n  let 校验GCD组: string = 技能.技能GCD组 as string\n  if (技能.技能GCD组 === '自身') {\n    校验GCD组 = 技能?.技能名称\n  }\n  if (校验GCD组) {\n    // 大部分技能只检查自己的GCD\n    const GCD = GCD组[校验GCD组]\n    return GCD\n  } else {\n    return 0\n  }\n}\n","export const 快捷添加数据: 快捷添加数据类型[] = [\n  {\n    名称: '横留横',\n    技能序列: ['横云势·一', '留客雨', '横云势·二'],\n    color: 'blue',\n  },\n  {\n    名称: '决留决',\n    技能序列: ['决云势·一', '留客雨', '决云势·二'],\n    color: 'red',\n  },\n  {\n    名称: '行行行',\n    技能序列: ['行云势·一', '行云势·二', '行云势·三'],\n    color: 'magenta',\n  },\n  {\n    名称: '停留',\n    技能序列: ['停云势', '留客雨'],\n    color: 'purple',\n  },\n]\n\nexport interface 快捷添加数据类型 {\n  名称: string\n  技能序列: string[]\n  color?: string\n}\n","import { Col, Radio, Row, Space, Tag, Tooltip } from 'antd'\nimport React from 'react'\nimport { 循环基础技能数据类型, 模拟信息类型 } from '../../simulator/type'\nimport AddCycleSkillBtn from './AddCycleSkillBtn'\nimport { 快捷添加数据, 快捷添加数据类型 } from './快捷添加'\nimport './index.css'\n\ninterface AddCycleSkillBtnsProps {\n  新增循环技能: (data: 循环基础技能数据类型) => void\n  批量新增循环: (data: 循环基础技能数据类型[]) => void\n  处理循环结果对象: { 完整循环: 循环基础技能数据类型[] }\n  模拟信息: 模拟信息类型\n  大橙武模拟: boolean\n  开启武学助手?: boolean\n  设置开启武学助手?: (e: boolean) => void\n}\n\nfunction AddCycleSkillBtns(props: AddCycleSkillBtnsProps) {\n  const { 新增循环技能, 批量新增循环, 处理循环结果对象, 模拟信息, 开启武学助手, 设置开启武学助手 } =\n    props\n\n  const 批量新增循环技能 = (数据: 快捷添加数据类型) => {\n    const 技能原始数据: 循环基础技能数据类型[] = 数据?.技能序列\n      .map((item) => {\n        return 模拟信息?.技能基础数据?.find((a) => a.技能名称 === item) || ({} as any)\n      })\n      .filter((item) => item)\n    if (技能原始数据?.length) {\n      批量新增循环(技能原始数据)\n    }\n  }\n\n  return (\n    <div className={'cycle-simulator-setting-btns'}>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'daozong-cycle-btn-type'}>傍身技能</span>\n        <Space className={'cycle-simulator-setting-skills'} size={[8, 16]} wrap>\n          {模拟信息?.技能基础数据\n            ?.filter((item) => !item?.创建循环不可选 && item?.技能类型 === '傍身')\n            .map((item) => {\n              return (\n                <AddCycleSkillBtn\n                  onClick={() => 新增循环技能(item)}\n                  key={item?.技能名称}\n                  className={'daozong-cycle-simulator-setting-btn'}\n                  完整循环={处理循环结果对象?.完整循环 || []}\n                  技能={item}\n                  模拟信息={模拟信息}\n                />\n              )\n            })}\n        </Space>\n      </div>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'daozong-cycle-btn-type'}>对阵技能</span>\n        <Space className={'cycle-simulator-setting-skills'} size={[8, 16]} wrap>\n          {模拟信息?.技能基础数据\n            ?.filter((item) => !item?.创建循环不可选 && item?.技能类型 === '对阵')\n            .map((item) => {\n              return (\n                <AddCycleSkillBtn\n                  onClick={() => 新增循环技能(item)}\n                  key={item?.技能名称}\n                  className={'daozong-cycle-simulator-setting-btn'}\n                  完整循环={处理循环结果对象?.完整循环 || []}\n                  技能={item}\n                  模拟信息={模拟信息}\n                />\n              )\n            })}\n        </Space>\n      </div>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'daozong-cycle-btn-type'}>绝技技能</span>\n        <Space className={'cycle-simulator-setting-skills'} size={[8, 16]} wrap>\n          {模拟信息?.技能基础数据\n            ?.filter((item) => !item?.创建循环不可选 && item?.技能类型 === '绝技')\n            .map((item) => {\n              return (\n                <AddCycleSkillBtn\n                  onClick={() => 新增循环技能(item)}\n                  key={item?.技能名称}\n                  className={'daozong-cycle-simulator-setting-btn'}\n                  完整循环={处理循环结果对象?.完整循环 || []}\n                  技能={item}\n                  模拟信息={模拟信息}\n                />\n              )\n            })}\n        </Space>\n      </div>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'daozong-cycle-btn-type'}>快捷添加</span>\n        <Row className={'cycle-simulator-setting-quick'} style={{ width: 200 }} gutter={[16, 8]}>\n          {快捷添加数据.map((item) => {\n            return (\n              <Col span={12} key={item?.名称}>\n                <Tag\n                  color={item?.color || 'blue'}\n                  onClick={() => 批量新增循环技能(item)}\n                  className={'cycle-simulator-setting-quick-item'}\n                >\n                  {item?.名称}\n                </Tag>\n              </Col>\n            )\n          })}\n        </Row>\n      </div>\n      {设置开启武学助手 ? (\n        <div className={'cycle-simulator-radio-item'}>\n          <p className={'cycle-simulator-radio-item-title'}>武学助手模式</p>\n          <Tooltip\n            title={\n              <div>\n                <p>由于现在武学助手完全没有规律</p>\n                <p>各种Bug包括但不限于</p>\n                <p>1、异常跳过技能不按顺序释放</p>\n                <p>2、相同武学助手打出不同效果</p>\n                <p>所以暂时不放开武学助手的顺序编辑功能，等待后续机制修改和研究明白再放出。</p>\n                <p style={{ fontWeight: 500 }}>\n                  目前经过欧测试，武学助手自带-1段加速，开启后将增加1帧延迟\n                </p>\n              </div>\n            }\n          >\n            <Radio.Group\n              value={开启武学助手}\n              onChange={(e) => 设置开启武学助手?.(e?.target?.value)}\n              size='small'\n              optionType='button'\n              buttonStyle='solid'\n              // disabled\n            >\n              <Radio value={true}>开启</Radio>\n              <Radio value={false}>关闭</Radio>\n            </Radio.Group>\n          </Tooltip>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default AddCycleSkillBtns\n","import { Alert, App, Checkbox, Form, Input, Modal, Select, Tabs } from 'antd'\nimport React, { useEffect, useMemo, useState } from 'react'\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport { 更新当前自定义循环列表 } from '@/store/data'\nimport './index.css'\nimport { 延迟设定 } from '@/数据/常量'\n\nconst { 计算循环 } = 获取当前数据()\n\ninterface SaveCustomCycleModalProps {\n  自定义循环保存弹窗: boolean\n  设置自定义循环保存弹窗: (e: boolean) => void\n  保存自定义循环: (名称, 加速选项, 延迟选项) => void\n}\n\nfunction SaveCustomCycleModal(props: SaveCustomCycleModalProps) {\n  const { modal } = App.useApp()\n\n  const { 自定义循环保存弹窗, 设置自定义循环保存弹窗, 保存自定义循环 } = props\n  // 保存类型，覆盖｜新增\n  const [自定义循环类型, 设置自定义循环类型] = useState<string>()\n  // 自定义循环名称保存输入\n  const [自定义循环名称输入, 设置自定义循环名称输入] = useState<string>()\n  // 保存类型，覆盖｜新增\n  const [覆盖循环名, 设置覆盖循环名] = useState<string>()\n  // 保存加速序列\n  const [加速选项, 设置加速选项] = useState<number[]>([0, 1, 2])\n  const [延迟选项, 设置延迟选项] = useState<number[]>([0, 1, 2])\n\n  const 自定义循环 = useAppSelector((state) => state?.data?.自定义循环列表)\n\n  const dispatch = useAppDispatch()\n\n  const 全部循环 = useMemo(() => {\n    return (计算循环 || []).concat(自定义循环)\n  }, [自定义循环, 计算循环])\n\n  useEffect(() => {\n    if (自定义循环保存弹窗) {\n      if (自定义循环?.length) {\n        设置自定义循环类型('覆盖')\n      } else {\n        设置自定义循环类型('新增')\n      }\n    } else {\n      设置自定义循环类型(undefined)\n      设置自定义循环名称输入(undefined)\n      设置覆盖循环名(undefined)\n    }\n  }, [自定义循环保存弹窗, 自定义循环])\n\n  const 保存自定义循环前 = () => {\n    const 名称 = 自定义循环类型 === '覆盖' ? 覆盖循环名 : 自定义循环名称输入\n    保存自定义循环(名称, 加速选项, 延迟选项)\n  }\n\n  // 删除自定义循环\n  const 删除循环前提示 = (e, 名称) => {\n    e.stopPropagation()\n    e.preventDefault()\n\n    modal.confirm({\n      title: `确定要删除循环【${名称}】吗?`,\n      content: '删除后将无法恢复',\n      okText: '我要删除',\n      onOk: async () => {\n        删除循环(名称)\n      },\n    })\n  }\n\n  const 删除循环 = (名称) => {\n    dispatch(更新当前自定义循环列表(自定义循环.filter((item) => item.名称 !== 名称)))\n  }\n\n  return (\n    <Modal\n      centered\n      title='保存自定义循环'\n      okButtonProps={{\n        disabled: !(自定义循环类型 === '覆盖' ? 覆盖循环名 : 自定义循环名称输入),\n      }}\n      open={自定义循环保存弹窗}\n      onCancel={() => 设置自定义循环保存弹窗(false)}\n      onOk={保存自定义循环前}\n      width={630}\n      destroyOnClose\n      className={'cycle-custom-save-modal'}\n    >\n      <Tabs\n        className={'cycle-custom-save-modal-content'}\n        type='card'\n        activeKey={自定义循环类型}\n        onChange={设置自定义循环类型}\n      >\n        <Tabs.TabPane tab={'覆盖'} key='覆盖'>\n          <Select\n            value={覆盖循环名}\n            onChange={设置覆盖循环名}\n            optionLabelProp='label'\n            placeholder={'请选择你要覆盖的循环'}\n          >\n            {自定义循环.map((item) => {\n              return (\n                <Select.Option value={item.名称} key={item.名称} label={item.名称}>\n                  <div className={'cycle-custom-save-label'}>\n                    <span>{item.名称}</span>\n                    <span\n                      onClick={(e) => 删除循环前提示(e, item.名称)}\n                      className={'cycle-custom-save-delete'}\n                    >\n                      删除\n                    </span>\n                  </div>\n                </Select.Option>\n              )\n            })}\n          </Select>\n        </Tabs.TabPane>\n        <Tabs.TabPane tab={'新增'} key='新增'>\n          <Form>\n            <Form.Item\n              rules={[\n                {\n                  validator: (_, value, callback) => {\n                    if (value) {\n                      if (全部循环?.some((item) => item?.名称 === value)) {\n                        callback('已存在相同的循环名，请更换')\n                      }\n                    }\n                    callback()\n                  },\n                },\n              ]}\n            >\n              <Input\n                value={自定义循环名称输入}\n                placeholder='请输入自定义循环名称'\n                onChange={(e) => 设置自定义循环名称输入(e?.target?.value)}\n              />\n            </Form.Item>\n          </Form>\n        </Tabs.TabPane>\n      </Tabs>\n      <div className='cycle-custom-save-checkbox'>\n        <p>加速</p>\n        <Checkbox.Group value={加速选项} onChange={(e) => 设置加速选项(e as number[])}>\n          {Array.from({ length: 6 }, (v, i) => i).map((a) => {\n            return (\n              <Checkbox value={a} key={a}>\n                {a}段\n              </Checkbox>\n            )\n          })}\n        </Checkbox.Group>\n        <p>延迟</p>\n        <Checkbox.Group value={延迟选项} onChange={(e) => 设置延迟选项(e as number[])}>\n          {延迟设定.map((item) => {\n            return (\n              <Checkbox value={item.value} key={item.value}>\n                {item.label}\n              </Checkbox>\n            )\n          })}\n        </Checkbox.Group>\n      </div>\n      <Alert message={'选项越少保存越快。没选择的选项在外部计算dps时不会进行计算。'} />\n    </Modal>\n  )\n}\n\nexport default SaveCustomCycleModal\n","/**\n * 无界武学助手技能释放序列\n */\nimport React from 'react'\n\nfunction AutoSkillListContent() {\n  return <div />\n}\n\nexport default AutoSkillListContent\n","import { Drawer } from 'antd'\nimport React from 'react'\nimport { 循环基础技能数据类型, 模拟信息类型 } from '../../simulator/type'\nimport AddCycleSkillBtns from '../AddCycleSkillBtns'\n\ninterface AddCycleSkillModalProps {\n  向循环内插入技能: (data: 循环基础技能数据类型[], 插入位置: string, 插入索引: number) => void\n  处理循环结果对象: { 完整循环: 循环基础技能数据类型[] }\n  模拟信息: 模拟信息类型\n  大橙武模拟: boolean\n  奇穴信息: string[]\n  添加设置: { 位置: string; 索引 }\n  添加技能弹窗显示: boolean\n  关闭弹窗: () => void\n}\n\nfunction AddCycleSkillModal(props: AddCycleSkillModalProps) {\n  const {\n    向循环内插入技能,\n    处理循环结果对象,\n    模拟信息,\n    大橙武模拟,\n    添加设置,\n    添加技能弹窗显示,\n    关闭弹窗,\n  } = props\n\n  const 新增循环技能 = (item: 循环基础技能数据类型) => {\n    向循环内插入技能([item], 添加设置?.位置, 添加设置?.索引)\n  }\n\n  const 批量新增循环 = (item: 循环基础技能数据类型[]) => {\n    向循环内插入技能(item, 添加设置?.位置, 添加设置?.索引)\n  }\n\n  return (\n    <Drawer\n      title='插入技能'\n      placement='bottom'\n      open={添加技能弹窗显示}\n      onClose={关闭弹窗}\n      height={180}\n    >\n      <AddCycleSkillBtns\n        新增循环技能={新增循环技能}\n        批量新增循环={批量新增循环}\n        处理循环结果对象={处理循环结果对象}\n        模拟信息={模拟信息}\n        大橙武模拟={大橙武模拟}\n      />\n    </Drawer>\n  )\n}\n\nexport default AddCycleSkillModal\n","// 循环模拟器\nimport React, { useEffect, useMemo, useState } from 'react'\nimport { App, Button, Modal, Tooltip, message } from 'antd'\nimport { ReactSortable } from 'react-sortablejs'\n\nimport { CopyOutlined, DeleteOutlined, AlertOutlined } from '@ant-design/icons'\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport { 每秒郭氏帧 } from '@/数据/常量'\n\nimport 循环模拟技能基础数据 from './constant/skill'\n\nimport { getDpsCycle } from './utils'\nimport {\n  循环日志数据类型,\n  循环基础技能数据类型,\n  ShowCycleSingleSkill,\n  模拟信息类型,\n} from './simulator/type'\n\nimport 模拟循环 from './simulator/index'\n\nimport CycleModalHeader from './components/CycleModalHeader'\nimport StatusBar from './components/StatusBar'\nimport CycleSkillItem from './components/CycleSkillItem'\nimport AddCycleSkillBtns from './components/AddCycleSkillBtns'\nimport SaveCustomCycleModal from './components/SaveCustomCycleModal'\nimport { 循环详情 } from '@/@types/循环'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport './index.css'\nimport { 获取加速等级 } from '@/工具函数/data'\nimport { 秒伤计算 } from '@/计算模块/计算函数'\nimport { 当前计算结果类型 } from '@/@types/输出'\nimport { 更新当前自定义循环列表 } from '@/store/data'\nimport AutoSkillListContent from './components/AutoSkillListContent'\nimport AddCycleSkillModal from './components/AddCycleSkillModal'\n\nconst { 缓存映射 } = 获取当前数据()\n\nconst 加速等级枚举 = {\n  0: 0,\n  1: 206,\n  2: 14156,\n  3: 30158,\n  4: 48622,\n  5: 70163,\n}\n\ninterface CycleSimulatorProps {\n  打开循环模拟器?: () => void\n  disabled?: boolean\n}\n\nfunction CycleSimulator(props: CycleSimulatorProps) {\n  const { modal } = App.useApp()\n\n  const { 打开循环模拟器, disabled } = props\n  const [logData, setLogData] = useState<循环日志数据类型[]>([])\n\n  const [模拟DPS结果, 更新模拟DPS结果] = useState<当前计算结果类型>({\n    秒伤: 0,\n    总伤: 0,\n    秒伤计算时间: 0,\n    计算结果技能列表: [],\n  })\n\n  const [模拟信息, 更新模拟信息] = useState<模拟信息类型>({\n    角色状态信息: {\n      锐意: 60,\n    },\n    当前时间: 0,\n    当前自身buff列表: {},\n    当前目标buff列表: {},\n    循环执行结果: '成功',\n    循环异常信息: {},\n    技能基础数据: [...循环模拟技能基础数据],\n    技能释放记录: [],\n    当前各技能运行状态: {},\n    当前DOT运行状态: {},\n    当前GCD组: {},\n  })\n\n  // 基础弹窗\n  const [basicModalOpen, setBasicModalOpen] = useState<boolean>(false)\n  // 循环\n  const [cycle, setCycle] = useState<循环基础技能数据类型[]>([])\n  const [自定义循环保存弹窗, 设置自定义循环保存弹窗] = useState<boolean>(false)\n  // 当前面板加速值\n  const 外部加速值 = useAppSelector((state) => state?.data?.装备信息?.装备基础属性)?.加速等级 || 0\n  const 大橙武模拟 =\n    !!useAppSelector((state) => state?.data?.装备信息?.装备增益)?.大橙武特效 || false\n  const [加速等级, 更新加速等级] = useState<number>(0)\n  const 外部延迟 = useAppSelector((state) => state?.data?.网络延迟) || 0\n  const [网络延迟, 更新网络延迟] = useState<number>(0)\n  // 自定义循环\n  const 自定义循环列表 = useAppSelector((state) => state?.data?.自定义循环列表)\n  // 是否开启武学助手\n  const [开启武学助手, 设置开启武学助手] = useState<boolean>(false)\n\n  const 加速值 = useMemo(() => {\n    return 加速等级枚举[加速等级] || 0\n  }, [加速等级])\n\n  // 是否实时计算\n  const 是否实时计算 = true\n\n  const [起手留层数, 设置起手留层数] = useState<number>(3)\n\n  // 奇穴\n  const 奇穴信息 = useAppSelector((state) => state?.data?.当前奇穴信息)\n  // const [奇穴信息, 更新奇穴信息] = useState<string[]>([])\n  // const [奇穴弹窗展示, 更新奇穴弹窗展示] = useState<boolean>(false)\n\n  const [buff覆盖数据, 更新buff覆盖数据] = useState<number[]>([])\n\n  // 添加循环\n  const [添加技能弹窗显示, 更新添加技能弹窗显示] = useState<boolean>(false)\n  const [添加设置, 更新添加设置] = useState<{ 位置: string; 索引 }>({ 位置: '', 索引: 0 })\n\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (basicModalOpen) {\n      // 设置外面选择的默认奇穴信息\n      // 更新奇穴信息(reduxQixuedata)\n      更新加速等级(获取加速等级(外部加速值))\n      更新网络延迟(外部延迟)\n    } else {\n      setLogData([])\n      setBasicModalOpen(false)\n      setCycle([])\n      更新模拟DPS结果({ 秒伤: 0, 总伤: 0, 秒伤计算时间: 0, 计算结果技能列表: [] })\n    }\n  }, [basicModalOpen, 外部加速值, 外部延迟])\n\n  useEffect(() => {\n    if (是否实时计算 && basicModalOpen) {\n      simulator({})\n    }\n  }, [basicModalOpen, cycle, 是否实时计算, 起手留层数, 网络延迟, 加速值, 奇穴信息, 开启武学助手])\n\n  const simulator = (props?) => {\n    const { 传入加速 = 加速值, 传入延迟 = 网络延迟, 更新展示 = true, 奇穴 } = props\n    const res = 模拟循环({\n      测试循环: cycle.map((item) => item?.技能名称) || [],\n      加速值: 传入加速 !== undefined ? 传入加速 : 加速值,\n      网络延迟: 传入延迟 !== undefined ? 传入延迟 : 网络延迟,\n      奇穴: 奇穴 || 奇穴信息,\n      起手留层数,\n      大橙武模拟,\n      开启武学助手,\n    })\n\n    const {\n      最终日志,\n      当前自身buff列表: 处理后自身buff,\n      当前目标buff列表: 处理后目标buff,\n      角色状态信息: 处理后角色状态信息,\n      ...rest\n    } = res\n    if (更新展示) {\n      setLogData(最终日志)\n      计算dps(最终日志, rest?.当前时间)\n      更新模拟信息({\n        当前自身buff列表: 处理后自身buff,\n        当前目标buff列表: 处理后目标buff,\n        角色状态信息: 处理后角色状态信息,\n        ...rest,\n      })\n    }\n    return { 最终日志, ...rest }\n  }\n\n  // 计算DPS日志\n  const 计算dps = (data: 循环日志数据类型[], 战斗时间) => {\n    const 获取用于计算的技能组 = getDpsCycle(data, 战斗时间)\n    const { 秒伤, 计算结果技能列表, 秒伤计算时间, 总伤 } = dispatch(\n      秒伤计算({\n        更新循环技能列表: 获取用于计算的技能组,\n        更新计算时间: 战斗时间 / 每秒郭氏帧,\n        更新奇穴数据: 奇穴信息,\n      })\n    )\n    更新模拟DPS结果({\n      秒伤: 战斗时间 > 0 ? 秒伤 : 0,\n      总伤: 战斗时间 > 0 ? 总伤 : 0,\n      秒伤计算时间: 秒伤计算时间,\n      计算结果技能列表: 计算结果技能列表,\n    })\n  }\n\n  // 向循环内新增技能\n  const 新增循环技能 = (item: 循环基础技能数据类型) => {\n    const newCycle = [...(cycle || []), item]\n    setCycle(newCycle)\n  }\n\n  const 批量新增循环 = (item: 循环基础技能数据类型[]) => {\n    const newCycle = [...(cycle || []), ...item]\n    setCycle(newCycle)\n  }\n\n  // 从循环内删除技能\n  const 删除循环技能 = (index) => {\n    const newCycle = [...(cycle || [])]\n    newCycle.splice(index, 1)\n    setCycle(newCycle)\n  }\n\n  // 根据循环计算更适合展示的多层数组，用于显示\n  const 处理循环结果对象 = useMemo(() => {\n    const res: ShowCycleSingleSkill[][] = []\n    const 是否存在换行技能 = cycle?.find((item) => item?.技能名称 === '换行')\n\n    cycle.map((item, index) => {\n      const 找到当前技能释放记录 = 模拟信息?.技能释放记录?.[index]\n      const data = {\n        ...item,\n        ...找到当前技能释放记录,\n      }\n      if (index === 0) {\n        res[res?.length] = [{ ...data, index: index || 0 }]\n      } else {\n        res[res?.length - 1] = [...(res[res?.length - 1] || []), { ...data, index: index || 0 }]\n\n        const 打完本技能换行 = 是否存在换行技能\n          ? data?.技能名称 === '换行'\n          : data?.技能名称 === '横云势·二'\n\n        // const 打完本技能换行 = data?.技能名称 === '横云势二'\n\n        if (打完本技能换行) {\n          res[res?.length] = []\n        }\n      }\n      return data\n    })\n\n    return { 显示循环: res, 完整循环: cycle }\n  }, [cycle, 模拟信息])\n\n  const 向循环内插入技能 = (item: 循环基础技能数据类型[], 插入位置, 插入索引) => {\n    let newCycle: 循环基础技能数据类型[] = [...(cycle || [])]\n    let addCycle: 循环基础技能数据类型[] = []\n\n    if (插入位置 === '前部插入') {\n      // 在索引 2 前插入多个元素\n      addCycle = newCycle.slice(0, 插入索引).concat(item, newCycle.slice(插入索引))\n      更新添加设置({ ...添加设置, 索引: 添加设置.索引 + item.length })\n    } else {\n      // 在索引 2 后插入多个元素\n      addCycle = newCycle\n        .slice(0, 插入索引 + item.length)\n        .concat(item, newCycle.slice(插入索引 + item.length))\n    }\n\n    newCycle = [...addCycle]\n    setCycle(newCycle)\n  }\n\n  // 拖拽更新循环\n  const 拖拽更新循环 = (newList, type) => {\n    if (type == '轮次内') {\n      // 首先获取被替换轮次的第一个元素的index索引\n      const minIndex = newList.reduce(function (min, obj) {\n        return Math.min(min, obj.index)\n      }, Infinity)\n      // 获取最大的索引，判断拖拽生效范围\n      const maxIndex = newList.reduce(function (min, obj) {\n        return Math.max(min, obj.index)\n      }, Number.NEGATIVE_INFINITY)\n      // 将数组哪索引范围内跌元素替换为新的数组元素\n      const newCycle = cycle.map((item, index) => {\n        if (index < minIndex || index > maxIndex) {\n          return { ...item }\n        } else {\n          return newList[index - minIndex]\n        }\n      })\n      // 更新循环\n      setCycle(newCycle)\n    } else if (type === '整个轮次拖拽') {\n      const res: 循环基础技能数据类型[] = []\n      newList.forEach((item) => {\n        item.forEach((a) => {\n          if (a.技能名称) {\n            const 当前技能数据 = 模拟信息?.技能基础数据?.find((b) => b?.技能名称 === a.技能名称)\n            if (当前技能数据) {\n              res.push(当前技能数据)\n            }\n          }\n        })\n      })\n      setCycle(res)\n    }\n  }\n\n  // 复制本轮到最后\n  const 复制本轮至最后 = (轮次) => {\n    const newCycle = cycle.concat(轮次)\n    setCycle(newCycle)\n  }\n\n  // 删除本轮次\n  const 删除本轮次 = (轮次) => {\n    const minIndex = 轮次.reduce(function (min, obj) {\n      return Math.min(min, obj.index)\n    }, Infinity)\n    // 获取最大的索引，判断拖拽生效范围\n    const maxIndex = 轮次.reduce(function (min, obj) {\n      return Math.max(min, obj.index)\n    }, Number.NEGATIVE_INFINITY)\n    // 将数组哪索引范围内跌元素替换为新的数组元素\n    const newCycle = cycle.filter((item, index) => {\n      return index < minIndex || index > maxIndex\n    })\n    // 更新循环\n    setCycle(newCycle)\n  }\n\n  // 删除本轮后全部循环\n  const 删除本轮后全部循环 = (轮次) => {\n    modal.confirm({\n      title: '确认删除本轮后全部循环吗？',\n      onOk() {\n        // 获取最大的索引，判断生效范围\n        const maxIndex = 轮次.reduce(function (min, obj) {\n          return Math.max(min, obj.index)\n        }, Number.NEGATIVE_INFINITY)\n        // 将数组哪索引范围内跌元素替换为新的数组元素\n        const newCycle = cycle.filter((item, index) => {\n          return index <= maxIndex\n        })\n        // 更新循环\n        setCycle(newCycle)\n      },\n    })\n  }\n\n  // 确认保存自定义循环\n  const 确认保存循环 = (名称, 加速选项, 延迟选项) => {\n    // 获取各加速下 各网络延迟的循环\n    const 各延迟枚举 = 延迟选项?.length ? 延迟选项 : [0, 1, 2, 3]\n    const 各加速枚举 = 加速选项?.length ? 加速选项 : [0, 1, 2, 3, 4, 5]\n\n    const 保存循环结果: 循环详情[] = []\n\n    const 异常结果: any[] = []\n\n    各加速枚举.forEach((加速) => {\n      const 实际加速值 = 加速等级枚举[加速]\n      各延迟枚举.forEach((延迟) => {\n        // 保存循环数据的时候，把镇机和界破的数据一起保存，生成两套并存的数据，方便后续切换比较\n        const 模拟结果 = simulator({\n          传入加速: Number(实际加速值),\n          传入延迟: Number(延迟),\n          更新展示: false,\n          奇穴: [...奇穴信息],\n        })\n        const 本次日志 = 模拟结果?.最终日志\n        const 循环执行结果 = 模拟结果?.循环执行结果\n        // const 战斗时间 = 本次日志[本次日志.length - 1].日志时间 || 0\n        const 战斗秒 = 模拟结果?.当前时间 / 每秒郭氏帧\n        const 用于计算循环 = getDpsCycle(本次日志, 模拟结果?.当前时间)\n        if (循环执行结果 === '成功') {\n          保存循环结果.push({\n            循环加速等级: 加速,\n            循环延迟要求: 延迟,\n            战斗时间: 战斗秒,\n            技能详情: 用于计算循环,\n          })\n        } else {\n          异常结果.push({\n            加速,\n            延迟,\n          })\n        }\n      })\n    })\n\n    if (异常结果?.length) {\n      message.error(\n        `以下条件循环异常，将不会保存该加速的循环。异常循环：${异常结果\n          .map((item) => {\n            return `[加速：${item.加速}，延迟：${item.延迟}]`\n          })\n          .join('、')}`\n      )\n    }\n\n    const 技能序列 = cycle.map((item) => item.技能名称)\n\n    const 新自定义循环 = 自定义循环列表?.some((item) => item?.名称 === 名称)\n      ? 自定义循环列表.map((item) => {\n          return item.名称 === 名称\n            ? {\n                名称,\n                标题: 名称,\n                类型: '自定义',\n                标记: '自定义',\n                循环详情: 保存循环结果,\n                奇穴: 奇穴信息,\n                技能序列,\n              }\n            : item\n        })\n      : (自定义循环列表 || []).concat([\n          {\n            名称,\n            标题: 名称,\n            类型: '自定义',\n            标记: '自定义',\n            循环详情: 保存循环结果,\n            奇穴: 奇穴信息,\n            技能序列,\n          },\n        ])\n\n    dispatch(更新当前自定义循环列表(新自定义循环))\n\n    设置自定义循环保存弹窗(false)\n    message.success('保存成功')\n  }\n\n  useEffect(() => {\n    // redux变动，更新storage信息\n    const 保存信息 = {}\n    ;(自定义循环列表 || []).forEach((item) => {\n      保存信息[item.名称] = {\n        ...item,\n      }\n    })\n    localStorage?.setItem(缓存映射.自定义循环, JSON.stringify(保存信息))\n  }, [自定义循环列表, 奇穴信息])\n\n  const 点击下拉菜单 = (data, index) => {\n    更新添加设置({ 位置: data?.key, 索引: index })\n    更新添加技能弹窗显示(true)\n  }\n\n  return (\n    <>\n      <Button\n        danger\n        disabled={disabled}\n        size='small'\n        onClick={() => {\n          setBasicModalOpen(true)\n          打开循环模拟器 && 打开循环模拟器()\n        }}\n      >\n        循环模拟\n      </Button>\n      <Modal\n        className='cycle-simulator-modal'\n        maskClosable={false}\n        width={'100%'}\n        title={\n          <CycleModalHeader\n            cycle={cycle}\n            设置自定义循环保存弹窗={设置自定义循环保存弹窗}\n            清空循环={() => setCycle([])}\n            起手留层数={起手留层数}\n            设置起手留层数={设置起手留层数}\n            快速导入循环={(循环, 循环标记) => {\n              setCycle(循环)\n              设置开启武学助手(循环标记 === '助手')\n            }}\n            网络延迟={网络延迟}\n            更新网络延迟={更新网络延迟}\n            加速等级={加速等级}\n            更新加速等级={更新加速等级}\n            模拟信息={模拟信息}\n          />\n        }\n        centered\n        footer={null}\n        open={basicModalOpen}\n        onCancel={() => setBasicModalOpen(false)}\n        destroyOnClose\n      >\n        <div className={'cycle-simulator-setting'}>\n          {/* 角色状态栏 */}\n          <StatusBar\n            模拟信息={模拟信息}\n            完整循环={处理循环结果对象?.完整循环 as any}\n            日志信息={logData}\n            模拟DPS结果={模拟DPS结果}\n          />\n          {/* // 循环展示模块 */}\n          <div className={'cycle-simulator-setting-res'}>\n            {处理循环结果对象?.显示循环?.length ? (\n              (处理循环结果对象?.显示循环 || []).map((轮次, index) => {\n                return 轮次?.length ? (\n                  <div className={`cycle-simulator-setting-turn cycle-turn-drag`} key={`${index}`}>\n                    <ReactSortable\n                      list={轮次.map((i) =>\n                        Object.assign(i, { id: `${i?.技能名称}_${index}_${i?.index}` })\n                      )}\n                      setList={(e) => {\n                        拖拽更新循环(e, '轮次内')\n                      }}\n                      className='cycle-simulator-setting-turn-drop'\n                      animation={150}\n                      draggable={'.cycle-simulator-setting-skill-drag'}\n                    >\n                      {(轮次 || []).map((item) => {\n                        return (\n                          <CycleSkillItem\n                            技能={item}\n                            删除循环技能={删除循环技能}\n                            key={`${item?.技能名称}_${index}_${item?.index}`}\n                            模拟信息={模拟信息}\n                            buff覆盖数据={buff覆盖数据}\n                            更新buff覆盖数据={更新buff覆盖数据}\n                            点击下拉菜单={(e) => 点击下拉菜单(e, item?.index)}\n                          />\n                        )\n                      })}\n                      <div className={'cycle-turn-operate'}>\n                        <Tooltip title='删除本轮后全部循环'>\n                          <AlertOutlined\n                            className={'cycle-turn-operate-btn'}\n                            style={{ color: '#FF0000' }}\n                            onClick={() => 删除本轮后全部循环(轮次)}\n                          />\n                        </Tooltip>\n                        <Tooltip title='复制并添加到最后'>\n                          <CopyOutlined\n                            className={'cycle-turn-operate-btn'}\n                            onClick={() => 复制本轮至最后(轮次)}\n                          />\n                        </Tooltip>\n                        <Tooltip title='删除此轮'>\n                          <DeleteOutlined\n                            className={'cycle-turn-operate-btn'}\n                            onClick={() => 删除本轮次(轮次)}\n                          />\n                        </Tooltip>\n                      </div>\n                    </ReactSortable>\n                  </div>\n                ) : (\n                  <div />\n                )\n              })\n            ) : (\n              <p className={'cycle-simulator-setting-tip'}>请点击下方技能按钮生成模拟技能序列</p>\n            )}\n          </div>\n        </div>\n        {/* 武学助手技能框 */}\n        <AutoSkillListContent />\n        {/* 添加循环按钮组 */}\n        <AddCycleSkillBtns\n          新增循环技能={新增循环技能}\n          批量新增循环={批量新增循环}\n          处理循环结果对象={处理循环结果对象}\n          模拟信息={模拟信息}\n          大橙武模拟={大橙武模拟}\n          开启武学助手={开启武学助手}\n          设置开启武学助手={设置开启武学助手}\n        />\n        {/* 保存自定义循环弹窗 */}\n        <SaveCustomCycleModal\n          自定义循环保存弹窗={自定义循环保存弹窗}\n          设置自定义循环保存弹窗={设置自定义循环保存弹窗}\n          保存自定义循环={确认保存循环}\n        />\n        {/* 循环自定义奇穴弹窗 */}\n        {/* <QixueSetModal\n          奇穴信息={奇穴信息}\n          更新奇穴信息={更新奇穴信息}\n          奇穴弹窗展示={奇穴弹窗展示}\n          更新奇穴弹窗展示={更新奇穴弹窗展示}\n        /> */}\n\n        {/* 添加技能弹窗 */}\n        <AddCycleSkillModal\n          向循环内插入技能={向循环内插入技能}\n          处理循环结果对象={处理循环结果对象}\n          模拟信息={模拟信息}\n          大橙武模拟={大橙武模拟}\n          奇穴信息={奇穴信息}\n          添加设置={添加设置}\n          添加技能弹窗显示={添加技能弹窗显示}\n          关闭弹窗={() => {\n            更新添加技能弹窗显示(false)\n            更新添加设置({ 位置: '', 索引: 0 })\n          }}\n        />\n      </Modal>\n    </>\n  )\n}\n\nexport default React.memo(CycleSimulator)\n"],"names":["基础GCD帧","技能名称","技能释放后添加GCD","回复锐意","造成伤害次数","技能CD","技能GCD组","技能类型","图标","每秒郭氏帧","说明","日志类型数组","原始Buff数据","名称","最大层数","最大持续时间","行链","决链","横链","横云一式","大橙武增伤","流血","最大作用次数","伤害频率","截辕","getDpsCycle","data","战斗时间","res","i","length","_当前数据$其他数据","当前数据","本次造成伤害次数","其他数据","伤害次数","日志类型","_res$获取当前日志对应技能枚举","_增益列表","_res$获取当前日志对应技能枚举2","获取当前日志对应技能枚举","Skill_Cycle_Map","日志","增益列表","技能增益列表","_当前数据$buff列表3","_当前数据$buff列表","_当前数据$buff列表2","buff列表","不存在相同增益","_当前数据$buff列表6","map","item","_item$增益名称","_当前数据$buff列表4","增益名称","split","some","a","_当前数据$buff列表5","includes","增益技能数","concat","join","技能数量","结果循环","Object","keys","_v$技能增益列表","v","Math","round","d","触石雨CD","触石雨数量","push","ERROR_ACTION","锐意不足","信息","身形不足","体态错误","BUFF错误","起手留客雨BUFF","Buff和Dot数据","起手留层数","arguments","undefined","当前层数","刷新时间","constructor","模拟循环","本次释放记录","this","释放前初始化","减少对阵技能CD","_this$模拟循环$技能类实例集合","_this$模拟循环$技能类实例集合$停云","_this$模拟循环$技能类实例集合$停云2","_this$模拟循环$技能类实例集合2","_this$模拟循环$技能类实例集合2$横","_this$模拟循环$技能类实例集合2$横2","_this$模拟循环$技能类实例集合3","_this$模拟循环$技能类实例集合3$决","_this$模拟循环$技能类实例集合3$决2","_this$模拟循环$技能类实例集合4","_this$模拟循环$技能类实例集合4$灭","_this$模拟循环$技能类实例集合4$灭2","_this$模拟循环$技能类实例集合5","_this$模拟循环$技能类实例集合5$留","_this$模拟循环$技能类实例集合5$留2","减少时间","技能类实例集合","停云势","减少调息时间","call","留客雨","减少绝技技能CD","_this$模拟循环$技能类实例集合6","_this$模拟循环$技能类实例集合6$孤","_this$模拟循环$技能类实例集合6$孤2","孤风破浪","对阵招式橙武减少绝技技能CD","_this$模拟循环$技能类实例集合7","_this$模拟循环$技能类实例集合7$孤","_this$模拟循环$技能类实例集合7$孤2","大橙武模拟","释放技能回复锐意","锐意值","来源","_this$模拟循环$角色状态信息","_this$模拟循环$角色状态信息2","_this$模拟循环$增加锐意","_this$模拟循环2","_this$模拟循环$添加buff","_this$模拟循环","角色状态信息","锐意","添加buff","对象","增加锐意","触发消耗锐意","_this$模拟循环$减少锐意","_this$模拟循环3","减少锐意","触发伤害行为","伤害名称","_this$模拟循环$技能造成伤害","_this$模拟循环4","额外增益列表","触发伤害时间","DOT伤害","技能造成伤害","获取技能释放记录结果","获取当前重要buff列表","技能依赖目标buff列表","重要buff列表","forEach","buff","_this$模拟循环$当前自身buff列表","_this$模拟循环$当前自身buff列表2","当前自身buff列表","_this$模拟循环$当前目标buff列表","_this$模拟循环$当前目标buff列表2","当前目标buff列表","获取施加重要buff信息","buff名称","_this$模拟循环$Buff和Dot数据","当前时间","buff对象","buff开始时间","buff结束时间","技能统一类","super","DOT运行数据","待生效数据","获取当前DOT数据","DOT名称","更新DOT运行数据","新数据","结算并更新运行数据","_this$DOT运行数据","结算数组","未结算数组","数据","生效时间","更新待生效数据","DOT数据","_this$模拟循环2$当前自身buff列","_this$模拟循环2$当前自身buff列2","_this$模拟循环3$当前自身buff列","_this$模拟循环3$当前自身buff列2","_this$DOT运行数据2","_this$模拟循环$添加待生效事件队列","_this$模拟循环5","_待生效数据2","DOT是否吃加速","是否吃加速","循环加速值","加速等级","实际初次频率","获取实际帧数","初次频率","实际伤害频率","快照buff列表","_this$模拟循环4$当前自身buff列","_this$模拟循环4$当前自身buff列2","披靡层数","_待生效数据","待添加次数","原最后一次生效时间","添加待生效事件队列","事件名称","事件时间","事件备注","buff类型","卸除层数","通用DOT类","获得和刷新流血","_this$DOT运行数据$待生效数据","_this$DOT运行数据2$待生效数据","_this$模拟循环$Buff和Dot数据2","当前最后一跳数据","流血最大层数","新流血层数","min","新增层数","只添加日志","结算流血伤害","层数","流血伤害名称枚举","获得和刷新截辕","新层数","结算截辕伤害","行云势一","释放","可以释放","异常信息","造成伤害","当前是否满锐","保存释放记录","释放后","行云势二","行云势三","_this$模拟循环$卸除buff","卸除buff","技能运行数据","待充能时间点","初始化技能运行数据","更新技能运行数据","减少帧数","_待充能时间点$map","新待充能时间点","filter","决云势一","有CD技能通用类","_this$模拟循环$技能类实例集合$流血","_this$模拟循环$技能类实例集合$流血2","_this$模拟循环$技能类实例集合$流血3","_this$模拟循环$技能类实例集合$流血4","当前流血层数","技能数据","循环模拟技能基础数据","find","决云势二","横云势一","命中","_this$模拟循环$添加buff2","造成buff数据","横云势二","_this$模拟循环$技能类实例集合2$流","_this$模拟循环$技能类实例集合2$流2","减少GCD","_this$模拟循环2$GCD组","_this$模拟循环4$GCD组","_this$模拟循环$添加战斗日志","_this$模拟循环$添加战斗日志2","GCD组","公共","添加战斗日志","傍身","当前锐意","半锐","_this$模拟循环$技能类实例集合$截辕","_this$模拟循环$技能类实例集合$截辕2","技能释放后更新运行数据","_this$模拟循环$角色状态信息3","减少CD","_this$模拟循环2$技能释放后更新运行","灭影追风","换行","技能系数","获取当前数据","props","循环执行结果","循环异常信息","异常索引","测试循环","奇穴","网络延迟","开始释放上一个技能的时间","战斗日志","技能释放记录","技能基础数据","云刀上次造成伤害时间","待生效事件队列","上一次每两秒回复锐意时间点","开启武学助手","获取加速等级","加速值","初始化技能实例类","重置循环执行结果","_ref","_this$当前自身buff列表$名称","_this$当前目标buff列表$名称","新buff对象","日志时间","_ref2","_this$当前自身buff列表$名称2","_this$当前目标buff列表$名称2","buff刷新时间","校验奇穴是否存在","待判断奇穴","_this$奇穴","增加时间","time","跳过全部GCD时间","DOT结算与更新","清空已经消失的buff","新GCD组","key","max","技能释放前检查GCD统一方法","当前技能","校验GCD组","_校验GCD组","_校验GCD组2","_校验GCD组3","对所有有CD技能检查和充能","实例","运行数据","技能释放前检查运行数据","技能实例","GCD","等待CD时间","可以释放时间","_技能实例$技能运行数据","最大充能层数","可释放时间","增加CD","实际增加CD","_技能实例$技能运行数据2","本次释放充能","log","rest","_获取技能信息","_技能增益列表$filter","造成时间","对应技能","获取技能信息","总增益列表","当前增益数据","转化buff和增益名称","_增益名称$split","_增益名称$split$","增益层数","_buff列表$披靡·悟","增益消失时间","_ref3","检查GCD","_技能实例$检查GCD","技能释放前","等待CD","延迟等待","技能计划释放时间","技能预估释放时间","技能GCD和CD处理","_技能实例$技能运行数据3","_技能实例$更新技能运行数据","时间差","增加技能GCD","待更新GCD组","_待更新GCD组","_待更新GCD组2","技能成功开始释放","增加技能CD","_技能实例$技能释放后更新运行数据","技能释放后","计划释放时间","开始释放时间","_技能实例$获取技能释放记录结果","技能释放记录结果","实际释放时间","清空buff调用函数","buff应该消失时间","消失层数","自然消失失去层数","_this$技能类实例集合","_this$技能类实例集合$流血","_this$技能类实例集合2","_this$技能类实例集合2$截辕","本轮模拟开始前","本轮模拟结束后","技能释放校验","_技能实例$释放","释放判断结果","校验结果","_this$添加战斗日志","技能释放异常","待生效事件结算","结算判断时间","轮训执行事件","_this$待生效事件队列$","_this$添加战斗日志2","_当前事件$事件名称","_this$待生效事件队列","当前事件","_当前事件$事件备注","_当前事件$事件备注2","_当前事件$事件备注3","_当前事件$事件备注4","_当前事件$事件备注5","shift","传入数据","新待生效事件队列","_this$待生效事件队列2","_传入数据$","_传入数据$2","sort","b","删除待生效事件队列","模拟","_this$技能基础数据","_技能实例$释放前初始化","_技能实例$读条时间","_技能实例$读条","读条时间","读条","每秒回复锐意结算","释放校验结果","是否为最后一个技能","_技能实例$命中","_技能实例$造成伤害","_技能实例$释放后","日志排序","新日志","获取当前各技能的运行状态","各技能当前运行状态","_this$技能类实例集合$key","获取各DOT的运行状态","_this$技能类实例集合$key2","_this$技能类实例集合$key3","添加时间","更新后锐意","新的时间点","模拟实例","循环主类","当前各技能运行状态","当前DOT运行状态","最终日志","当前GCD组","技能序列","cycle","设置自定义循环保存弹窗","清空循环","设置起手留层数","快速导入循环","更新加速等级","模拟信息","更新网络延迟","自定义循环","useAppSelector","state","_state$data","自定义循环列表","快捷添加循环","数据源","快速导入默认循环","当前循环数据","技能序列信息","_模拟信息$技能基础数据","标记","_jsxs","className","children","_jsx","Popover","content","href","target","rel","Select","size","value","onChange","options","Array","from","label","延迟设定","Dropdown","overlay","Menu","Item","onClick","index","Divider","style","margin","粘贴导入","navigator","clipboard","readText","then","clipboardData","_模拟信息$技能基础数据2","message","success","error","Button","danger","Tooltip","title","type","disabled","Progress","percent","format","_Object$keys$map","DOT列表","当前时间点","当前buff列表","当前Dot列表","原始数据","_item$待生效数据","Space","wrap","剩余时间","剩余时间秒","toFixed","_Fragment","备注","src","_item$待生效数据2","最后一跳","open","onCancel","logData","columns","dataIndex","filters","text","onFilter","record","_record$日志","_record$日志类型","indexOf","render","_","row","_row$其他数据","Modal","width","centered","footer","Table","dataSource","pagination","pageSize","showTotal","total","dpsList","结果统计","计算结果","总伤","计算结果技能列表","visible","onClose","过滤的buff列表","总战斗用时","chartData","setChartData","useState","limitRef","useRef","覆盖率","设置覆盖率","useEffect","setTimeout","initChart","current","chart","Chart","container","autoFit","renderer","padding","tooltip","crosshairs","getDataSource","source","tickCount","axis","textAlign","fontSize","coordinate","transpose","interval","position","color","offset","Buff枚举","获取Buff覆盖率","_日志$i","_日志$i2","_日志$i3","_日志$i3$日志","_日志$i4","_日志$i4$日志","_日志$i5","_logName$split","_logName$split2","_日志$i6","logName","buffName","currentTime","_Buff枚举$buffName","_Buff枚举$buffName2","_Buff枚举$buffName3","_Buff枚举$key","_Buff枚举$key2","_Buff枚举$key3","_Buff枚举$key4","_Buff枚举$key5","_Buff枚举$key6","总持续时间","_Buff枚举$key7","range","格式化buff覆盖数组","id","_模拟信息$循环异常信息","_模拟信息$循环异常信息$异常信息","日志信息","模拟DPS结果","buffCountModalOpen","setBuffCountModalOpen","logModalOpen","setLogModalOpen","countModal","setCountModal","Alert","showIcon","秒伤","秒伤计算时间","placement","PieChartOutlined","CalendarOutlined","AlignLeftOutlined","BattleLogModal","SkillCountModal","BuffCountModal","Ruiyi","Buff","DpsRes","_技能释放结果$重要buff列表","_模拟信息$循环异常信息2","_模拟信息$循环异常信息2$异常信息","技能","删除循环技能","buff覆盖数据","更新buff覆盖数据","点击下拉菜单","技能释放时间","间隔CD","剩余秒","索引","是否异常","当前异常","技能释放结果","当前是否需要高亮展示在buff覆盖中","useMemo","cls","classNames","下拉菜单","Badge","count","menu","items","trigger","onMouseEnter","判断有无重要buff标记","_技能释放结果$造成buff数据","_技能释放结果$造成buff数据2","_技能释放结果$造成buff数据3","onMouseLeave","卸除重要buff标记","实际伤害技能","BuffItem","CloseCircleFilled","伤害段数","释放等待CD","计算可以释放时技能CD","技能当前层数","计算技能当前层数","_模拟信息$当前自身buff列表","_模拟信息$当前自身buff列表$行链","_模拟信息$当前自身buff列表2","_模拟信息$当前自身buff列表2$行链","_模拟信息$当前自身buff列表3","_模拟信息$当前自身buff列表3$行链","_模拟信息$当前自身buff列表4","_模拟信息$当前自身buff列表4$决链","_模拟信息$当前自身buff列表5","_模拟信息$当前自身buff列表5$横链","_模拟信息$角色状态信息","禁用信息","_ERROR_ACTION$BUFF错误","是否禁用","异常描述","_ERROR_ACTION$BUFF错误2","_ERROR_ACTION$BUFF错误3","消耗锐意","_ERROR_ACTION$锐意不足","_ERROR_ACTION$BUFF错误5","_ERROR_ACTION$BUFF错误4","角标数字","beforeOnClick","技能原始名称","_模拟信息$当前各技能运行状态","技能运行状态","下次预估释放时间","_模拟信息$当前各技能运行状态2","_技能运行状态$待充能时间点","快捷添加数据","_模拟信息$技能基础数据3","_模拟信息$技能基础数据4","新增循环技能","批量新增循环","处理循环结果对象","设置开启武学助手","创建循环不可选","AddCycleSkillBtn","完整循环","Row","gutter","Col","span","Tag","技能原始数据","批量新增循环技能","fontWeight","Radio","e","_e$target","optionType","buttonStyle","计算循环","modal","App","useApp","自定义循环保存弹窗","保存自定义循环","自定义循环类型","设置自定义循环类型","自定义循环名称输入","设置自定义循环名称输入","覆盖循环名","设置覆盖循环名","加速选项","设置加速选项","延迟选项","设置延迟选项","dispatch","useAppDispatch","全部循环","删除循环","更新当前自定义循环列表","okButtonProps","onOk","保存自定义循环前","destroyOnClose","Tabs","activeKey","TabPane","tab","optionLabelProp","placeholder","Option","删除循环前提示","stopPropagation","preventDefault","confirm","okText","async","Form","rules","validator","callback","Input","Checkbox","Group","向循环内插入技能","添加设置","添加技能弹窗显示","关闭弹窗","Drawer","height","AddCycleSkillBtns","位置","缓存映射","加速等级枚举","CycleSimulator","_useAppSelector","_useAppSelector2","_处理循环结果对象$显示循环","打开循环模拟器","setLogData","更新模拟DPS结果","更新模拟信息","basicModalOpen","setBasicModalOpen","setCycle","外部加速值","_state$data$装备信息","装备信息","装备基础属性","_state$data2","_state$data2$装备信息","装备增益","大橙武特效","外部延迟","_state$data3","_state$data4","是否实时计算","奇穴信息","_state$data5","当前奇穴信息","更新添加技能弹窗显示","更新添加设置","simulator","传入加速","传入延迟","更新展示","处理后自身buff","处理后目标buff","处理后角色状态信息","计算dps","获取用于计算的技能组","秒伤计算","更新循环技能列表","更新计算时间","更新奇穴数据","newCycle","splice","是否存在换行技能","_模拟信息$技能释放记录","显示循环","_localStorage","保存信息","localStorage","setItem","JSON","stringify","maskClosable","CycleModalHeader","循环","循环标记","StatusBar","轮次","ReactSortable","list","assign","setList","拖拽更新循环","newList","minIndex","reduce","obj","Infinity","maxIndex","Number","NEGATIVE_INFINITY","当前技能数据","animation","draggable","CycleSkillItem","AlertOutlined","删除本轮后全部循环","CopyOutlined","复制本轮至最后","DeleteOutlined","删除本轮次","AutoSkillListContent","SaveCustomCycleModal","确认保存循环","各延迟枚举","各加速枚举","保存循环结果","异常结果","加速","实际加速值","延迟","模拟结果","本次日志","战斗秒","用于计算循环","循环加速等级","循环延迟要求","技能详情","新自定义循环","标题","类型","循环详情","AddCycleSkillModal","插入位置","插入索引","addCycle","slice","React"],"sourceRoot":""}