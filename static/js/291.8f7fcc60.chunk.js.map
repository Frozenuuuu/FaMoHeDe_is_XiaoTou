{"version":3,"file":"static/js/291.8f7fcc60.chunk.js","mappings":"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CA,eACA,eACA,2BACA,eACA,eACA,eACA,eACA,eACA,2BACA,eACA,qBACA,qBACA,eACA,eACA,eACA,eACA,eACA,2BACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,2BACA,eACA,eACA,eACA,2BACA,eACA,eACA,qBACA,qBACA,eACA,eACA,eACA,eACA,2BACA,eACA,eACA,eACA,eACA,eACA,2BACA,2BACA,eACA,eACA,eACA,eACA,eACA,eACA,qBACA,qBACA,eACA,eACA,eACA,eACA,eACA,2BACA,eACA,eACA,eACA,eACA,eACA,2BACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,2BACA,eACA,eACA,qBACA,qBACA,eACA,eACA,eACA,eACA,2BACA,eACA,eACA,eACA,eACA,eACA,2BACA,2BACA,eACA,eACA,eACA,eACA,eACA,eACA,qBACA,qBACA,eACA,eACA,eACA,eACA,eACA,2BACA,eACA,eACA,eACA,eACA,eACA,2BACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,2BACA,eACA,eACA,qBACA,qBACA,eACA,eACA,eACA,eACA,2BACA,eACA,eACA,eACA,eACA,eACA,2BACA,2BACA,eACA,kB,UC6EJ,OA5NA,SAA0B8J,GAA+B,IAAD,IAEpD2I,EAiBE3I,EAjBF2I,MACAC,EAgBE5I,EAhBF4I,mEACAC,EAeE7I,EAfF6I,yBACAC,EAcE9I,EAdF8I,qCACAC,EAaE/I,EAbF+I,iDACAC,EAYEhJ,EAZFgJ,qCACArI,EAWEX,EAXFW,+BACAsI,EAUEjJ,EAVFiJ,2CACAnS,EASEkJ,EATFlJ,yBACAoS,EAQElJ,EARFkJ,qCAEAtH,EAME5B,EANF4B,yBACAuH,EAKEnJ,EALFmJ,qCACA/I,EAIEJ,EAJFI,yBACAgJ,EAGEpJ,EAHFoJ,qCACAC,EAEErJ,EAFFqJ,yBACA1J,EACEK,EADFL,+BAGI2J,GAAQC,EAAAA,EAAAA,IAAe,SAACC,GAAD,oBAAWA,QAAX,IAAWA,GAAX,UAAWA,EAAO/V,YAAlB,aAAW,EAAagW,0CAAxB,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","sources":["功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/constant/skill.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/constant/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/utils.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/utils.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/通用类/技能统一类.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/断脉/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/通用类/有CD技能通用类.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/截阳/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/引窍/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/破穴/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/雾刃飞光/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/骤风令/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/劈风令/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/骤风劈风/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/抟风令/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/抟风令断/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/雪重花满/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/朔风扬尘一/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/朔风扬尘二/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/风流云散/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/一阳来复/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/经脉循行/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/触发橙武/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/技能类/换行/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/main.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/simulator/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/constant/快速导入默认循环.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/constant/快速导入默认循环/模拟器_一阳来复_1延迟.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/components/CycleModalHeader/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/components/StatusBar/energy/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/components/StatusBar/buff/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/components/StatusBar/dpsRes/components/BattleLogModal.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/components/StatusBar/dpsRes/components/SkillCountModal.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/components/StatusBar/dpsRes/components/BuffCountModal/util.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/components/StatusBar/dpsRes/components/BuffCountModal/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/components/StatusBar/dpsRes/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/components/StatusBar/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/components/CycleSkillItem/BuffItem.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/components/CycleSkillItem/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/components/AddCycleSkillBtns/AddCycleSkillBtn.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/components/AddCycleSkillBtns/快捷添加.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/components/AddCycleSkillBtns/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/components/SaveCustomCycleModal/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/components/QixueSetModal/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/components/AddCycleSkillModal/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/周天功/index.tsx"],"sourcesContent":["import { Buff枚举, 循环基础技能数据类型, 日志类型 } from '../simulator/type'\nimport { 基础GCD帧 } from '.'\nimport { 每秒郭氏帧 } from '@/数据/常量'\n\n// 技能图标引入\n\nconst 循环模拟技能基础数据: 循环基础技能数据类型[] = [\n  {\n    技能名称: '断脉',\n    技能释放后添加GCD: 基础GCD帧,\n    技能GCD组: '公共',\n    技能类型: '一阳指',\n    图标: 'https://icon.jx3box.com/icon/22816.png',\n    技能原始名称: '断脉',\n  },\n  {\n    技能名称: '截阳',\n    技能释放后添加GCD: 基础GCD帧,\n    技能CD: 每秒郭氏帧 * 5, // 5秒CD\n    技能GCD组: '公共',\n    图标: 'https://icon.jx3box.com/icon/22817.png',\n    技能类型: '一阳指',\n    技能原始名称: '截阳',\n    最大充能层数: 3,\n    充能层数: 3,\n  },\n  {\n    技能名称: '引窍',\n    技能释放后添加GCD: 基础GCD帧,\n    技能CD: 每秒郭氏帧 * (9 - 2), //秘籍-2\n    技能GCD组: '公共',\n    技能类型: '一阳指',\n    最大充能层数: 2,\n    图标: 'https://icon.jx3box.com/icon/22820.png',\n    技能原始名称: '引窍',\n  },\n  {\n    技能名称: '破穴',\n    技能释放后添加GCD: 基础GCD帧,\n    技能CD: 每秒郭氏帧 * 12,\n    技能GCD组: '公共',\n    技能类型: '一阳指',\n    图标: 'https://icon.jx3box.com/icon/22819.png',\n    技能原始名称: '破穴',\n  },\n  // {\n  //   技能名称: '雾海萦空',\n  //   技能释放后添加GCD: 基础GCD帧,\n  //   技能CD: 每秒郭氏帧 * 20,\n  //   技能GCD组: '公共',\n  //   技能类型: '空蒙扇',\n  //   图标: 'https://icon.jx3box.com/icon/22811.png',\n  //   技能原始名称: '雾海萦空',\n  // },\n  // {\n  //   技能名称: '雾刃飞光',\n  //   // 技能释放后添加GCD: 基础GCD帧,\n  //   技能释放后添加GCD: 24 - 9,\n  //   技能CD: 每秒郭氏帧 * 20,\n  //   技能GCD组: '自身',\n  //   技能类型: '空蒙扇',\n  //   图标: 'https://icon.jx3box.com/icon/22812.png',\n  //   技能原始名称: '雾刃飞光',\n  // },\n  {\n    技能名称: '骤风令',\n    技能释放后添加GCD: 基础GCD帧 - 8,\n    技能CD: 每秒郭氏帧 * 25,\n    技能GCD组: '公共',\n    技能类型: '聘风令',\n    图标: 'https://icon.jx3box.com/icon/22815.png',\n    技能原始名称: '骤风令',\n  },\n  {\n    技能名称: '劈风令',\n    技能释放后添加GCD: 基础GCD帧,\n    技能CD: 每秒郭氏帧 * 8,\n    技能GCD组: '公共',\n    技能类型: '聘风令',\n    图标: 'https://icon.jx3box.com/icon/22813.png',\n    技能原始名称: '劈风令',\n    最大充能层数: 2,\n    充能层数: 2,\n  },\n  {\n    技能名称: '骤风劈风',\n    技能释放后添加GCD: 基础GCD帧,\n    技能GCD组: '自身',\n    技能类型: '聘风令',\n    图标: 'https://icon.jx3box.com/icon/22813.png',\n    技能原始名称: '骤风劈风',\n  },\n  {\n    技能名称: '抟风令',\n    技能释放后添加GCD: 基础GCD帧,\n    技能CD: 每秒郭氏帧 * 55,\n    技能GCD组: '公共',\n    技能类型: '聘风令',\n    图标: 'https://icon.jx3box.com/icon/22814.png',\n    技能原始名称: '抟风令',\n  },\n  {\n    技能名称: '风流云散',\n    技能释放后添加GCD: 基础GCD帧,\n    技能CD: 每秒郭氏帧 * 26,\n    显示类型: '奇穴技能',\n    依赖奇穴名: '出岫',\n    技能GCD组: '自身',\n    技能类型: '其他',\n    图标: 'https://icon.jx3box.com/icon/22807.png',\n    技能原始名称: '风流云散',\n  },\n  {\n    技能名称: '抟风令断',\n    技能释放后添加GCD: 基础GCD帧,\n    技能CD: 每秒郭氏帧 * 55,\n    技能GCD组: '公共',\n    技能类型: '聘风令',\n    图标: 'https://icon.jx3box.com/icon/22814.png',\n    技能原始名称: '抟风令断',\n  },\n  {\n    技能名称: '朔风扬尘一',\n    显示类型: '奇穴技能',\n    依赖奇穴名: '朔风扬尘',\n    技能释放后添加GCD: 基础GCD帧 - 10,\n    技能CD: 每秒郭氏帧 * 40,\n    技能GCD组: '公共',\n    技能类型: '其他',\n    图标: 'https://icon.jx3box.com/icon/22874.png',\n  },\n  {\n    技能名称: '朔风扬尘二',\n    显示类型: '奇穴技能',\n    依赖奇穴名: '朔风扬尘',\n    技能释放后添加GCD: 基础GCD帧 - 10,\n    技能GCD组: '公共',\n    技能类型: '其他',\n    图标: 'https://icon.jx3box.com/icon/22874.png',\n  },\n  {\n    技能名称: '一阳来复',\n    技能释放后添加GCD: 基础GCD帧,\n    依赖奇穴名: '一阳来复',\n    技能CD: 每秒郭氏帧 * 25,\n    技能GCD组: '自身',\n    显示类型: '奇穴技能',\n    技能类型: '其他',\n    图标: 'https://icon.jx3box.com/icon/22876.png',\n    技能原始名称: '一阳来复',\n  },\n  {\n    技能名称: '触发橙武',\n    技能释放后添加GCD: 0,\n    技能CD: 每秒郭氏帧 * 30,\n    技能GCD组: '自身',\n    技能类型: '其他',\n    显示类型: '大橙武模拟',\n    图标: 'https://icon.jx3box.com/icon/2589.png',\n  },\n  {\n    技能名称: '换行',\n    技能释放后添加GCD: 0,\n    技能CD: 0,\n    技能GCD组: '自身',\n    技能类型: '其他',\n    图标: 'https://icon.jx3box.com/icon/6932.png',\n    说明: '插入换行将只以”换行“作为展示换行。 若无\"换行\"则默认以”骤风令“作为展示换行.',\n  },\n]\n\nexport default 循环模拟技能基础数据\n\nexport const 日志类型数组: 日志类型[] = [\n  '释放技能',\n  '自身buff变动',\n  '目标buff变动',\n  '造成伤害',\n  '技能释放结果',\n  '等CD',\n  '循环异常',\n]\n\nexport enum 技能GCD组 {\n  公共,\n  自身,\n  换箭,\n}\n\n// Map预备数据\nexport const 原始Buff数据: Buff枚举 = {\n  // Buff\n  经脉循行: {\n    名称: '经脉循行',\n    最大层数: 1,\n    最大持续时间: 99999,\n    图标: 'https://icon.jx3box.com/icon/22818.png',\n    备注: '每秒回复任督脉3点，点奇穴后5点',\n  },\n  玉枕: {\n    名称: '玉枕',\n    最大层数: 1,\n    图标: 'https://icon.jx3box.com/icon/22955.png',\n    备注: '经脉循行期间无视防御50%',\n  },\n  茫缈: {\n    名称: '茫缈',\n    最大层数: 1,\n    最大持续时间: 每秒郭氏帧 * 2,\n    图标: 'https://icon.jx3box.com/icon/22971.png',\n    备注: '释放骤风令后2秒内可以释放无GCD劈风令',\n  },\n  神门: {\n    名称: '神门',\n    最大层数: 1,\n    最大持续时间: 每秒郭氏帧 * 23,\n    图标: 'https://icon.jx3box.com/icon/22961.png',\n    备注: '“经脉循行”状态下施展“破穴”后，基础攻击力提高20%，无双额外提高20%持续23秒。',\n  },\n  绝脉: {\n    名称: '绝脉',\n    最大层数: 10,\n    最大持续时间: 每秒郭氏帧 * 30,\n    图标: 'https://icon.jx3box.com/icon/22817.png',\n    备注: '可被引爆，最多10层，点奇穴15层',\n  },\n  封府断脉链: {\n    名称: '封府断脉链',\n    最大层数: 1,\n    最大持续时间: 每秒郭氏帧 * 2,\n    图标: 'https://icon.jx3box.com/icon/22816.png',\n    备注: '施展截阳可以造成封府伤害',\n  },\n  封府截阳链: {\n    名称: '封府截阳链',\n    最大层数: 1,\n    最大持续时间: 每秒郭氏帧 * 2,\n    图标: 'https://icon.jx3box.com/icon/22817.png',\n    备注: '施展断脉可以造成封府伤害',\n  },\n  骤风: {\n    名称: '骤风',\n    最大层数: 1,\n    最大持续时间: 每秒郭氏帧 * 8,\n    图标: 'https://icon.jx3box.com/icon/22815.png',\n    备注: '每0.75秒造成一次伤害',\n  },\n  出岫: {\n    名称: '出岫',\n    最大层数: 1,\n    最大持续时间: 每秒郭氏帧 * 2,\n    图标: 'https://icon.jx3box.com/icon/22976.png',\n    备注: '出岫',\n  },\n  朔风扬尘: {\n    名称: '朔风扬尘',\n    最大层数: 7,\n    最大持续时间: 每秒郭氏帧 * 7,\n    图标: 'https://icon.jx3box.com/icon/22874.png',\n    备注: '每层可以释放一次二式',\n  },\n  扬尘: {\n    名称: '扬尘',\n    最大层数: 7,\n    最大持续时间: 每秒郭氏帧 * 20,\n    图标: 'https://icon.jx3box.com/icon/22993.png',\n    备注: '每层提高经脉循行1点秒回',\n  },\n  扬尘增伤: {\n    名称: '扬尘增伤',\n    最大层数: 7,\n    最大持续时间: 每秒郭氏帧 * 2,\n    图标: 'https://icon.jx3box.com/icon/22993.png',\n    备注: '每层提高扬尘二式伤害',\n  },\n  横驱风靡: {\n    名称: '横驱风靡',\n    最大层数: 1,\n    最大持续时间: 每秒郭氏帧 * 8,\n    图标: 'https://icon.jx3box.com/icon/22814.png',\n    备注: '被抟风令强化，每0.75秒造成一次伤害',\n  },\n  橙武: {\n    名称: '橙武',\n    最大层数: 1,\n    最大持续时间: 每秒郭氏帧 * 8,\n    图标: 'https://icon.jx3box.com/icon/2589.png',\n    备注: '先写着玩的，假设施展“引窍”不消耗能量且无调息',\n  },\n  // 劲风簇追: {\n  //   名称: '劲风簇追',\n  //   最大层数: 1,\n  //   最大持续时间: 每秒郭氏帧 * 3, // GCD结束以后buff才上，这里省事写 2 + 1\n  //   图标: 引窍,\n  //   备注: '此时释放白羽流星为释放驰风鸣角',\n  // },\n  // 饮羽簇追: {\n  //   名称: '饮羽簇追',\n  //   最大层数: 1,\n  //   最大持续时间: 每秒郭氏帧 * 3.5, // GCD结束以后buff才上，这里省事写 2 + 1.5\n  //   图标: 破穴,\n  //   备注: '此时释放白羽流星为释放没石饮羽',\n  // },\n  // 佩弦: {\n  //   名称: '佩弦',\n  //   最大层数: 1,\n  //   最大持续时间: 每秒郭氏帧 * 10,\n  //   图标: peixian,\n  //   备注: '施展金乌见坠后下一次饮羽簇无需运功',\n  // },\n  // 橙武: {\n  //   名称: '橙武',\n  //   最大层数: 1,\n  //   最大持续时间: 每秒郭氏帧 * 8,\n  //   图标: zhuangshengxiaomeng,\n  //   备注: '“饮羽簇”无需运功且无调息，“饮羽簇”造成伤害时对目标造成一次额外伤害',\n  // },\n  // 苍梧引灵阵五重: {\n  //   名称: '苍梧引灵阵五重',\n  //   最大层数: 1,\n  //   最大持续时间: 每秒郭氏帧 * 6,\n  //   图标: 'https://icon.jx3box.com/icon/19614.png',\n  //   备注: '每次阵眼施展“白羽流星”强化招式时，使小队成员会心效果提高15%，持续6秒。',\n  // },\n  // 丛云隐月: {\n  //   名称: '丛云隐月',\n  //   最大层数: 1,\n  //   最大持续时间: 每秒郭氏帧 * 10,\n  //   图标: 'https://icon.jx3box.com/icon/20297.png',\n  //   备注: '招式内力消耗降低80%，“白羽流星”无调息时间',\n  // },\n  // 诸怀: {\n  //   名称: '诸怀',\n  //   最大层数: 1,\n  //   图标: 'https://icon.jx3box.com/icon/20281.png',\n  //   备注: '自身外功基础攻击提高10%，无视目标20%外功防御',\n  // },\n  // // DOT\n  // 贯穿: {\n  //   名称: '贯穿',\n  //   最大层数: 6,\n  //   最大作用次数: 4,\n  //   最大持续时间: 每秒郭氏帧 * 2,\n  //   伤害频率: 8,\n  //   是否吃加速: false, // 贯穿不吃加速 魔盒显示最小和最大作用间隔都为8 https://www.jx3box.com/app/database/?type=buff&query=26856&level=1\n  //   图标: guanchuan,\n  //   备注: '每0.5秒造成一次伤害，最大可叠加六层',\n  // },\n}\n","// BUFF持续最大时间,视为永久\nexport const BUFF持续最大时间 = 99999999999\n\nexport const 基础GCD帧 = 24\n","import { 循环技能详情, 技能增益列表数据 } from '@/@types/循环'\nimport { 循环日志数据类型 } from './simulator/type'\nimport { 每秒郭氏帧 } from '@/数据/常量'\n\nexport const getDpsCycle = (data: 循环日志数据类型[]): 循环技能详情[] => {\n  const res: { [key: string]: 循环技能详情 } = {}\n  for (let i = 0; i < data.length; i++) {\n    const 当前数据 = data[i]\n    const 本次造成伤害次数 = 当前数据?.其他数据?.伤害次数 || 1\n    const 本次技能等级 = 当前数据?.其他数据?.技能等级 || 1\n    if (当前数据?.日志类型 === '造成伤害') {\n      const 当前日志对应技能枚举 = 获取当前日志对应技能枚举(当前数据?.日志)\n\n      const key = `${当前日志对应技能枚举}_${本次技能等级}`\n\n      let 增益列表 = res[key]?.技能增益列表 || []\n      if (!增益列表?.length) {\n        if (当前数据?.buff列表?.length) {\n          增益列表 = 增益列表.concat([\n            {\n              增益名称: 当前数据?.buff列表?.join(','),\n              增益技能数: 本次造成伤害次数,\n            },\n          ])\n        }\n      } else {\n        if (当前数据?.buff列表?.length) {\n          let 不存在相同增益 = true\n          增益列表 = 增益列表.map((item) => {\n            const 技能增益列表 = item?.增益名称?.split(',') || []\n            if (\n              技能增益列表?.length === 当前数据?.buff列表?.length &&\n              !技能增益列表?.some((a) => !当前数据?.buff列表?.includes(a))\n            ) {\n              不存在相同增益 = false\n              return {\n                增益名称: item.增益名称,\n                增益技能数: item.增益技能数 + 本次造成伤害次数,\n              }\n            } else {\n              return {\n                ...item,\n              }\n            }\n          })\n          if (不存在相同增益) {\n            增益列表 = 增益列表.concat({\n              增益名称: 当前数据?.buff列表?.join(','),\n              增益技能数: 本次造成伤害次数,\n            })\n          }\n        }\n      }\n\n      res[key] = {\n        ...res[key],\n        技能名称: 当前日志对应技能枚举,\n        技能等级: 本次技能等级,\n        技能数量: (res[key]?.技能数量 || 0) + 本次造成伤害次数,\n        技能增益列表: [...增益列表],\n      }\n    }\n  }\n\n  const 结果循环 = Object.keys(res).map((item) => {\n    const v = res[item]\n    return {\n      ...v,\n      技能数量: Math.round(v.技能数量),\n      技能增益列表: v.技能增益列表?.map((d) => {\n        return {\n          ...d,\n          增益技能数: Math.round(d.增益技能数),\n        }\n      }),\n    }\n  })\n\n  return 结果循环\n}\n\nexport const getSingleSkillDpsCycle = (当前数据: 循环日志数据类型): 循环技能详情 => {\n  const 当前日志对应技能枚举 = 获取当前日志对应技能枚举(当前数据?.日志)\n  const 伤害次数 = 当前数据?.其他数据?.伤害次数 || 1\n  let 增益列表: 技能增益列表数据[] = []\n  if (!增益列表?.length) {\n    if (当前数据?.buff列表) {\n      增益列表 = 增益列表.concat({\n        增益名称: 当前数据?.buff列表?.join(','),\n        增益技能数: 伤害次数,\n      })\n    }\n  } else {\n    if (当前数据?.buff列表?.length) {\n      let 不存在相同增益 = true\n      增益列表 = 增益列表.map((item) => {\n        const 技能增益列表 = item?.增益名称?.split(',') || []\n        if (\n          技能增益列表?.length === 当前数据?.buff列表?.length &&\n          !技能增益列表?.some((a) => !当前数据?.buff列表?.includes(a))\n        ) {\n          不存在相同增益 = false\n          return {\n            增益名称: item.增益名称,\n            增益技能数: item.增益技能数 + 伤害次数,\n          }\n        } else {\n          return {\n            ...item,\n          }\n        }\n      })\n      if (不存在相同增益) {\n        增益列表 = 增益列表.concat({\n          增益名称: 当前数据?.buff列表?.join(','),\n          增益技能数: 伤害次数,\n        })\n      }\n    }\n  }\n\n  return {\n    技能名称: 当前日志对应技能枚举,\n    技能数量: 伤害次数,\n    技能增益列表: [...增益列表],\n  }\n}\n\nexport const 判断上一个同名技能 = (当前技能, 循环) => {\n  // 上一个同名技能\n  const 循环副本 = [...循环]\n  循环副本.reverse()\n  let 剩余CD = 0\n\n  const 上一个同名技能 = 循环副本?.find((item) => {\n    if (item?.实际技能) {\n      // 用下一个技能可以释放时间判断不是当前技能\n      return item?.实际技能 === 当前技能?.实际技能 && item?.下一个技能可以释放时间\n    } else {\n      const 正常技能判定 = item?.技能名称 === 当前技能?.技能名称 && item?.下一个技能可以释放时间\n      // 用下一个技能可以释放时间判断不是当前技能\n      return 正常技能判定\n    }\n  })\n\n  if (上一个同名技能) {\n    const 实际CD = 当前技能?.技能CD\n    const 上一个同名技能释放时间 = (上一个同名技能?.本技能实际释放时间 || 0) + (实际CD || 0)\n    const 下一个技能可以释放时间 = 循环[循环.length - 1]?.下一个技能可以释放时间\n\n    剩余CD =\n      上一个同名技能释放时间 - 下一个技能可以释放时间 > 0\n        ? 上一个同名技能释放时间 - 下一个技能可以释放时间\n        : 0\n  }\n\n  return { 上一个同名技能, 剩余CD }\n}\n\nexport const 获取总用时 = (时间) => {\n  const 用时秒 = Math.round((时间 / 每秒郭氏帧) * 100) / 100\n  return 用时秒\n}\n\nexport const 获取显示秒伤 = (最后一条伤害数据) => {\n  return Math.round((最后一条伤害数据?.造成总伤害 || 0) / (最后一条伤害数据?.日志时间 / 每秒郭氏帧))\n}\n\n// 没表明枚举就直接取原值\nexport const Skill_Cycle_Map = {}\n\nconst 获取当前日志对应技能枚举 = (日志) => {\n  return Skill_Cycle_Map[日志] || 日志\n}\n\nexport const 根据加速等级获取虚拟加速值 = (加速等级) => {\n  const 加速等级枚举 = {\n    0: 0,\n    1: 206,\n    2: 9230,\n    3: 19280,\n    4: 30151,\n    5: 42047,\n  }\n  return 加速等级枚举[加速等级]\n}\n\nexport const 判断有无橙武循环数据 = (循环, 大橙武启用) => {\n  if (!大橙武启用) {\n    return 循环.filter((item) => {\n      return !item?.技能序列?.includes('触发橙武')\n    })\n  } else {\n    return 循环\n  }\n}\n","import { 每秒郭氏帧 } from '@/数据/常量'\nimport 循环模拟技能基础数据, { 原始Buff数据 } from '../constant/skill'\nimport { 循环基础技能数据类型, DotDTO } from './type'\n\nexport const 根据奇穴修改buff数据 = (奇穴: string[]) => {\n  const res = {}\n  const 判断奇穴 = (val) => {\n    return 奇穴?.includes(val)\n  }\n\n  Object.keys(原始Buff数据).forEach((key) => {\n    const obj = 原始Buff数据[key]\n    switch (key) {\n      case '贯穿':\n        if (判断奇穴('桑柘')) {\n          // eslint-disable-next-line @typescript-eslint/no-extra-semi\n          ;(obj as DotDTO).最大作用次数 = 5\n          ;(obj as DotDTO).最大持续时间 = 40\n        } else {\n          // eslint-disable-next-line @typescript-eslint/no-extra-semi\n          ;(obj as DotDTO).最大作用次数 = 4\n          ;(obj as DotDTO).最大持续时间 = 32\n        }\n        break\n      default:\n        break\n    }\n    res[key] = obj\n  })\n\n  return res\n}\n\nexport const 根据奇穴修改技能数据 = (奇穴: string[]): 循环基础技能数据类型[] => {\n  const 判断奇穴 = (val) => {\n    return 奇穴?.includes(val)\n  }\n\n  const res: 循环基础技能数据类型[] = 循环模拟技能基础数据.map((技能) => {\n    if (技能?.技能名称 === '引窍') {\n      return 判断奇穴('悬枢')\n        ? {\n            ...技能,\n            最大充能层数: 2,\n          }\n        : 技能\n    } else if (技能?.技能名称 === '风流云散') {\n      let 技能原始CD = 技能.技能CD || 0\n      let 最大充能层数 = 技能.最大充能层数 || 1\n\n      if (判断奇穴('出岫')) {\n        技能原始CD = 每秒郭氏帧 * 18 - 每秒郭氏帧 * 4\n        最大充能层数 = 2\n      }\n\n      return {\n        ...技能,\n        技能CD: 技能原始CD,\n        最大充能层数,\n      }\n    } else if (技能?.技能名称 === '劈风令') {\n      return 判断奇穴('见飓')\n        ? {\n            ...技能,\n            最大充能层数: 3,\n          }\n        : 技能\n    } else if (技能?.技能名称 === '抟风令') {\n      let 技能原始CD = 技能.技能CD || 0\n      if (判断奇穴('清激')) {\n        技能原始CD = 技能原始CD - 每秒郭氏帧 * 10\n      }\n      return {\n        ...技能,\n        技能CD: 技能原始CD,\n      }\n    } else if (技能?.技能名称 === '抟风令断') {\n      let 技能原始CD = 技能.技能CD || 0\n      if (判断奇穴('清激')) {\n        技能原始CD = 技能原始CD - 每秒郭氏帧 * 10\n      }\n      return {\n        ...技能,\n        技能CD: 技能原始CD,\n      }\n    } else {\n      return 技能\n    }\n  })\n\n  return res\n}\n\nexport const ERROR_ACTION = {\n  充能不足: {\n    信息: '当前技能没有可释放层数',\n  },\n  BUFF错误: {\n    信息: '当前没有对应的BUFF',\n  },\n}\n\nexport const 根据加速等级获取虚拟加速值 = (加速等级) => {\n  const 加速等级枚举 = {\n    0: 0,\n    1: 206,\n    2: 9230,\n    3: 19280,\n    4: 30151,\n    5: 42047,\n  }\n  return 加速等级枚举[加速等级]\n}\n\nexport const 转化buff和增益名称 = (增益名称, buff列表) => {\n  return buff列表?.[增益名称]\n}\n","import 循环主类类型 from '../main'\nimport { 技能释放记录结果 } from '../type'\n\nclass 技能统一类 {\n  模拟循环: 循环主类类型 = {} as any\n  本次释放记录: 技能释放记录结果 = {}\n\n  constructor(模拟循环) {\n    this.模拟循环 = 模拟循环\n    return\n  }\n\n  释放前初始化() {\n    // 重置释放记录\n    this.本次释放记录 = {}\n  }\n\n  触发伤害行为(\n    伤害名称,\n    伤害次数 = 1,\n    额外增益列表: string[] = [],\n    触发伤害时间: number | undefined = undefined,\n    技能等级 = 1\n  ) {\n    // 判断玉枕\n    const 增益列表 = [...额外增益列表]\n    // 当前技能数据?.宠物伤害\n    if (\n      this.模拟循环.校验奇穴是否存在('玉枕') &&\n      this.模拟循环.当前自身buff列表?.['经脉循行']?.当前层数\n    ) {\n      增益列表.push('玉枕')\n    }\n    this.模拟循环.技能造成伤害?.(伤害名称, 伤害次数, 增益列表, 触发伤害时间, false, 技能等级)\n  }\n\n  获取技能释放记录结果() {\n    return {\n      ...this.本次释放记录,\n    }\n  }\n\n  获取当前重要buff列表(技能依赖自身buff列表: string[] = [], 技能依赖目标buff列表: string[] = []) {\n    const 重要buff列表: string[] = []\n    技能依赖自身buff列表.forEach((buff) => {\n      if (this.模拟循环.当前自身buff列表?.[buff]?.当前层数) {\n        重要buff列表.push(buff)\n      }\n    })\n    技能依赖目标buff列表.forEach((buff) => {\n      if (this.模拟循环.当前目标buff列表?.[buff]?.当前层数) {\n        重要buff列表.push(buff)\n      }\n    })\n    return 重要buff列表 || []\n  }\n\n  获取施加重要buff信息(buff名称) {\n    const 当前时间 = this.模拟循环.当前时间 || 0\n    const buff对象 = this.模拟循环.Buff和Dot数据?.[buff名称]\n\n    return buff对象\n      ? {\n          buff名称: buff名称,\n          buff开始时间: 当前时间,\n          buff结束时间: 当前时间 + (buff对象?.最大持续时间 || 0),\n        }\n      : null\n  }\n}\n\nexport default 技能统一类\n","import { 每秒郭氏帧 } from '@/数据/常量'\nimport 循环模拟技能基础数据 from '../../../constant/skill'\nimport 技能统一类 from '../../通用类/技能统一类'\n\nclass 断脉 extends 技能统一类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '断脉')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  释放() {\n    return\n  }\n\n  命中() {\n    this?.模拟循环?.回复能量(15, '任脉')\n    this.触发伤害行为?.('断脉')\n\n    // 触发封府\n    if (this?.模拟循环?.当前自身buff列表?.['封府截阳链']?.当前层数) {\n      this.触发伤害行为?.('封府')\n      this.模拟循环.卸除buff?.({ 名称: '封府截阳链', 对象: '自身', 卸除层数: 1 })\n    }\n\n    if (this.模拟循环.校验奇穴是否存在?.('封府')) {\n      this.模拟循环.添加buff?.({ 名称: '封府断脉链', 对象: '自身' })\n    }\n\n    if (this.模拟循环.校验奇穴是否存在?.('反朴')) {\n      this.模拟循环.技能类实例集合?.引窍?.减少调息时间?.(每秒郭氏帧 * 1)\n      this.模拟循环.技能类实例集合?.截阳?.减少调息时间?.(每秒郭氏帧 * 1)\n    }\n\n    if (this.模拟循环.校验奇穴是否存在?.('卫分')) {\n      if (!this?.模拟循环?.当前目标buff列表?.['绝脉']?.当前层数) {\n        this?.模拟循环?.回复能量(15, '任脉')\n      }\n    }\n\n    this.模拟循环.判断逆脉()\n    this.模拟循环.判断扬尘()\n    this.保存释放记录()\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表(['出岫']),\n    }\n  }\n}\n\nexport default 断脉\n\nexport const 断脉类型 = typeof 断脉\n","import { 技能运行数据类型 } from '../type'\nimport 技能统一类 from './技能统一类'\n\nclass 有CD技能通用类 extends 技能统一类 {\n  技能运行数据: 技能运行数据类型 = {\n    待充能时间点: [],\n  }\n\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  初始化技能运行数据() {\n    this.技能运行数据.待充能时间点 = []\n  }\n\n  更新技能运行数据(新数据) {\n    this.技能运行数据 = {\n      ...this.技能运行数据,\n      ...新数据,\n    }\n  }\n}\n\nexport default 有CD技能通用类\n","import 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 截阳 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '截阳')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n\n    //\n    截阳.技能数据 = 模拟循环?.技能基础数据?.find((item) => item.技能名称 === '截阳')\n\n    this.初始化技能运行数据()\n  }\n\n  减少调息时间(减少帧数) {\n    const 待充能时间点 = this.技能运行数据.待充能时间点\n    if (待充能时间点?.length) {\n      const 新待充能时间点 = 待充能时间点\n        .map((item) => {\n          return item - 减少帧数\n        })\n        ?.filter((item) => {\n          return item > this.模拟循环.当前时间\n        })\n      this.更新技能运行数据({ 待充能时间点: 新待充能时间点 })\n    }\n  }\n\n  命中() {\n    this?.模拟循环?.回复能量(20, '督脉')\n    this.触发伤害行为?.('截阳')\n\n    this.模拟循环.添加buff?.({ 名称: '绝脉', 对象: '目标' })\n    this.模拟循环.添加buff?.({ 名称: '绝脉', 对象: '目标' })\n    this.模拟循环.添加buff?.({ 名称: '绝脉', 对象: '目标' })\n\n    // 触发封府\n    if (this?.模拟循环?.当前自身buff列表?.['封府断脉链']?.当前层数) {\n      this.触发伤害行为?.('封府')\n      this.模拟循环.卸除buff?.({ 名称: '封府断脉链', 对象: '自身', 卸除层数: 1 })\n    }\n\n    if (this.模拟循环.校验奇穴是否存在?.('封府')) {\n      this.模拟循环.添加buff?.({ 名称: '封府截阳链', 对象: '自身' })\n    }\n\n    this.模拟循环.判断扬尘()\n\n    this.保存释放记录()\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表(['出岫']),\n    }\n  }\n}\n\nexport default 截阳\n\nexport const 截阳类型 = typeof 截阳\n","import 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 引窍 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '引窍')\n  static 释放重置 = false\n\n  constructor(模拟循环) {\n    super(模拟循环)\n\n    //\n    引窍.技能数据 = 模拟循环?.技能基础数据?.find((item) => item.技能名称 === '引窍')\n\n    this.初始化技能运行数据()\n  }\n\n  减少调息时间(减少帧数) {\n    const 待充能时间点 = this.技能运行数据.待充能时间点\n    if (待充能时间点?.length) {\n      const 新待充能时间点 = 待充能时间点\n        .map((item) => {\n          return item - 减少帧数\n        })\n        ?.filter((item) => {\n          return item > this.模拟循环.当前时间\n        })\n      this.更新技能运行数据({ 待充能时间点: 新待充能时间点 })\n    }\n  }\n\n  重置调息时间() {\n    this.更新技能运行数据({ 待充能时间点: [] })\n  }\n\n  释放后() {\n    if (引窍.释放重置) {\n      this.更新技能运行数据({ 待充能时间点: [] })\n    }\n    引窍.释放重置 = false\n  }\n\n  命中() {\n    引窍.释放重置 = false\n\n    if (this.模拟循环.校验奇穴是否存在('悬枢')) {\n      this.模拟循环.添加buff?.({ 名称: '绝脉', 对象: '目标' })\n      this.模拟循环.添加buff?.({ 名称: '绝脉', 对象: '目标' })\n    }\n\n    // 这一行要放在触发悬枢的前面，能否引爆看释放前绝脉数量\n    const 当前绝脉层数 = this.模拟循环.当前目标buff列表?.['绝脉']?.当前层数 || 0\n\n    this.触发伤害行为('绝脉', 1, [], undefined, 2)\n    this.模拟循环.添加战斗日志({\n      日志: `引窍引爆绝脉等级${2}`,\n      日志类型: '技能释放结果',\n    })\n\n    this.模拟循环.卸除buff?.({ 名称: '绝脉', 对象: '目标', 卸除层数: 2 })\n\n    const 存在CWBuff = this.模拟循环.当前自身buff列表?.['橙武']?.当前层数\n    const 当前任脉值 = this.模拟循环.角色状态信息.能量信息.任脉\n    const 当前督脉值 = this.模拟循环.角色状态信息.能量信息.督脉\n    const 伤害等级 = Math.ceil(Math.max(Math.min(当前任脉值 * 0.5, 50), 1)) + 1\n\n    if (当前任脉值 > 0) {\n      this.触发伤害行为('引窍', 1, [], undefined, 伤害等级)\n      this.触发伤害行为('破', 1, [], undefined, 伤害等级)\n    } else {\n      this.触发伤害行为('引窍', 1, [], undefined, 1)\n      this.触发伤害行为('破', 1, [], undefined, 1)\n    }\n\n    this.模拟循环.添加战斗日志({\n      日志: `引窍伤害等级${伤害等级}`,\n      日志类型: '技能释放结果',\n    })\n\n    if (\n      (this.模拟循环.技能类实例集合?.经脉循行.经脉循行状态校验() &&\n        this.模拟循环.校验奇穴是否存在('丘墟')) ||\n      存在CWBuff\n    ) {\n      引窍.释放重置 = true\n    }\n\n    const 引爆绝脉次数 = Math.floor(Math.min(当前绝脉层数, 当前督脉值 * 0.1))\n\n    if (引爆绝脉次数) {\n      this.触发伤害行为('绝脉', 1, [], undefined, 引爆绝脉次数)\n      this.模拟循环.添加战斗日志({\n        日志: `引窍引爆绝脉等级${引爆绝脉次数}`,\n        日志类型: '技能释放结果',\n      })\n\n      this.模拟循环.卸除buff?.({ 名称: '绝脉', 对象: '目标', 卸除层数: 引爆绝脉次数 })\n    }\n\n    const 神封校验结果 = this.模拟循环.神封校验()\n\n    this.模拟循环.消耗当前一半能量()\n    if (神封校验结果) {\n      this.模拟循环.神封触发()\n    }\n\n    if (存在CWBuff) {\n      this?.模拟循环?.回复能量(30, '任脉')\n      this?.模拟循环?.回复能量(30, '督脉')\n    }\n\n    this.模拟循环.技能类实例集合?.经脉循行.经脉循行卸除校验()\n\n    this.模拟循环.判断扬尘()\n\n    this.保存释放记录()\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表(['出岫']),\n    }\n  }\n}\n\nexport default 引窍\n\nexport const 引窍类型 = typeof 引窍\n","import { 每秒郭氏帧 } from '@/数据/常量'\nimport 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 破穴 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '破穴')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n\n    //\n    破穴.技能数据 = 模拟循环?.技能基础数据?.find((item) => item.技能名称 === '破穴')\n\n    this.初始化技能运行数据()\n  }\n\n  命中() {\n    // 神门\n    if (\n      this.模拟循环.校验奇穴是否存在?.('神门') &&\n      this.模拟循环.技能类实例集合?.经脉循行.经脉循行状态校验()\n    ) {\n      this.模拟循环.添加buff?.({ 名称: '神门', 对象: '自身' })\n    }\n\n    this.触发伤害行为?.('破穴')\n\n    if (this.模拟循环.技能类实例集合?.经脉循行?.经脉循行状态校验()) {\n      const 当前任脉值 = this.模拟循环.角色状态信息.能量信息.任脉\n      const 伤害等级 = Math.ceil(Math.max(Math.min(当前任脉值 * 0.5, 50), 1)) + 1\n      this.触发伤害行为('破', 1, [], undefined, 伤害等级 || 1)\n\n      const 神封校验结果 = this.模拟循环.神封校验()\n      this.模拟循环.消耗当前一半能量()\n      if (神封校验结果) {\n        this.模拟循环.神封触发()\n      }\n      this.模拟循环.技能类实例集合?.经脉循行.经脉循行卸除校验()\n    } else {\n      if (this.模拟循环.校验奇穴是否存在?.('然谷')) {\n        this?.模拟循环?.回复能量(30, '任脉')\n        this?.模拟循环?.回复能量(30, '督脉')\n      } else {\n        this?.模拟循环?.回复能量(15, '任脉')\n        this?.模拟循环?.回复能量(15, '督脉')\n      }\n    }\n\n    this.模拟循环.技能类实例集合?.一阳来复?.减少调息时间?.(每秒郭氏帧 * 8)\n\n    this.模拟循环.判断扬尘()\n\n    this.保存释放记录()\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表(['出岫']),\n    }\n  }\n}\n\nexport default 破穴\n\nexport const 破穴类型 = typeof 破穴\n","import 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 雾刃飞光 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '雾刃飞光')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n\n    //\n    雾刃飞光.技能数据 = 模拟循环?.技能基础数据?.find((item) => item.技能名称 === '雾刃飞光')\n\n    this.初始化技能运行数据()\n  }\n\n  释放() {\n    return\n  }\n}\n\nexport default 雾刃飞光\n\nexport const 雾刃飞光类型 = typeof 雾刃飞光\n","import { 按数字生成数组 } from '@/工具函数/help'\nimport 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\nimport { 根据加速等级获取虚拟加速值 } from '../../utils'\nimport { 获取实际帧数 } from '@/工具函数/data'\nimport { 每秒郭氏帧 } from '@/数据/常量'\n\nclass 骤风令 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '骤风令')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n\n    骤风令.技能数据 = 模拟循环?.技能基础数据?.find((item) => item.技能名称 === '骤风令')\n    const 循环加速值 = 根据加速等级获取虚拟加速值(this.模拟循环.加速等级)\n    if (骤风令?.技能数据?.技能CD) {\n      const 原始CD = 每秒郭氏帧 * 25\n      const 加速后帧数 = 获取实际帧数(原始CD, 循环加速值)\n      骤风令.技能数据.技能CD = 加速后帧数\n    }\n    this.初始化技能运行数据()\n  }\n\n  命中() {\n    this.创建NPC骤风持续造成伤害()\n\n    if (this.模拟循环.校验奇穴是否存在('茫缈')) {\n      this.模拟循环.添加buff({ 名称: '茫缈', 对象: '自身' })\n    }\n  }\n\n  减少调息时间(减少帧数) {\n    const 待充能时间点 = this.技能运行数据.待充能时间点\n    if (待充能时间点?.length) {\n      const 新待充能时间点 = 待充能时间点\n        .map((item) => {\n          return item - 减少帧数\n        })\n        ?.filter((item) => {\n          return item > this.模拟循环.当前时间\n        })\n      this.更新技能运行数据({ 待充能时间点: 新待充能时间点 })\n    }\n  }\n\n  创建NPC骤风持续造成伤害() {\n    const 当前时间 = this.模拟循环.当前时间 || 0\n\n    // 正常创建的风是8跳\n    const 作用次数 = 10\n    // 每12帧数一次,共8秒\n    const 待生效事件 = 按数字生成数组(作用次数).map((次数) => {\n      return {\n        事件名称: `骤风造成伤害`,\n        事件时间: 当前时间 + 12 * 次数,\n      }\n    })\n\n    this.模拟循环.添加待生效事件队列(待生效事件)\n    this.模拟循环.添加buff({ 名称: '骤风', 对象: '目标' })\n  }\n\n  骤风造成伤害() {\n    this.触发伤害行为('骤风')\n  }\n}\n\nexport default 骤风令\n\nexport const 骤风令类型 = typeof 骤风令\n","import { 获取实际帧数 } from '@/工具函数/data'\nimport 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\nimport { 根据加速等级获取虚拟加速值 } from '../../utils'\nimport { 每秒郭氏帧 } from '@/数据/常量'\n\nclass 劈风令 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '劈风令')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n\n    劈风令.技能数据 = 模拟循环?.技能基础数据?.find((item) => item.技能名称 === '劈风令')\n    const 循环加速值 = 根据加速等级获取虚拟加速值(this.模拟循环.加速等级)\n    if (劈风令?.技能数据?.技能CD) {\n      const 原始CD = 每秒郭氏帧 * 8\n      const 加速后帧数 = 获取实际帧数(原始CD, 循环加速值)\n      劈风令.技能数据.技能CD = 加速后帧数\n    }\n\n    this.初始化技能运行数据()\n  }\n\n  检查GCD(索引) {\n    // 骤风劈的劈风令卡GCD释放\n    const 前一个技能 = this.模拟循环?.测试循环?.[索引 - 1]\n    const 后一个技能 = this.模拟循环?.测试循环?.[索引 + 1]\n    let GCD = this.模拟循环?.GCD组?.['公共'] || 0\n\n    // 如果存在后面的技能，判断后面的技能当前的GCD为多少，推进到后一个技能。这样可以让灭卡在后面的技能释放前释放\n    if (后一个技能 && 前一个技能 === '风流云散' && this.模拟循环.校验奇穴是否存在('茫缈')) {\n      const 当前技能 = this?.模拟循环?.技能基础数据?.find((item) => item?.技能名称 === 后一个技能)\n      if (当前技能 && 当前技能?.技能GCD组) {\n        const 技能实例 = this?.模拟循环?.技能类实例集合?.[当前技能?.技能名称]\n        GCD = this.模拟循环?.检查GCD?.(当前技能, 技能实例, 索引 + 1) || 0\n      }\n    }\n    return GCD\n  }\n\n  释放() {\n    return\n  }\n\n  重置调息时间() {\n    this.更新技能运行数据({ 待充能时间点: [] })\n  }\n\n  命中() {\n    if (\n      this.模拟循环.当前目标buff列表?.['骤风']?.当前层数 ||\n      this.模拟循环.当前目标buff列表?.['横驱风靡']?.当前层数\n    ) {\n      this.触发伤害行为('劈风刃')\n      this.触发伤害行为('劈风令·骤')\n    } else {\n      this.触发伤害行为('劈风刃')\n    }\n\n    if (this.模拟循环.校验奇穴是否存在('纷飙')) {\n      this.模拟循环.技能类实例集合?.抟风令?.纷飙触发减少CD?.()\n      this.模拟循环.技能类实例集合?.抟风令断?.纷飙触发减少CD?.()\n    }\n\n    if (this.模拟循环.校验奇穴是否存在('摧烟')) {\n      this.触发伤害行为('催烟')\n    }\n\n    this.触发伤害行为('破', 1, [], undefined, 25)\n\n    this.保存释放记录()\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表(['出岫']),\n    }\n  }\n}\n\nexport default 劈风令\n\nexport const 劈风令类型 = typeof 劈风令\n","import 循环模拟技能基础数据 from '../../../constant/skill'\nimport { ERROR_ACTION } from '../../utils'\n\nimport 技能统一类 from '../../通用类/技能统一类'\n\nclass 骤风劈风 extends 技能统一类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '骤风劈风')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  检查GCD(索引) {\n    // 骤风劈的骤风劈风卡GCD释放\n    const 前一个技能 = this.模拟循环?.测试循环?.[索引 - 1]\n    const 后一个技能 = this.模拟循环?.测试循环?.[索引 + 1]\n    let GCD = this.模拟循环?.GCD组?.['公共'] || 0\n\n    // 如果存在后面的技能，判断后面的技能当前的GCD为多少，推进到后一个技能。这样可以让灭卡在后面的技能释放前释放\n    if (后一个技能 && 前一个技能 === '风流云散' && this.模拟循环.校验奇穴是否存在('茫缈')) {\n      const 当前技能 = this?.模拟循环?.技能基础数据?.find((item) => item?.技能名称 === 后一个技能)\n      if (当前技能 && 当前技能?.技能GCD组) {\n        const 技能实例 = this?.模拟循环?.技能类实例集合?.[当前技能?.技能名称]\n        GCD = this.模拟循环?.检查GCD?.(当前技能, 技能实例, 索引 + 1) || 0\n      }\n      return GCD || 0\n    } else {\n      return 0\n    }\n  }\n\n  释放() {\n    if (!this.模拟循环.当前自身buff列表?.['茫缈']?.当前层数) {\n      return {\n        可以释放: false,\n        异常信息: ERROR_ACTION.BUFF错误,\n      }\n    } else {\n      return { 可以释放: true }\n    }\n  }\n\n  命中() {\n    if (\n      this.模拟循环.当前目标buff列表?.['骤风']?.当前层数 ||\n      this.模拟循环.当前目标buff列表?.['横驱风靡']?.当前层数\n    ) {\n      this.触发伤害行为('劈风刃')\n      this.触发伤害行为('劈风令·骤')\n    } else {\n      this.触发伤害行为('劈风刃')\n    }\n\n    if (this.模拟循环.校验奇穴是否存在('纷飙')) {\n      this.模拟循环.技能类实例集合?.抟风令?.纷飙触发减少CD?.()\n      this.模拟循环.技能类实例集合?.抟风令断?.纷飙触发减少CD?.()\n    }\n\n    if (this.模拟循环.校验奇穴是否存在('摧烟')) {\n      this.触发伤害行为('催烟')\n    }\n\n    this.触发伤害行为('破', 1, [], undefined, 25)\n\n    this.模拟循环.卸除buff({ 名称: '茫缈', 对象: '自身' })\n\n    this.保存释放记录()\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表(['出岫']),\n    }\n  }\n}\n\nexport default 骤风劈风\n\nexport const 骤风劈风类型 = typeof 骤风劈风\n","import { 获取实际帧数 } from '@/工具函数/data'\nimport 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\nimport { 根据加速等级获取虚拟加速值 } from '../../utils'\nimport { 待生效事件 } from '../../type'\nimport { 每秒郭氏帧 } from '@/数据/常量'\nimport { 按数字生成数组 } from '@/工具函数/help'\n\nclass 抟风令 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '抟风令')\n  static 总作用帧 = 32\n\n  constructor(模拟循环) {\n    super(模拟循环)\n\n    //\n    抟风令.技能数据 = 模拟循环?.技能基础数据?.find((item) => item.技能名称 === '抟风令')\n    const 循环加速值 = 根据加速等级获取虚拟加速值(this.模拟循环.加速等级)\n    抟风令.总作用帧 = 获取实际帧数(32, 循环加速值)\n\n    if (抟风令?.技能数据?.技能CD) {\n      const 原始CD = 每秒郭氏帧 * 55\n      let 加速后帧数 = 获取实际帧数(原始CD, 循环加速值)\n      if (this.模拟循环.校验奇穴是否存在('清激')) {\n        加速后帧数 = 加速后帧数 - 每秒郭氏帧 * 10\n      }\n      抟风令.技能数据.技能CD = 加速后帧数\n    }\n\n    this.初始化技能运行数据()\n  }\n\n  获取读条时间() {\n    const 读条持续时间 = 抟风令.总作用帧\n    return 读条持续时间\n  }\n\n  纷飙触发减少CD() {\n    const 待充能时间点 = this.技能运行数据.待充能时间点\n    const 计划下次充能时间点 = 待充能时间点?.[0]\n    // 没有层数才需要处理\n    if (计划下次充能时间点 > this.模拟循环.当前时间) {\n      const 剩余总时间 = 计划下次充能时间点 - (this.模拟循环.当前时间 || 0)\n      if (剩余总时间 > 0) {\n        const 减少时间 = Math.floor(剩余总时间 * 0.05)\n        const 减少后充能节点 = Math.max(计划下次充能时间点 - 减少时间, 0)\n        if (减少后充能节点 <= (this.模拟循环.当前时间 || 0)) {\n          this.更新技能运行数据({ 待充能时间点: [] })\n        } else {\n          this.更新技能运行数据({ 待充能时间点: [减少后充能节点] })\n        }\n        this.模拟循环.添加战斗日志?.({\n          日志: `纷飙触发减少抟风令调息时间，释放CD时间变为${减少后充能节点}`,\n          日志类型: '技能释放结果',\n        })\n      }\n    }\n  }\n\n  读条(读条开始时间) {\n    this.触发伤害行为('抟风令')\n    if (this.模拟循环.校验奇穴是否存在('摧烟')) {\n      this.模拟循环.技能类实例集合?.劈风令?.重置调息时间?.()\n    }\n    // 在刚开始释放就会处理骤风令\n    this.处理骤风令(读条开始时间)\n    // 开始读条\n    this.读条抟风令(读条开始时间)\n  }\n\n  处理骤风令(开始时间) {\n    this.模拟循环.待生效事件结算(开始时间)\n\n    const 骤风数据 = this?.模拟循环?.当前目标buff列表?.['骤风']\n    if (骤风数据?.当前层数) {\n      const 剩余时间 = (骤风数据?.刷新时间 || 0) + 8 * 每秒郭氏帧 - 开始时间\n      // 计算骤风令当前剩余buff时间\n      const 实际总Buff帧数 = 剩余时间 + 8 * 每秒郭氏帧\n      // 单次作用间隔为12，不吃加速\n      const 实际生效跳数 = Math.min(Math.floor(实际总Buff帧数 / 12), 11)\n      this.续费NPC骤风持续造成伤害(实际生效跳数, 开始时间)\n      this.模拟循环.添加战斗日志({\n        日志: `抟风令续费骤风令${实际生效跳数}次`,\n        日志类型: '技能释放结果',\n      })\n    }\n  }\n\n  续费NPC骤风持续造成伤害(续费次数, 开始时间) {\n    // 每12帧数一次,共8秒\n    const 待生效事件 = 按数字生成数组(续费次数).map((次数) => {\n      return {\n        事件名称: `横驱风靡造成伤害`,\n        事件时间: 开始时间 + 12 * 次数,\n      }\n    })\n\n    this.模拟循环.添加待生效事件队列(待生效事件)\n    this.模拟循环.删除待生效事件队列('骤风造成伤害')\n    this.模拟循环.卸除buff({ 名称: '骤风', 对象: '目标' })\n    this.模拟循环.添加buff({ 名称: '横驱风靡', 对象: '目标' })\n  }\n\n  读条抟风令(读条开始时间) {\n    const 待生效事件队列: 待生效事件[] = [\n      {\n        事件名称: '技能读条',\n        事件时间: 读条开始时间 + 抟风令.总作用帧,\n        事件备注: {\n          技能名称: '抟风令',\n        },\n      },\n    ]\n    this.模拟循环.添加待生效事件队列(待生效事件队列)\n  }\n\n  // 顺序不可随意更改\n  读条伤害() {\n    this.触发伤害行为('抟风令·爆')\n  }\n\n  横驱风靡造成伤害() {\n    this.触发伤害行为('横驱风靡')\n  }\n}\n\nexport default 抟风令\n\nexport const 抟风令类型 = typeof 抟风令\n","import 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\nimport { 待生效事件 } from '../../type'\nimport { 每秒郭氏帧 } from '@/数据/常量'\nimport { 按数字生成数组 } from '@/工具函数/help'\nimport { 根据加速等级获取虚拟加速值 } from '../../utils'\nimport { 获取实际帧数 } from '@/工具函数/data'\n\nclass 抟风令断 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '抟风令')\n  // static 总作用帧 = 32\n  // 因为可以通过提前中断来操作，实际其他效果完全生效，这里模拟暂时写死1.5秒\n  static 总作用帧 = 24\n\n  constructor(模拟循环) {\n    super(模拟循环)\n    抟风令断.技能数据 = 模拟循环?.技能基础数据?.find((item) => item.技能名称 === '抟风令')\n    const 循环加速值 = 根据加速等级获取虚拟加速值(this.模拟循环.加速等级)\n\n    if (抟风令断?.技能数据?.技能CD) {\n      const 原始CD = 每秒郭氏帧 * 55\n      let 加速后帧数 = 获取实际帧数(原始CD, 循环加速值)\n      if (this.模拟循环.校验奇穴是否存在('清激')) {\n        加速后帧数 = 加速后帧数 - 每秒郭氏帧 * 10\n      }\n      抟风令断.技能数据.技能CD = 加速后帧数\n    }\n\n    this.初始化技能运行数据()\n  }\n\n  获取读条时间() {\n    const 读条持续时间 = 抟风令断.总作用帧\n    return 读条持续时间\n  }\n\n  纷飙触发减少CD() {\n    const 待充能时间点 = this.技能运行数据.待充能时间点\n    const 计划下次充能时间点 = 待充能时间点?.[0]\n    // 没有层数才需要处理\n    if (计划下次充能时间点 > this.模拟循环.当前时间) {\n      const 剩余总时间 = 计划下次充能时间点 - (this.模拟循环.当前时间 || 0)\n      if (剩余总时间 > 0) {\n        const 减少时间 = Math.floor(剩余总时间 * 0.05)\n        const 减少后充能节点 = Math.max(计划下次充能时间点 - 减少时间, 0)\n        if (减少后充能节点 <= (this.模拟循环.当前时间 || 0)) {\n          this.更新技能运行数据({ 待充能时间点: [] })\n        } else {\n          this.更新技能运行数据({ 待充能时间点: [减少后充能节点] })\n        }\n        this.模拟循环.添加战斗日志?.({\n          日志: `纷飙触发减少抟风令调息时间，释放CD时间变为${减少后充能节点}`,\n          日志类型: '技能释放结果',\n        })\n      }\n    }\n  }\n\n  读条(读条开始时间) {\n    this.触发伤害行为('抟风令')\n    if (this.模拟循环.校验奇穴是否存在('摧烟')) {\n      this.模拟循环.技能类实例集合?.劈风令?.重置调息时间?.()\n    }\n    // 在刚开始释放就会处理骤风令\n    this.处理骤风令(读条开始时间)\n    // 开始读条\n    this.读条抟风令(读条开始时间)\n  }\n\n  处理骤风令(开始时间) {\n    this.模拟循环.待生效事件结算(开始时间)\n\n    const 骤风数据 = this?.模拟循环?.当前目标buff列表?.['骤风']\n    if (骤风数据?.当前层数) {\n      const 剩余时间 = (骤风数据?.刷新时间 || 0) + 8 * 每秒郭氏帧 - 开始时间\n      // 计算骤风令当前剩余buff时间\n      const 实际总Buff帧数 = 剩余时间 + 8 * 每秒郭氏帧\n      // 单次作用间隔为12，不吃加速\n      const 实际生效跳数 = Math.min(Math.floor(实际总Buff帧数 / 12), 11)\n      this.续费NPC骤风持续造成伤害(实际生效跳数, 开始时间)\n      this.模拟循环.添加战斗日志({\n        日志: `抟风令断续费骤风令${实际生效跳数}次`,\n        日志类型: '技能释放结果',\n      })\n    }\n  }\n\n  续费NPC骤风持续造成伤害(续费次数, 开始时间) {\n    // 每12帧数一次,共8秒\n    const 待生效事件 = 按数字生成数组(续费次数).map((次数) => {\n      return {\n        事件名称: `横驱风靡造成伤害`,\n        事件时间: 开始时间 + 12 * 次数,\n      }\n    })\n\n    this.模拟循环.添加待生效事件队列(待生效事件)\n    this.模拟循环.删除待生效事件队列('骤风造成伤害')\n    this.模拟循环.卸除buff({ 名称: '骤风', 对象: '目标' })\n    this.模拟循环.添加buff({ 名称: '横驱风靡', 对象: '目标' })\n  }\n\n  读条抟风令(读条开始时间) {\n    const 待生效事件队列: 待生效事件[] = [\n      {\n        事件名称: '技能读条',\n        事件时间: 读条开始时间 + 抟风令断.总作用帧,\n        事件备注: {\n          技能名称: '抟风令',\n        },\n      },\n    ]\n    this.模拟循环.添加待生效事件队列(待生效事件队列)\n  }\n\n  // 顺序不可随意更改\n  读条伤害() {\n    this.触发伤害行为('抟风令·爆')\n  }\n\n  横驱风靡造成伤害() {\n    this.触发伤害行为('横驱风靡')\n  }\n}\n\nexport default 抟风令断\n\nexport const 抟风令类型 = typeof 抟风令断\n","import 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 雪重花满 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '雪重花满')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n\n    //\n    雪重花满.技能数据 = 模拟循环?.技能基础数据?.find((item) => item.技能名称 === '雪重花满')\n\n    this.初始化技能运行数据()\n  }\n\n  释放() {\n    return\n  }\n}\n\nexport default 雪重花满\n\nexport const 雪重花满类型 = typeof 雪重花满\n","import 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 朔风扬尘一 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '朔风扬尘一')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n\n    //\n    朔风扬尘一.技能数据 = 模拟循环?.技能基础数据?.find((item) => item.技能名称 === '朔风扬尘一')\n\n    this.初始化技能运行数据()\n  }\n\n  释放() {\n    return\n  }\n\n  命中() {\n    this.模拟循环?.添加buff({ 名称: '朔风扬尘', 对象: '自身', 新增层数: 7 })\n  }\n}\n\nexport default 朔风扬尘一\n\nexport const 朔风扬尘一段类型 = typeof 朔风扬尘一\n","import 循环模拟技能基础数据 from '../../../constant/skill'\nimport { ERROR_ACTION } from '../../utils'\nimport 技能统一类 from '../../通用类/技能统一类'\n\nclass 朔风扬尘二 extends 技能统一类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '朔风扬尘二')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  释放() {\n    if (!this.模拟循环.当前自身buff列表?.['朔风扬尘']?.当前层数) {\n      return {\n        可以释放: false,\n        异常信息: ERROR_ACTION.BUFF错误,\n      }\n    } else {\n      return { 可以释放: true }\n    }\n  }\n\n  命中() {\n    // 只卸除层数不刷新时间\n    if (this.模拟循环.当前自身buff列表?.['朔风扬尘']?.当前层数) {\n      const 当前层数 = this.模拟循环.当前自身buff列表?.['朔风扬尘']?.当前层数 || 1\n      this.模拟循环.当前自身buff列表['朔风扬尘'] = {\n        ...this.模拟循环.当前自身buff列表?.['朔风扬尘'],\n        当前层数: 当前层数 - 1,\n      }\n    }\n\n    this.模拟循环?.添加buff({ 名称: '扬尘', 对象: '自身', 新增层数: 1 })\n    this.模拟循环?.添加buff({ 名称: '扬尘增伤', 对象: '自身', 新增层数: 1 })\n    this.模拟循环.回复能量(5, '任脉')\n    this.模拟循环.回复能量(5, '督脉')\n\n    const 当前扬尘层数 = this?.模拟循环?.当前自身buff列表['扬尘增伤']?.当前层数 || 0\n\n    const 当前扬尘伤害等级 = 1 + 当前扬尘层数\n\n    this.触发伤害行为('朔风扬尘', 1, [], undefined, 当前扬尘伤害等级 || 1)\n\n    if (当前扬尘层数 === 7) {\n      this.模拟循环?.卸除buff({ 名称: '扬尘增伤', 对象: '自身', 卸除层数: 7 })\n    }\n  }\n}\n\nexport default 朔风扬尘二\n\nexport const 朔风扬尘二类型 = typeof 朔风扬尘二\n","import 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 风流云散 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '风流云散')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n\n    //\n    风流云散.技能数据 = 模拟循环?.技能基础数据?.find((item) => item.技能名称 === '风流云散')\n\n    this.初始化技能运行数据()\n  }\n\n  释放() {\n    return\n  }\n\n  // 这里单独写风流云散的卡GCD释放逻辑\n  检查GCD(索引) {\n    const 后一个技能 = this.模拟循环?.测试循环?.[索引 + 1]\n    let GCD = this.模拟循环?.GCD组?.['风流云散'] || 0\n\n    // 如果存在后面的技能，判断后面的技能当前的GCD为多少，推进到后一个技能。这样可以让灭卡在后面的技能释放前释放\n    if (后一个技能) {\n      const 当前技能 = this?.模拟循环?.技能基础数据?.find((item) => item?.技能名称 === 后一个技能)\n      if (当前技能 && 当前技能?.技能GCD组) {\n        const 技能实例 = this?.模拟循环?.技能类实例集合?.[当前技能?.技能名称]\n        GCD = this.模拟循环?.检查GCD?.(当前技能, 技能实例, 索引 + 1) || 0\n      }\n    }\n    return GCD\n  }\n\n  命中() {\n    if (this.模拟循环.校验奇穴是否存在?.('出岫')) {\n      this?.模拟循环?.添加buff({ 名称: '出岫', 对象: '自身' })\n    }\n\n    this.保存释放记录()\n  }\n\n  保存释放记录() {\n    const 造成buff数据 = this.获取施加重要buff信息('出岫')\n    this.本次释放记录 = 造成buff数据 ? { 造成buff数据 } : {}\n  }\n}\n\nexport default 风流云散\n\nexport const 风流云散类型 = typeof 风流云散\n","import 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 一阳来复 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '一阳来复')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n\n    一阳来复.技能数据 = 模拟循环?.技能基础数据?.find((item) => item.技能名称 === '一阳来复')\n\n    this.初始化技能运行数据()\n  }\n\n  释放() {\n    return\n  }\n\n  减少调息时间(减少帧数) {\n    const 待充能时间点 = this.技能运行数据.待充能时间点\n    if (待充能时间点?.length) {\n      const 新待充能时间点 = 待充能时间点\n        .map((item) => {\n          return item - 减少帧数\n        })\n        ?.filter((item) => {\n          return item > this.模拟循环.当前时间\n        })\n      this.更新技能运行数据({ 待充能时间点: 新待充能时间点 })\n    }\n  }\n\n  命中() {\n    this.模拟循环.回复能量(50, '任脉')\n    this.模拟循环.回复能量(50, '督脉')\n  }\n}\n\nexport default 一阳来复\n\nexport const 一阳来复类型 = typeof 一阳来复\n","import { 按数字生成数组 } from '@/工具函数/help'\nimport 技能统一类 from '../../通用类/技能统一类'\nimport { 每秒郭氏帧 } from '@/数据/常量'\n\nclass 经脉循行 extends 技能统一类 {\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  释放() {\n    return\n  }\n\n  获得经脉循行() {\n    const 当前身上有经脉循行 = this.经脉循行状态校验()\n    this.模拟循环.添加buff?.({ 名称: '经脉循行', 对象: '自身' })\n    if (!当前身上有经脉循行) {\n      this.添加经脉循行每秒回复事件()\n    }\n  }\n\n  添加经脉循行每秒回复事件(初始时间 = 8) {\n    let 当前时间 = this.模拟循环.当前时间 || 0\n    // 生成100个事件，理论上100秒内必定续费，简单处理\n\n    // 如果是第一次添加，为了错位，提前设置8帧\n    if (当前时间 === 0) {\n      当前时间 = -(每秒郭氏帧 - 初始时间)\n    }\n    const 待生效事件 = 按数字生成数组(1000).map((次数) => {\n      return {\n        事件名称: `经脉循行_秒回`,\n        事件时间: 当前时间 + 每秒郭氏帧 * 次数,\n      }\n    })\n    this.模拟循环.添加待生效事件队列(待生效事件)\n  }\n\n  经脉循行每秒回复() {\n    this.模拟循环.回复能量(3, '任脉')\n    this.模拟循环.回复能量(3, '督脉')\n    if (this.模拟循环.校验奇穴是否存在('相息')) {\n      this.模拟循环.回复能量(2, '任脉')\n      this.模拟循环.回复能量(2, '督脉')\n    }\n    if (this?.模拟循环?.当前自身buff列表?.['扬尘']?.当前层数) {\n      const 层数 = this?.模拟循环?.当前自身buff列表?.['扬尘']?.当前层数 || 1\n      this.模拟循环.回复能量(层数, '任脉')\n      this.模拟循环.回复能量(层数, '督脉')\n    }\n  }\n\n  初始化经脉循行(初始时间) {\n    this.添加经脉循行每秒回复事件(初始时间)\n  }\n\n  经脉循行状态校验() {\n    return !!this?.模拟循环.当前自身buff列表?.['经脉循行']?.当前层数\n  }\n\n  经脉循行添加校验() {\n    if (\n      this.模拟循环.角色状态信息.能量信息.任脉 >= 50 &&\n      this.模拟循环.角色状态信息.能量信息.督脉 >= 50\n    ) {\n      this.获得经脉循行()\n    }\n  }\n\n  经脉循行卸除校验() {\n    if (\n      this.模拟循环.角色状态信息.能量信息.任脉 < 50 ||\n      this.模拟循环.角色状态信息.能量信息.督脉 < 50\n    ) {\n      this.模拟循环.卸除buff?.({ 名称: '经脉循行', 对象: '自身', 卸除层数: 1 })\n      this.模拟循环.删除待生效事件队列(`经脉循行_秒回`)\n    }\n  }\n}\n\nexport default 经脉循行\n\nexport const 经脉循行类型 = typeof 经脉循行\n","// import 循环主类 from '../main'\nimport 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 触发橙武 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '触发橙武')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n\n    this.初始化技能运行数据()\n  }\n\n  命中() {\n    if (this.模拟循环.大橙武模拟) {\n      this.模拟循环.添加buff?.({ 名称: '橙武', 对象: '自身', 新增层数: 1 })\n\n      // 重置引窍时间\n      this.模拟循环.技能类实例集合?.引窍?.重置调息时间?.()\n\n      // 假设触发CW回满能量\n      this?.模拟循环?.回复能量(100, '任脉')\n      this?.模拟循环?.回复能量(100, '督脉')\n    }\n  }\n}\n\nexport default 触发橙武\n\nexport const 触发橙武类型 = typeof 触发橙武\n","import 循环模拟技能基础数据 from '../../../constant/skill'\nimport 技能统一类 from '../../通用类/技能统一类'\n\nclass 换行 extends 技能统一类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '换行')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n}\n\nexport default 换行\n\nexport const 换行类型 = typeof 换行\n","/**\n * 定义模拟循环类\n */\n\n// import { 每秒郭氏帧 } from '../constant'\nimport {\n  // ERROR_ACTION,\n  根据奇穴修改buff数据,\n  根据奇穴修改技能数据,\n  转化buff和增益名称,\n} from './utils'\n\nimport {\n  技能GCD组,\n  技能类实例集合,\n  检查运行数据实例类型,\n  Buff枚举,\n  循环日志数据类型,\n  循环基础技能数据类型,\n  角色状态信息类型,\n  技能释放记录数据,\n  待生效事件,\n  技能运行数据类型,\n} from './type'\n\nimport 断脉 from './技能类/断脉'\nimport 截阳 from './技能类/截阳'\nimport 引窍 from './技能类/引窍'\nimport 破穴 from './技能类/破穴'\n// import 雾海萦空 from './技能类/雾海萦空'\nimport 雾刃飞光 from './技能类/雾刃飞光'\nimport 骤风令 from './技能类/骤风令'\nimport 劈风令 from './技能类/劈风令'\nimport 骤风劈风 from './技能类/骤风劈风'\nimport 抟风令 from './技能类/抟风令'\nimport 抟风令断 from './技能类/抟风令断'\nimport 雪重花满 from './技能类/雪重花满'\nimport 朔风扬尘一 from './技能类/朔风扬尘一'\nimport 朔风扬尘二 from './技能类/朔风扬尘二'\nimport 风流云散 from './技能类/风流云散'\nimport 一阳来复 from './技能类/一阳来复'\nimport 经脉循行 from './技能类/经脉循行'\n// import { 箭形态枚举 } from '../constant/enum'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport { 获取加速等级 } from '@/工具函数/data'\nimport 触发橙武 from './技能类/触发橙武'\nimport 换行 from './技能类/换行'\n\nconst { 技能系数 } = 获取当前数据()\n\nexport interface SimulatorCycleProps {\n  测试循环: string[]\n  加速值: number\n  网络延迟: number\n  奇穴: string[]\n  大橙武模拟: boolean\n  角色状态信息?: 角色状态信息类型\n  起手回能帧?: number\n  起手能量: { 任脉: number; 督脉: number }\n}\n\nclass 循环主类 {\n  循环执行结果: '成功' | '异常' = '成功'\n  循环异常信息 = { 异常索引: 0, 异常信息: '' }\n  测试循环: string[] = []\n  奇穴: string[] = []\n  加速等级 = 0\n  网络延迟 = 0\n  // 网络按键延迟 = 0\n  角色状态信息: 角色状态信息类型 = {\n    能量信息: { 任脉: 100, 督脉: 100 },\n  }\n  当前自身buff列表: Buff枚举 = {}\n  当前目标buff列表: Buff枚举 = {}\n  当前时间 = 0\n  开始释放上一个技能的时间 = 0\n  战斗日志: 循环日志数据类型[] = []\n  技能释放记录: 技能释放记录数据[] = []\n  Buff和Dot数据: Buff枚举 = {}\n  技能基础数据: 循环基础技能数据类型[] = []\n  GCD组: 技能GCD组 = {\n    公共: 0,\n    自身: 0,\n  }\n  技能类实例集合: 技能类实例集合 = {}\n  风矢上次造成伤害时间: number | undefined = undefined\n  大橙武模拟 = false\n  待生效事件队列: 待生效事件[] = []\n  起手回能帧 = 8\n\n  // 初始化创建\n  constructor(props: SimulatorCycleProps) {\n    // 模拟开始后不会变动的数据\n    this.测试循环 = props.测试循环\n    this.大橙武模拟 = props.大橙武模拟\n    this.奇穴 = props.奇穴\n    this.加速等级 = 获取加速等级(props.加速值)\n    this.网络延迟 = props.网络延迟\n    // 根据奇穴和装备情况修改buff的数据\n    this.Buff和Dot数据 = 根据奇穴修改buff数据(this.奇穴)\n    // 根据奇穴和装备情况修改技能的数据\n    this.技能基础数据 = 根据奇穴修改技能数据(this.奇穴)\n\n    this.当前自身buff列表 = {\n      经脉循行: {\n        ...this.Buff和Dot数据?.['经脉循行'],\n        当前层数: 1,\n        刷新时间: 99999,\n      },\n    }\n    this.当前目标buff列表 = {}\n    this.角色状态信息 = {\n      能量信息: { 任脉: props?.起手能量?.任脉, 督脉: props?.起手能量?.督脉 },\n    }\n    this.起手回能帧 = props.起手回能帧 || 8\n    this.待生效事件队列 = []\n    // 模拟初始化\n    this.初始化技能实例类()\n    this.重置循环执行结果()\n  }\n\n  // ----------------- 通用函数 start----------------- //\n  重置循环执行结果() {\n    this.循环执行结果 = '成功'\n    this.循环异常信息 = { 异常索引: 0, 异常信息: '' }\n  }\n\n  初始化技能实例类() {\n    this.技能类实例集合 = {\n      断脉: new 断脉(this),\n      截阳: new 截阳(this),\n      引窍: new 引窍(this),\n      破穴: new 破穴(this),\n      // 雾海萦空: new 雾海萦空(this),\n      雾刃飞光: new 雾刃飞光(this),\n      骤风令: new 骤风令(this),\n      劈风令: new 劈风令(this),\n      骤风劈风: new 骤风劈风(this),\n      抟风令: new 抟风令(this),\n      抟风令断: new 抟风令断(this),\n      雪重花满: new 雪重花满(this),\n      风流云散: new 风流云散(this),\n      一阳来复: new 一阳来复(this),\n      朔风扬尘一: new 朔风扬尘一(this),\n      朔风扬尘二: new 朔风扬尘二(this),\n      换行: new 换行(this),\n      经脉循行: new 经脉循行(this),\n      触发橙武: new 触发橙武(this),\n    }\n  }\n\n  添加buff({\n    名称,\n    对象 = '目标',\n    事件时间 = this.当前时间,\n    新增层数 = 1,\n    覆盖层数 = 0,\n    只添加日志 = false,\n  }) {\n    const 当前层数 =\n      对象 === '自身'\n        ? this.当前自身buff列表[名称]?.当前层数\n        : this.当前目标buff列表[名称]?.当前层数\n\n    const 新buff对象 = {\n      ...this.Buff和Dot数据[名称],\n      当前层数: 覆盖层数\n        ? 覆盖层数\n        : Math.min((当前层数 || 0) + 新增层数, this.Buff和Dot数据[名称].最大层数 || 1),\n      刷新时间: 事件时间,\n    }\n    if ((新buff对象.当前层数 !== 当前层数 && 新buff对象.当前层数 !== 1) || 名称 === '标鹄') {\n      this.添加战斗日志({\n        日志: `${名称}层数变为【${新buff对象.当前层数}】`,\n        日志类型: 对象 === '自身' ? '自身buff变动' : '目标buff变动',\n        日志时间: 事件时间,\n      })\n    } else {\n      this.添加战斗日志({\n        日志: `${对象}获得${名称}`,\n        日志类型: 对象 === '自身' ? '自身buff变动' : '目标buff变动',\n        日志时间: 事件时间,\n      })\n    }\n\n    if (!只添加日志) {\n      if (对象 === '自身') {\n        this.当前自身buff列表[名称] = { ...新buff对象 }\n      } else {\n        this.当前目标buff列表[名称] = { ...新buff对象 }\n      }\n    }\n  }\n\n  卸除buff({\n    名称,\n    buff刷新时间 = 0,\n    对象 = '目标',\n    事件时间 = this.当前时间,\n    卸除层数 = 1,\n    只添加日志 = false,\n  }) {\n    const 当前层数 =\n      (对象 === '自身'\n        ? this.当前自身buff列表[名称]?.当前层数\n        : this.当前目标buff列表[名称]?.当前层数) || 0\n\n    if ((当前层数 && 当前层数 >= 0) || 只添加日志) {\n      if (当前层数 - 卸除层数 > 0) {\n        this.添加战斗日志({\n          日志: `${名称}层数变为【${当前层数 - 卸除层数}】`,\n          日志类型: 对象 === '自身' ? '自身buff变动' : '目标buff变动',\n          日志时间: 事件时间,\n        })\n        if (!只添加日志) {\n          const 新buff对象 = {\n            ...this.Buff和Dot数据[名称],\n            当前层数: 当前层数 - 卸除层数,\n            刷新时间: buff刷新时间 || 事件时间,\n          }\n          if (对象 === '自身') {\n            this.当前自身buff列表[名称] = { ...新buff对象 }\n          } else {\n            this.当前目标buff列表[名称] = { ...新buff对象 }\n          }\n        }\n      } else {\n        this.添加战斗日志({\n          日志: `${对象}失去${名称}`,\n          日志类型: 对象 === '自身' ? '自身buff变动' : '目标buff变动',\n          日志时间: 事件时间,\n        })\n        if (!只添加日志) {\n          if (对象 === '自身') {\n            delete this.当前自身buff列表[名称]\n          } else {\n            delete this.当前目标buff列表[名称]\n          }\n        }\n      }\n    }\n  }\n\n  // 校验奇穴是否存在\n  校验奇穴是否存在(待判断奇穴) {\n    return this?.奇穴?.includes(待判断奇穴)\n  }\n\n  // 能量校验\n  能量校验() {\n    return { 可以释放: true }\n  }\n\n  // ----------------- 时间、GCD、CD相关算法 start----------------- //\n  /**\n   *\n   * @param 增加时间方法\n   * @description 每次增加时间方法都要同步推进GCD\n   */\n  增加时间(time) {\n    if (time > 0) {\n      this.跳过全部GCD时间(time)\n      // 增加时间\n      this.当前时间 = this.当前时间 + (time > 0 ? time : 0 || 0)\n      this.DOT结算与更新()\n      this.清空已经消失的buff()\n    }\n  }\n\n  跳过全部GCD时间(time) {\n    // 减少GCD剩余时间\n    const 新GCD组: 技能GCD组 = { 公共: 0, 自身: 0 }\n    Object.keys(this.GCD组).map((key) => {\n      新GCD组[key] = Math.max((this.GCD组[key] || 0) - time, 0)\n    })\n    this.GCD组 = { ...新GCD组 }\n  }\n\n  技能释放前检查GCD统一方法(当前技能: 循环基础技能数据类型) {\n    let 校验GCD组: string = 当前技能.技能GCD组 as string\n    if (当前技能.技能GCD组 === '自身') {\n      校验GCD组 = 当前技能?.技能名称\n    }\n    if (校验GCD组) {\n      // 大部分技能只检查自己的GCD\n      const GCD = this.GCD组[校验GCD组]\n      // 增加GCD\n      return GCD || 0\n    }\n    return 0\n  }\n\n  // 对所有有CD技能检查和充能\n  对所有有CD技能检查和充能() {\n    Object.keys(this.技能类实例集合).forEach((key) => {\n      const 实例 = this.技能类实例集合[key]\n      if (实例?.技能运行数据) {\n        const 运行数据: 技能运行数据类型 = 实例?.技能运行数据\n        const 待充能时间点 = 运行数据?.待充能时间点\n        if (待充能时间点?.length) {\n          const 新待充能时间点 = 待充能时间点?.filter((item) => item > this.当前时间)\n          实例?.更新技能运行数据({ 待充能时间点: 新待充能时间点 })\n        }\n      }\n    })\n  }\n\n  技能释放前检查运行数据(当前技能: 循环基础技能数据类型, 技能实例: 检查运行数据实例类型, GCD) {\n    let 等待CD时间 = 0\n    const 可以释放时间 = this.当前时间 + GCD || 0\n    if (技能实例?.技能运行数据) {\n      const 待充能时间点 = 技能实例?.技能运行数据?.待充能时间点\n      if (待充能时间点?.length >= (当前技能?.最大充能层数 || 1)) {\n        const 可释放时间 = 待充能时间点?.[0]\n        // 当前没有层数可用，需要等待充能\n        if (可释放时间 > 可以释放时间) {\n          等待CD时间 = 可释放时间 - 可以释放时间\n        }\n      }\n    }\n    return 等待CD时间\n  }\n\n  技能GCD和CD处理(\n    等待CD,\n    技能预估释放时间,\n    当前技能: 循环基础技能数据类型,\n    技能实例: 检查运行数据实例类型\n  ) {\n    // 判断在处理完特殊事件以后，剩余的待定时间还有多少\n    const 时间差 = 技能预估释放时间 - this.当前时间\n    if (时间差 && 时间差 > 0) {\n      this.增加时间(时间差)\n    }\n    if (等待CD) {\n      this.添加战斗日志({\n        日志: `【${当前技能?.技能名称}】等技能CD【${等待CD}】帧`,\n        日志类型: '等CD',\n        日志时间: 技能预估释放时间,\n      })\n      // const 当前层数 = 技能实例?.技能运行数据?.当前层数\n      // const 新层数 = Math.min(当前层数 + 1, 当前技能?.最大充能层数 || 1)\n      // 技能实例?.更新技能运行数据({ 当前层数: 新层数, 充能满第一次释放时间点: 技能预估释放时间 })\n    }\n    const 待充能时间点 = 技能实例?.技能运行数据?.待充能时间点\n    const 新待充能时间点 = 待充能时间点?.filter((item) => item > 技能预估释放时间)\n    技能实例?.更新技能运行数据?.({ 待充能时间点: 新待充能时间点 })\n  }\n\n  技能释放后更新运行数据(当前技能: 循环基础技能数据类型, 技能实例: 检查运行数据实例类型) {\n    if (技能实例?.技能运行数据) {\n      const 待充能时间点 = 技能实例?.技能运行数据?.待充能时间点 || []\n      // const 是否为充满后第一次释放 = !待充能时间点?.length\n      // const 当前时间 = this.当前时间 || 0\n\n      const 本次释放充能 =\n        (待充能时间点?.[待充能时间点.length - 1] || this.当前时间) + (当前技能?.技能CD || 0)\n      const 新待充能时间点 = [...待充能时间点, 本次释放充能]\n      技能实例?.更新技能运行数据({\n        待充能时间点: 新待充能时间点,\n      })\n    }\n  }\n\n  // ----------------- 时间、GCD、CD相关算法 end----------------- //\n\n  // 添加战斗日志\n  添加战斗日志(log: 循环日志数据类型) {\n    const { 日志时间 = this.当前时间, ...rest } = log\n    this.战斗日志 = [\n      ...(this.战斗日志 || []),\n      {\n        日志时间: 日志时间,\n        ...rest,\n      },\n    ]\n  }\n\n  // 造成伤害\n  技能造成伤害(\n    来源,\n    伤害次数 = 1,\n    额外增益列表: string[] = [],\n    造成时间 = this.当前时间,\n    隐藏日志 = false,\n    技能等级 = 1\n  ) {\n    const 当前技能数据 = 技能系数?.find((item) => item.技能名称 === 来源)\n    const 技能增益列表 = 当前技能数据?.技能增益列表 || []\n    const 有关的buff列表 =\n      技能增益列表\n        ?.filter((item) => {\n          const 当前增益数据 = 转化buff和增益名称(item.增益名称, this.当前自身buff列表)\n          if (当前增益数据) {\n            if (造成时间) {\n              const 增益消失时间 = (当前增益数据?.刷新时间 || 0) + (当前增益数据?.最大持续时间 || 0)\n              return 造成时间 <= 增益消失时间 && !!当前增益数据\n            } else {\n              return !!当前增益数据?.当前层数\n            }\n          } else {\n            return false\n          }\n        })\n        ?.map((item) => item.增益名称) || []\n\n    const 总增益列表 = 有关的buff列表.concat(额外增益列表)\n\n    if (!隐藏日志) {\n      this.添加战斗日志({\n        日志: 来源,\n        日志类型: '造成伤害',\n        日志时间: 造成时间,\n        buff列表: 总增益列表 || [],\n        其他数据: {\n          伤害次数: 伤害次数,\n          技能等级: 技能等级,\n        },\n      })\n    }\n  }\n\n  检查GCD(当前技能: 循环基础技能数据类型, 技能实例, i) {\n    let GCD = 0\n    if (技能实例?.检查GCD) {\n      GCD = 技能实例?.检查GCD?.(i)\n    } else {\n      GCD = this.技能释放前检查GCD统一方法(当前技能)\n    }\n    return GCD\n  }\n\n  // 判断GCD，技能CD等\n  技能释放前(当前技能: 循环基础技能数据类型, 技能实例, i) {\n    let GCD = 0\n    let 等待CD = 0\n\n    // 判断是否为当前箭袋第一个技能\n    if (i >= 0) {\n      // 判断上一个技能对于本技能是否有GCD限制\n      if (当前技能?.技能GCD组) {\n        GCD = this.检查GCD(当前技能, 技能实例, i)\n      }\n      // 判断技能CD，如果存在CD。增加等待时间\n      if (当前技能?.技能CD) {\n        等待CD = this.技能释放前检查运行数据(当前技能, 技能实例, GCD)\n      }\n    }\n\n    const 是否是倒读条技能 = 当前技能?.是否为倒读条技能\n    const 是否为额外免费劈风令 =\n      当前技能?.技能名称 === '骤风劈风' && !!this.当前自身buff列表?.['茫缈']?.当前层数\n\n    const 延迟等待 =\n      this.当前时间 && 当前技能?.技能GCD组 !== '自身' && !是否是倒读条技能 && !是否为额外免费劈风令\n        ? this.网络延迟\n        : 0\n\n    const 技能计划释放时间 = this.当前时间 + GCD + 延迟等待\n    return {\n      技能计划释放时间: 技能计划释放时间,\n      技能预估释放时间: 技能计划释放时间 + 等待CD,\n      等待CD,\n    }\n  }\n\n  // 增加技能GCD\n  增加技能GCD(当前技能: 循环基础技能数据类型) {\n    // GCD处理\n    if (当前技能?.技能GCD组) {\n      let 待更新GCD组: string = 当前技能.技能GCD组 as string\n      if (当前技能.技能GCD组 === '自身') {\n        待更新GCD组 = 当前技能?.技能名称\n      }\n      if (待更新GCD组) {\n        this.GCD组[待更新GCD组] =\n          (this.GCD组[待更新GCD组] || 0) + 当前技能?.技能释放后添加GCD - this.加速等级\n      }\n    }\n  }\n\n  // 增加技能CD\n  增加技能CD(当前技能: 循环基础技能数据类型, 技能实例) {\n    // 技能CD处理\n    if (当前技能?.技能CD) {\n      if (技能实例?.技能释放后更新运行数据) {\n        技能实例.技能释放后更新运行数据?.()\n      } else {\n        this.技能释放后更新运行数据(当前技能, 技能实例)\n      }\n    }\n  }\n\n  技能成功开始释放(当前技能: 循环基础技能数据类型, 技能实例, 是否为读条技能) {\n    this.增加技能GCD(当前技能)\n    if (当前技能.技能名称 === '饮羽簇') {\n      // 读条引在读条结束以后进入CD\n      if (!this.当前自身buff列表?.['橙武']?.当前层数 && !是否为读条技能) {\n        this.增加技能CD(当前技能, 技能实例)\n      }\n    } else {\n      this.增加技能CD(当前技能, 技能实例)\n    }\n  }\n\n  // 判断添加GCD等\n  技能释放后(\n    当前技能: 循环基础技能数据类型,\n    计划释放时间: number,\n    开始读条时间,\n    开始释放时间,\n    是否为读条技能,\n    技能实例,\n    释放时标鹄层数: number\n  ) {\n    const 技能释放记录结果 = 技能实例?.获取技能释放记录结果?.() || {}\n\n    // 技能释放记录\n    this.技能释放记录.push({\n      技能名称: 当前技能?.技能名称,\n      计划释放时间,\n      实际释放时间: 开始释放时间,\n      开始读条时间: 开始读条时间,\n      是否为读条技能: 是否为读条技能,\n      技能释放记录结果: {\n        ...技能释放记录结果,\n        释放时标鹄层数,\n      },\n    })\n  }\n\n  清空buff调用函数(对象: '自身' | '目标') {\n    const buff列表 = 对象 === '自身' ? this.当前自身buff列表 : this.当前目标buff列表\n\n    // 更新目标buff\n    Object.keys(buff列表).forEach((key) => {\n      const buff对象 = buff列表[key]\n      const buff应该消失时间 = (buff对象?.刷新时间 || 0) + (buff对象?.最大持续时间 || 0)\n      const 消失层数 = buff对象?.自然消失失去层数 || buff对象?.最大层数\n      if (buff应该消失时间 < this.当前时间) {\n        this.卸除buff({ 名称: key, 对象, 事件时间: buff应该消失时间, 卸除层数: 消失层数 })\n      }\n    })\n  }\n\n  清空已经消失的buff() {\n    // 更新目标buff\n    this.清空buff调用函数('目标')\n    // 更新自身buff\n    this.清空buff调用函数('自身')\n  }\n\n  // 对当前的DOT进行已过期的结算和剩余时间更新\n  DOT结算与更新() {\n    // this.技能类实例集合?.贯穿?.结算贯穿伤害()\n  }\n\n  // 模拟轮次开始\n  本轮模拟开始前() {\n    // 增加网络延迟，0时不增加延迟\n    this.重置循环执行结果()\n    this.事件结算()\n  }\n\n  // 事件结算\n  事件结算() {\n    this.待生效事件结算()\n    // this.清空已经消失的buff()\n    this.DOT结算与更新()\n    // this.普通攻击结算()\n  }\n\n  // 模拟轮次释放结束\n  本轮模拟结束后() {\n    // 判断buff列表，清空已经消失的buff\n    this.清空已经消失的buff()\n    this.对所有有CD技能检查和充能()\n  }\n\n  // 技能释放校验\n  技能释放校验(技能实例, 当前技能) {\n    const 体态校验结果: any = this.能量校验()\n    const 释放判断结果 = 技能实例.释放\n      ? 技能实例.释放?.() || { 可以释放: true }\n      : { 可以释放: true }\n    const 校验结果 = {\n      可以释放: 体态校验结果.可以释放 && 释放判断结果.可以释放,\n      异常信息: 体态校验结果.异常信息 || 释放判断结果.异常信息,\n    }\n    if (校验结果.可以释放) {\n      this.添加战斗日志?.({\n        日志: 当前技能?.技能名称,\n        日志类型: '释放技能',\n      })\n    }\n    return 校验结果\n  }\n\n  // 技能释放异常\n  技能释放异常(校验结果, 当前技能, i) {\n    this.添加战斗日志({\n      日志: `循环在第${i + 1}个技能${当前技能?.技能名称}异常终止`,\n      日志类型: '循环异常',\n    })\n    this.循环执行结果 = '异常'\n    if (校验结果?.异常信息) {\n      this.循环异常信息 = {\n        异常索引: i + 1,\n        异常信息: 校验结果?.异常信息,\n      }\n    }\n  }\n\n  待生效事件结算(结算判断时间 = this.当前时间) {\n    if (this.待生效事件队列.length) {\n      // 轮训执行完成所有的事件\n      const 轮训执行事件 = () => {\n        if (this.待生效事件队列[0]?.事件时间 <= 结算判断时间) {\n          // 先推进时间到事件时间\n          const 当前事件 = this.待生效事件队列[0]\n          this.DOT结算与更新()\n          this.增加时间(当前事件.事件时间 - this.当前时间)\n          this.添加战斗日志?.({\n            日志: `事件【${当前事件.事件名称}】触发`,\n            日志类型: '技能释放结果',\n            日志时间: this.当前时间,\n          })\n          if (当前事件.事件名称?.includes('技能读条')) {\n            const 技能名称 = 当前事件?.事件备注?.技能名称\n            if (技能名称 && this.技能类实例集合?.[技能名称]) {\n              this.技能类实例集合?.[技能名称]?.读条伤害()\n            }\n          } else if (当前事件.事件名称?.includes('卸除buff')) {\n            if (当前事件?.事件备注?.buff名称) {\n              this.卸除buff({\n                名称: 当前事件?.事件备注?.buff名称,\n                对象: 当前事件?.事件备注?.buff对象,\n                卸除层数: 当前事件?.事件备注?.卸除层数,\n              })\n            }\n          } else if (当前事件.事件名称?.includes('经脉循行_秒回')) {\n            this.技能类实例集合?.经脉循行?.经脉循行每秒回复()\n          } else if (当前事件.事件名称?.includes('骤风造成伤害')) {\n            this.技能类实例集合?.骤风令?.骤风造成伤害()\n          } else if (当前事件.事件名称?.includes('横驱风靡造成伤害')) {\n            this.技能类实例集合?.抟风令?.横驱风靡造成伤害()\n          }\n          this.待生效事件队列?.shift()\n          if (this.待生效事件队列.length) {\n            轮训执行事件()\n          }\n        }\n      }\n\n      轮训执行事件()\n      // this.待生效事件队列 = [...未生效事件]\n    }\n  }\n\n  添加待生效事件队列(传入数据: 待生效事件[], 事件覆盖 = false) {\n    let 新待生效事件队列: 待生效事件[] = []\n    // 把原来事件中的同名事件修改时间\n    if (事件覆盖) {\n      if (this.待生效事件队列?.some((item) => item.事件名称 === 传入数据?.[0]?.事件名称)) {\n        新待生效事件队列 = this.待生效事件队列.map((item) => {\n          if (item.事件名称 === 传入数据?.[0]?.事件名称) {\n            return 传入数据?.[0]\n          } else {\n            return item\n          }\n        })\n      } else {\n        新待生效事件队列 = (this.待生效事件队列 || []).concat(传入数据 || [])\n      }\n    } else {\n      新待生效事件队列 = (this.待生效事件队列 || []).concat(传入数据 || [])\n    }\n    // 由于不确定待生效事件时间分布，重新排序\n    新待生效事件队列.sort((a, b) => {\n      return (a?.事件时间 || 0) - (b?.事件时间 || 0)\n    })\n    this.待生效事件队列 = [...新待生效事件队列]\n  }\n\n  删除待生效事件队列(事件名称) {\n    const 新待生效事件队列: 待生效事件[] = [...(this.待生效事件队列 || [])].filter(\n      (item) => item.事件名称 !== 事件名称\n    )\n    // 由于不确定待生效事件时间分布，重新排序\n    新待生效事件队列.sort((a, b) => {\n      return (a?.事件时间 || 0) - (b?.事件时间 || 0)\n    })\n    this.待生效事件队列 = [...新待生效事件队列]\n  }\n\n  // ----------------- 通用函数 end----------------- //\n\n  // ----------------- 职业特殊函数 start----------------- //\n  回复能量(数值, 类型: '任脉' | '督脉' = '任脉') {\n    this.角色状态信息.能量信息[类型] = Math.min(this.角色状态信息.能量信息[类型] + 数值, 100)\n    this.技能类实例集合.经脉循行.经脉循行添加校验()\n    this.添加战斗日志({\n      日志: `${类型}值增加变为${this.角色状态信息.能量信息[类型]}`,\n      日志类型: '技能释放结果',\n    })\n  }\n\n  消耗能量(数值, 类型: '任脉' | '督脉' = '任脉') {\n    this.角色状态信息.能量信息[类型] = Math.max(this.角色状态信息.能量信息[类型] - 数值, 0)\n    this.技能类实例集合.经脉循行.经脉循行卸除校验()\n    this.添加战斗日志({\n      日志: `${类型}值减少变为${this.角色状态信息.能量信息[类型]}`,\n      日志类型: '技能释放结果',\n    })\n  }\n\n  神封校验() {\n    if (this.校验奇穴是否存在('神封')) {\n      const 当前总能量 = this.角色状态信息.能量信息.任脉 + this.角色状态信息.能量信息.督脉\n\n      return 当前总能量 >= 60\n    } else {\n      return false\n    }\n  }\n\n  神封触发() {\n    this?.回复能量(5, '任脉')\n    this?.回复能量(5, '督脉')\n  }\n\n  消耗当前一半能量() {\n    this.角色状态信息.能量信息.任脉 = this.角色状态信息.能量信息.任脉 * 0.5\n    this.角色状态信息.能量信息.督脉 = this.角色状态信息.能量信息.督脉 * 0.5\n  }\n\n  判断逆脉() {\n    if (this.校验奇穴是否存在('逆脉')) {\n      if (!this.当前目标buff列表?.['绝脉']?.当前层数) {\n        this.添加buff?.({ 名称: '绝脉', 对象: '目标' })\n        this.添加buff?.({ 名称: '绝脉', 对象: '目标' })\n        this.添加buff?.({ 名称: '绝脉', 对象: '目标' })\n      }\n    }\n  }\n\n  判断扬尘() {\n    if (this?.当前自身buff列表?.['扬尘']?.当前层数) {\n      this?.卸除buff({ 名称: '扬尘', 对象: '自身', 卸除层数: 1 })\n    }\n  }\n\n  // ----------------- 职业特殊函数 end ----------------- //\n\n  // 其他调用函数，供外层调用\n  // 模拟函数，一个技能的释放生命周期\n  模拟() {\n    for (let i = 0; i < this.测试循环.length; i++) {\n      if (i === 0) {\n        this.技能类实例集合.经脉循行.初始化经脉循行(this.起手回能帧)\n      }\n      this.本轮模拟开始前()\n      const 当前技能 = this?.技能基础数据?.find((item) => item?.技能名称 === this.测试循环[i])\n      if (当前技能) {\n        const 技能实例 = this.技能类实例集合[当前技能?.技能名称]\n        if (技能实例) {\n          技能实例?.释放前初始化?.()\n          // 获取预估技能释放时间，处理预估时间前的所有待生效事件，推进时间轴\n          const { 技能计划释放时间, 等待CD, 技能预估释放时间 } = this.技能释放前(\n            当前技能,\n            技能实例,\n            i\n          )\n          const 读条时间 = 技能实例?.获取读条时间?.(i) || 0\n          const 是否为读条技能 = !!读条时间\n          if (读条时间) {\n            技能实例?.读条?.(技能预估释放时间)\n          }\n          this.待生效事件结算(技能预估释放时间)\n          this.技能GCD和CD处理(等待CD, 技能预估释放时间, 当前技能, 技能实例)\n          // this.清空已经消失的buff()\n          const 开始读条时间 = 是否为读条技能 ? 技能预估释放时间 : undefined\n          const 结束读条时间 = 是否为读条技能 ? 技能预估释放时间 + 读条时间 : 0\n          this.技能成功开始释放(当前技能, 技能实例, 是否为读条技能)\n          const 释放校验结果 = this.技能释放校验(技能实例, 当前技能)\n          const 是否为最后一个技能 = i === this.测试循环.length - 1\n          const 开始释放时间 = this.当前时间\n          const 释放时标鹄层数 = this.当前目标buff列表?.['标鹄']?.当前层数 || 0\n          this.清空已经消失的buff()\n          if (释放校验结果?.可以释放) {\n            技能实例.命中?.(是否为最后一个技能)\n            技能实例.造成伤害?.(i)\n            // 推进到读条结束时间\n            if (结束读条时间 && 结束读条时间 > this.当前时间) {\n              this.待生效事件结算(结束读条时间)\n            }\n            技能实例.释放后?.()\n          } else {\n            this.技能释放异常(释放校验结果, 当前技能, i)\n            break\n          }\n          this.技能释放后(\n            当前技能,\n            技能计划释放时间,\n            开始读条时间,\n            开始释放时间,\n            是否为读条技能,\n            技能实例,\n            释放时标鹄层数\n          )\n        }\n      }\n      this.本轮模拟结束后()\n    }\n  }\n\n  // 将日志按时间排序\n  日志排序() {\n    const 新日志 = [...(this.战斗日志 || [])]\n\n    新日志.sort((a, b) => {\n      return (a?.日志时间 || 0) - (b?.日志时间 || 0)\n    })\n\n    // const 普通攻击处理日志 = this.普通攻击日志(新日志)\n\n    // 普通攻击处理日志.sort((a, b) => {\n    //   return (a?.日志时间 || 0) - (b?.日志时间 || 0)\n    // })\n\n    // this.战斗日志 = [...(普通攻击处理日志 || [])]\n\n    this.战斗日志 = [...(新日志 || [])]\n  }\n\n  // 普通攻击日志\n  普通攻击日志 = (战斗日志: 循环日志数据类型[]) => {\n    const 所有释放技能数组: any = 战斗日志.filter((item) => {\n      return item?.日志类型 === '释放技能'\n    })\n    // 读条期间不释放普通攻击\n    const 找出所有读条技能的区间: Array<{ 开始时间: number; 结束时间: number; 是否读条: boolean }> =\n      所有释放技能数组\n        .map((item, index) => {\n          const 是否读条 = item?.日志?.includes('抟风令')\n          return {\n            开始时间: item?.日志时间,\n            结束时间: 所有释放技能数组[index + 1]\n              ? 所有释放技能数组[index + 1]?.日志时间\n              : item?.日志时间,\n            是否读条: 是否读条,\n          }\n        })\n        .filter((item: any) => {\n          return item?.是否读条\n        })\n    const 战斗最大时间 = this.当前时间\n    const 战斗日志副本 = [...战斗日志]\n    const 普通攻击时间列表: number[] = []\n    // console.info('找出所有读条技能的区间', 找出所有读条技能的区间)\n\n    for (let i = 0; i < 战斗最大时间; i++) {\n      // 扇子武器攻击速度 MeleeWeaponAttackSpeed 是 16\n      if (\n        (普通攻击时间列表[普通攻击时间列表.length - 1] || 0) + 16 <= i ||\n        !普通攻击时间列表?.length\n      ) {\n        // 判断本帧是否在读条技能时间内\n        if (!找出所有读条技能的区间?.some((item) => item?.开始时间 < i && item?.结束时间 > i)) {\n          普通攻击时间列表.push(i)\n        }\n      }\n    }\n\n    普通攻击时间列表.forEach((item) => {\n      战斗日志副本.push({\n        日志: `云合扇法`,\n        日志类型: '造成伤害',\n        日志时间: item,\n        buff列表: ['玉枕', '神门'],\n      })\n    })\n\n    return 战斗日志副本\n  }\n\n  获取当前各技能的运行状态() {\n    const 各技能当前运行状态 = {}\n    ;(Object.keys(this.技能类实例集合) || []).forEach((key) => {\n      各技能当前运行状态[key] = this.技能类实例集合[key]?.技能运行数据 || {}\n    })\n    return 各技能当前运行状态\n  }\n\n  获取各DOT的运行状态() {\n    const DOT运行数据 = {}\n    ;(Object.keys(this.技能类实例集合) || []).forEach((key) => {\n      if (this.技能类实例集合[key]?.DOT运行数据) {\n        DOT运行数据[key] = this.技能类实例集合[key]?.DOT运行数据 || {}\n      }\n    })\n    return DOT运行数据\n  }\n}\n\nexport default 循环主类\n\nexport type 循环主类类型 = typeof 循环主类\n","/**\n * 定义模拟循环类\n */\n\nimport 循环主类 from './main'\nimport type { SimulatorCycleProps } from './main'\n\nconst 模拟循环 = (props: SimulatorCycleProps) => {\n  const 模拟实例 = new 循环主类(props)\n  模拟实例.模拟()\n\n  模拟实例.日志排序()\n\n  const 当前各技能运行状态 = 模拟实例.获取当前各技能的运行状态()\n  const 当前DOT运行状态 = 模拟实例.获取各DOT的运行状态()\n\n  return {\n    最终日志: 模拟实例.战斗日志,\n    当前自身buff列表: 模拟实例.当前自身buff列表,\n    当前目标buff列表: 模拟实例.当前目标buff列表,\n    角色状态信息: 模拟实例.角色状态信息,\n    当前时间: 模拟实例.当前时间,\n    循环执行结果: 模拟实例.循环执行结果,\n    循环异常信息: 模拟实例.循环异常信息,\n    技能释放记录: 模拟实例.技能释放记录,\n    当前各技能运行状态,\n    当前DOT运行状态,\n    当前GCD组: 模拟实例.GCD组,\n    技能基础数据: 模拟实例.技能基础数据,\n  }\n}\n\nexport default 模拟循环\n","// import 模拟器_新手工整 from './快速导入默认循环/模拟器_新手工整'\nimport 模拟器_一阳来复_1延迟 from './快速导入默认循环/模拟器_一阳来复_1延迟'\n\nexport default [模拟器_一阳来复_1延迟]\n","import { 循环数据 } from '@/@types/循环'\n\nconst 模拟器_一阳来复_1延迟: Partial<循环数据> = {\n  名称: '模拟器_一阳来复_1延迟',\n  奇穴: [\n    '阳池',\n    '涌泉',\n    '封府',\n    '反朴',\n    '神封',\n    '悬枢',\n    '神门',\n    '出岫',\n    '玉枕',\n    '茫缈',\n    '丘墟',\n    '一阳来复',\n  ],\n  技能序列: [\n    '引窍',\n    '破穴',\n    '一阳来复',\n    '风流云散',\n    '骤风令',\n    '劈风令',\n    '引窍',\n    '断脉',\n    '截阳',\n    '断脉',\n    '抟风令断',\n    '引窍',\n    '断脉',\n    '截阳',\n    '断脉',\n    '引窍',\n    '破穴',\n    '一阳来复',\n    '截阳',\n    '引窍',\n    '断脉',\n    '截阳',\n    '断脉',\n    '风流云散',\n    '引窍',\n    '骤风令',\n    '劈风令',\n    '断脉',\n    '截阳',\n    '断脉',\n    '引窍',\n    '破穴',\n    '一阳来复',\n    '截阳',\n    '引窍',\n    '断脉',\n    '截阳',\n    '断脉',\n    '引窍',\n    '断脉',\n    '截阳',\n    '断脉',\n    '风流云散',\n    '截阳',\n    '引窍',\n    '破穴',\n    '一阳来复',\n    '截阳',\n    '引窍',\n    '骤风令',\n    '劈风令',\n    '断脉',\n    '截阳',\n    '断脉',\n    '引窍',\n    '抟风令断',\n    '断脉',\n    '截阳',\n    '断脉',\n    '引窍',\n    '破穴',\n    '一阳来复',\n    '风流云散',\n    '截阳',\n    '引窍',\n    '断脉',\n    '截阳',\n    '断脉',\n    '引窍',\n    '骤风令',\n    '劈风令',\n    '断脉',\n    '截阳',\n    '断脉',\n    '引窍',\n    '破穴',\n    '一阳来复',\n    '截阳',\n    '引窍',\n    '断脉',\n    '截阳',\n    '断脉',\n    '风流云散',\n    '引窍',\n    '断脉',\n    '截阳',\n    '断脉',\n    '截阳',\n    '引窍',\n    '破穴',\n    '一阳来复',\n    '截阳',\n    '引窍',\n    '骤风令',\n    '劈风令',\n    '断脉',\n    '截阳',\n    '断脉',\n    '引窍',\n    '抟风令断',\n    '断脉',\n    '截阳',\n    '断脉',\n    '引窍',\n    '破穴',\n    '一阳来复',\n    '风流云散',\n    '截阳',\n    '引窍',\n    '断脉',\n    '截阳',\n    '断脉',\n    '引窍',\n    '骤风令',\n    '劈风令',\n    '断脉',\n    '截阳',\n    '断脉',\n    '引窍',\n    '破穴',\n    '一阳来复',\n    '截阳',\n    '引窍',\n    '断脉',\n    '截阳',\n    '断脉',\n    '风流云散',\n    '引窍',\n    '断脉',\n    '截阳',\n    '断脉',\n    '截阳',\n    '引窍',\n    '破穴',\n    '一阳来复',\n    '截阳',\n    '引窍',\n    '骤风令',\n    '劈风令',\n    '断脉',\n    '截阳',\n    '断脉',\n    '引窍',\n    '抟风令断',\n    '断脉',\n    '截阳',\n    '断脉',\n    '引窍',\n    '破穴',\n    '一阳来复',\n    '风流云散',\n    '截阳',\n    '引窍',\n  ],\n}\n\nexport default 模拟器_一阳来复_1延迟\n","import { Button, Divider, Dropdown, Menu, message, Popover, Select, Tooltip } from 'antd'\nimport React from 'react'\nimport { 循环基础技能数据类型, 模拟信息类型 } from '../../simulator/type'\nimport 快速导入默认循环 from '../../constant/快速导入默认循环'\nimport { useAppSelector } from '@/hooks'\nimport { 延迟设定 } from '@/数据/常量'\nimport { 判断有无橙武循环数据 } from '../../utils'\nimport './index.css'\n\ninterface CycleModalHeaderProps {\n  cycle: 循环基础技能数据类型[]\n  设置自定义循环保存弹窗: (e: boolean) => void\n  清空循环: () => void\n  快速导入循环: (e: 循环基础技能数据类型[]) => void\n  更新奇穴弹窗展示: (e: boolean) => void\n  更新奇穴信息: (e: string[]) => void\n  起手回能帧: number\n  更新起手回能帧: (e: number) => void\n  加速等级: number\n  更新加速等级: (e: number) => void\n  网络延迟: number\n  更新网络延迟: (e: number) => void\n  起手能量: { 任脉: number; 督脉: number }\n  更新起手能量: (e: { 任脉: number; 督脉: number }) => void\n  模拟信息: 模拟信息类型\n  大橙武模拟: boolean\n}\n\nfunction CycleModalHeader(props: CycleModalHeaderProps) {\n  const {\n    cycle,\n    设置自定义循环保存弹窗,\n    清空循环,\n    快速导入循环,\n    更新奇穴弹窗展示,\n    更新奇穴信息,\n    起手回能帧,\n    更新起手回能帧,\n    加速等级,\n    更新加速等级,\n    // 更新宠物顺序,\n    起手能量,\n    更新起手能量,\n    网络延迟,\n    更新网络延迟,\n    模拟信息,\n    大橙武模拟,\n  } = props\n\n  const 自定义循环 = useAppSelector((state) => state?.data?.自定义循环列表)\n\n  const 快捷添加循环 = (名称, 类型 = '默认') => {\n    const 数据源 = 类型 === '默认' ? 快速导入默认循环 : 自定义循环\n\n    const 当前循环数据 = 数据源?.find((item) => item.名称 === 名称)\n\n    const 技能序列信息 = (当前循环数据?.技能序列 || [])\n      .map((item) => {\n        return 模拟信息?.技能基础数据?.find((a) => a?.技能名称 === item) as 循环基础技能数据类型\n      })\n      .filter((item) => item)\n\n    快速导入循环(技能序列信息)\n    if (当前循环数据?.奇穴) {\n      更新奇穴信息(当前循环数据?.奇穴)\n    }\n  }\n\n  const 粘贴导入 = () => {\n    navigator.clipboard.readText().then((clipboardData) => {\n      if (!clipboardData) {\n        message.error('粘贴板内无可导入数据，请检查或重新复制')\n      } else {\n        const list = clipboardData?.split(',')\n        const 技能序列信息 = (list || [])\n          .map((item) => {\n            return 模拟信息?.技能基础数据?.find((a) => a?.技能名称 === item) as 循环基础技能数据类型\n          })\n          .filter((item) => item)\n        if (技能序列信息.length) {\n          快速导入循环(技能序列信息)\n          message.success('数据已全部导入')\n        } else {\n          message.error('粘贴板内无可导入数据，请检查或重新复制')\n        }\n      }\n    })\n  }\n\n  return (\n    <div className={'cycle-simulator-modal-header space-between'}>\n      <div className={'cycle-simulator-modal-title-wrapper'}>\n        <h1 className={'cycle-simulator-modal-title'}>循环模拟</h1>\n        <Popover\n          content={\n            <div>\n              <p>1、点击下方技能按钮添加至循环内</p>\n              <p>2、可以整行删除、复制本行到最后一行</p>\n              <p>3、可以在单行内拖动改变技能顺序</p>\n              <p>\n                更多使用说明详见：\n                <a href='https://www.jx3box.com/tool/75292' target='_blank' rel='noreferrer'>\n                  使用手册及FAQ\n                </a>\n              </p>\n            </div>\n          }\n        >\n          <span className={'cycle-simulator-help'}>如何使用</span>\n        </Popover>\n        {/* <Popover\n          content={\n            <div>\n              目前未支持的功能\n            </div>\n          }\n        >\n          <span className={'cycle-not-support'}>未支持功能</span>\n        </Popover> */}\n      </div>\n      <div className={'cycle-simulator-header-btns'}>\n        <Tooltip title='起手任脉' placement='left'>\n          <Select\n            size='small'\n            className={'cycle-simulator-header-select'}\n            value={起手能量?.任脉}\n            style={{ width: 70 }}\n            showSearch\n            popupMatchSelectWidth={120}\n            filterOption={(input, option) => {\n              return option?.value?.toString()?.includes(input) || false\n            }}\n            onChange={(e) => 更新起手能量({ ...起手能量, 任脉: e })}\n            options={Array.from({ length: 101 }, (v, i) => i).map((a) => {\n              const value = 100 - a\n              return {\n                value: value,\n                label: `${value}`,\n              }\n            })}\n          />\n        </Tooltip>\n        <Tooltip title='起手督脉' placement='left'>\n          <Select\n            size='small'\n            className={'cycle-simulator-header-select'}\n            value={起手能量?.督脉}\n            style={{ width: 70 }}\n            showSearch\n            popupMatchSelectWidth={120}\n            filterOption={(input, option) => {\n              return option?.value?.toString()?.includes(input) || false\n            }}\n            onChange={(e) => 更新起手能量({ ...起手能量, 督脉: e })}\n            options={Array.from({ length: 101 }, (v, i) => i).map((a) => {\n              const value = 100 - a\n              return {\n                value: value,\n                label: `${value}`,\n              }\n            })}\n          />\n        </Tooltip>\n        <Tooltip title='起手第一次经脉循行Buff回能帧节点' placement='left'>\n          <Select\n            size='small'\n            className={'cycle-simulator-header-select'}\n            value={起手回能帧}\n            style={{ width: 70 }}\n            onChange={更新起手回能帧}\n            options={Array.from({ length: 16 }, (v, i) => i).map((a) => {\n              return {\n                value: a,\n                label: `${a}帧`,\n              }\n            })}\n          />\n        </Tooltip>\n        <Select\n          size='small'\n          className={'cycle-simulator-header-select'}\n          value={加速等级}\n          onChange={更新加速等级}\n          options={Array.from({ length: 6 }, (v, i) => i).map((a) => {\n            return {\n              value: a,\n              label: `${a}段加速`,\n            }\n          })}\n        />\n        <Select\n          size='small'\n          className={'cycle-simulator-header-select'}\n          value={网络延迟}\n          onChange={更新网络延迟}\n          options={延迟设定}\n        />\n        <Dropdown\n          overlay={\n            <Menu>\n              {判断有无橙武循环数据(快速导入默认循环, 大橙武模拟)?.map((item) => {\n                return (\n                  <Menu.Item key={item?.名称} onClick={() => 快捷添加循环(item?.名称)}>\n                    {item?.名称}\n                  </Menu.Item>\n                )\n              })}\n              {判断有无橙武循环数据(自定义循环, 大橙武模拟)?.length\n                ? 判断有无橙武循环数据(自定义循环, 大橙武模拟).map((item, index) => {\n                    return (\n                      <Menu.Item key={index} onClick={() => 快捷添加循环(item?.名称, '自定义')}>\n                        {item?.名称}\n                      </Menu.Item>\n                    )\n                  })\n                : null}\n              <Divider style={{ margin: '4px 0' }} />\n              <Menu.Item key='ctrlv' onClick={粘贴导入}>\n                粘贴导入\n              </Menu.Item>\n            </Menu>\n          }\n        >\n          <Button size='small'>导入循环</Button>\n        </Dropdown>\n        <Tooltip title={'本奇穴设置只会在循环模拟器内生效，不影响外部'}>\n          <Button size='small' onClick={() => 更新奇穴弹窗展示(true)}>\n            奇穴设置\n          </Button>\n        </Tooltip>\n        <Button size='small' onClick={() => 清空循环()} danger>\n          清空循环\n        </Button>\n        <Tooltip title='自定义循环和原计算器其他循环的dps会心期望计算方式不同。会导致最终数值偏差。请勿进行跨循环比较。'>\n          <Button\n            size='small'\n            type='primary'\n            onClick={() => 设置自定义循环保存弹窗(true)}\n            disabled={cycle?.length < 1 || 模拟信息?.循环执行结果 === '异常'}\n          >\n            保存为自定义循环\n          </Button>\n        </Tooltip>\n      </div>\n    </div>\n  )\n}\n\nexport default CycleModalHeader\n","import React from 'react'\nimport { 角色状态信息类型 } from '../../../simulator/type'\nimport { Progress } from 'antd'\nimport './index.css'\n\ninterface TitaiProps {\n  角色状态信息: 角色状态信息类型\n}\n\nfunction Enerty(props: TitaiProps) {\n  const { 角色状态信息 } = props\n\n  return (\n    <div className={'cycle-status-bar-content cycle-status-energy-content'}>\n      <div className={'cycle-status-bar-title'}>能量</div>\n      <div className={'cycle-status-bar-enerty-wrap'}>\n        <div className={'cycle-status-bar-enerty-item'}>\n          <span>任脉</span>\n          <Progress\n            className={'cycle-status-bar-enerty'}\n            percent={Math.floor(角色状态信息?.能量信息?.任脉)}\n            format={(percent) => `${percent}`}\n          />\n        </div>\n        <div className={'cycle-status-bar-enerty-item'}>\n          <span>督脉</span>\n          <Progress\n            className={'cycle-status-bar-enerty'}\n            percent={Math.floor(角色状态信息?.能量信息?.督脉)}\n            format={(percent) => `${percent}`}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Enerty\n","import React, { useMemo } from 'react'\n\nimport { Space, Tooltip } from 'antd'\nimport { 每秒郭氏帧 } from '@/数据/常量'\nimport { Buff枚举, DOT列表 } from '../../../simulator/type'\nimport { 原始Buff数据 } from '../../../constant/skill'\nimport './index.css'\n\ninterface BuffProps {\n  title: string\n  buff列表: Buff枚举\n  DOT列表?: DOT列表\n  当前时间点: number\n  奇穴信息?: string[]\n}\n\nfunction Buff(props: BuffProps) {\n  const { title, buff列表, DOT列表 = {}, 奇穴信息, 当前时间点 } = props\n\n  const 当前buff列表 = Object.keys(buff列表).map((item) => buff列表[item])\n  const 最终显示buff列表 = useMemo(() => {\n    const res = [...(当前buff列表 || [])]\n    // 判断经脉循行\n    if (奇穴信息?.includes('玉枕') && buff列表?.['经脉循行']?.当前层数) {\n      res.push(原始Buff数据?.['玉枕'])\n    }\n    return res\n  }, [当前buff列表, buff列表, 奇穴信息])\n  const 当前Dot列表 = Object.keys(DOT列表)\n    .map((item) => {\n      const 原始数据 = 原始Buff数据?.[item]\n      return {\n        ...DOT列表[item],\n        ...原始数据,\n      }\n    })\n    ?.filter((item) => item?.待生效数据?.length)\n\n  return (\n    <div className={'cycle-status-bar-content cycle-status-bar-buff-content'}>\n      <div className={'cycle-status-bar-title'}>{title}</div>\n      <Space className={'cycle-status-bar-buff-list'} size={[8, 8]} wrap>\n        {最终显示buff列表?.length\n          ? 最终显示buff列表.map((item) => {\n              const 应该消失时间 = (item.刷新时间 || 0) + (item.最大持续时间 || 0)\n              const 剩余时间 = 应该消失时间 - 当前时间点 || 0\n              const 剩余时间秒 = (剩余时间 / 每秒郭氏帧).toFixed(1)\n              const 层数 = item.当前层数 || 0\n              return (\n                <div className={'cycle-status-bar-buff'} key={item.名称}>\n                  <div className={'cycle-status-bar-buff-item'}>\n                    <Tooltip\n                      title={\n                        <div>\n                          <>{`${item.名称}${层数 > 1 ? `${层数}层` : ''}`}</>\n                          <p>{item.备注}</p>\n                        </div>\n                      }\n                    >\n                      <img className={'cycle-status-bar-buff-img'} src={item.图标} />\n                    </Tooltip>\n                    {层数 > 1 ? (\n                      <span className={'cycle-status-bar-buff-count'}>{item.当前层数}</span>\n                    ) : null}\n                  </div>\n                  <p\n                    className={`cycle-status-bar-buff-second ${\n                      剩余时间 < 每秒郭氏帧 * 2 ? 'cycle-status-bar-buff-second-limit' : ''\n                    }`}\n                  >\n                    {item.名称 !== '经脉循行' ? (+剩余时间秒 > 0 ? 剩余时间秒 : null) : null}\n                  </p>\n                </div>\n              )\n            })\n          : null}\n        {当前Dot列表?.length\n          ? 当前Dot列表.map((item) => {\n              const 最后一跳 = item.待生效数据?.[item.待生效数据.length - 1] || {}\n              const 应该消失时间 = 最后一跳?.生效时间 || 0\n              const 剩余时间 = 应该消失时间 - 当前时间点 || 0\n              const 剩余时间秒 = (剩余时间 / 每秒郭氏帧).toFixed(1)\n              const 层数 = 最后一跳.当前层数 || 0\n              return (\n                <div className={'cycle-status-bar-buff'} key={item.名称}>\n                  <div className={'cycle-status-bar-buff-item'}>\n                    <Tooltip\n                      title={\n                        <div>\n                          <p>{`${item.名称}${层数 > 1 ? `${层数}层` : ''}`}</p>\n                          <p>{item.备注}</p>\n                        </div>\n                      }\n                    >\n                      <img className={'cycle-status-bar-buff-img'} src={item.图标} />\n                    </Tooltip>\n                    {层数 > 1 ? (\n                      <span className={'cycle-status-bar-buff-count'}>{层数}</span>\n                    ) : null}\n                  </div>\n                  <p\n                    className={`cycle-status-bar-buff-second ${\n                      剩余时间 < 每秒郭氏帧 * 2 ? 'cycle-status-bar-buff-second-limit' : ''\n                    }`}\n                  >\n                    {剩余时间秒}\n                  </p>\n                </div>\n              )\n            })\n          : null}\n        {!当前buff列表?.length && !当前Dot列表?.length ? (\n          <p className={'cycle-buff-empty'}>无</p>\n        ) : null}\n      </Space>\n    </div>\n  )\n}\n\nexport default Buff\n","import React from 'react'\nimport { Modal, ModalProps, Table } from 'antd'\nimport 循环模拟技能基础数据, { 日志类型数组 } from '../../../../constant/skill'\nimport { 每秒郭氏帧 } from '@/数据/常量'\nimport { 循环日志数据类型 } from '../../../../simulator/type'\nimport '../../../../index.css'\n\ninterface BattleLogModalProps extends ModalProps {\n  logData: 循环日志数据类型[]\n}\n\nconst BattleLogModal: React.FC<BattleLogModalProps> = (props) => {\n  const { open, onCancel, logData } = props\n\n  const columns = [\n    {\n      title: '日志',\n      dataIndex: '日志',\n      filters: [\n        ...循环模拟技能基础数据,\n        { 技能名称: '贯穿' },\n        { 技能名称: '标鹄' },\n        { 技能名称: '引爆' },\n        { 技能名称: '没石饮羽' },\n      ]?.map((item) => {\n        return {\n          text: item?.技能名称,\n          value: item?.技能名称,\n        }\n      }),\n      onFilter: (value: any, record) => {\n        return record.日志?.includes(value) || record?.日志类型?.includes(value)\n      },\n    },\n    {\n      title: '日志类型',\n      dataIndex: '日志类型',\n      filters: 日志类型数组?.map((item) => {\n        return {\n          text: item,\n          value: item,\n        }\n      }),\n      onFilter: (value: any, record) => record.日志类型.indexOf(value) === 0,\n    },\n    {\n      title: 'buff列表',\n      dataIndex: 'buff列表',\n      render: (_, record) => {\n        return record.日志类型 === '造成伤害' ? (_ || [])?.join(',') || '-' : '-'\n      },\n    },\n    {\n      title: '日志帧',\n      dataIndex: '日志时间',\n      render: (_) => {\n        return _\n      },\n    },\n    {\n      title: '日志秒',\n      dataIndex: '日志秒',\n      render: (_, row) => {\n        return row?.日志时间 / 每秒郭氏帧\n      },\n    },\n    // {\n    //   title: '造成伤害',\n    //   dataIndex: '造成伤害',\n    // },\n    // {\n    //   title: '造成总伤害',\n    //   dataIndex: '造成总伤害',\n    // },\n    // {\n    //   title: '秒伤',\n    //   dataIndex: '秒伤',\n    // },\n  ]\n\n  return (\n    <Modal\n      className='cycle-simulator-modal'\n      open={open}\n      onCancel={onCancel}\n      title={\n        <div className={'cycle-simulator-modal-header'}>\n          <h1 className={'cycle-simulator-modal-title'}>战斗日志</h1>\n        </div>\n      }\n      width={'80%'}\n      centered\n      footer={false}\n    >\n      <Table\n        dataSource={logData}\n        columns={columns}\n        size='small'\n        pagination={{ pageSize: 100, showTotal: (total) => total }}\n      />\n    </Modal>\n  )\n}\n\nexport default BattleLogModal\n","import React, { useMemo } from 'react'\nimport 结果统计 from '@/功能模块/计算结果/结果统计'\nimport { 循环日志数据类型 } from '../../../../simulator/type'\nimport { Divider, Popover } from 'antd'\nimport '../../../../index.css'\nimport { 计算结果技能列表类型 } from '@/@types/输出'\n\ninterface SkillCountModalProps {\n  open: boolean\n  onCancel: () => void\n  dpsList: 计算结果技能列表类型[]\n  total: number\n  logData: 循环日志数据类型[]\n}\n\nconst SkillCountModal: React.FC<SkillCountModalProps> = (props) => {\n  const { open, onCancel, total, dpsList, logData } = props\n\n  const { 引窍总倍率, 绝脉总倍率, 引窍统计数组, 绝脉统计数组 } = useMemo(() => {\n    const 引窍数组 = (logData || [])?.filter((item) => {\n      return item?.日志?.includes('引窍') && item?.日志类型?.includes('造成伤害')\n    })\n    const 绝脉数组 = (logData || [])?.filter((item) => {\n      return item?.日志?.includes('绝脉') && item?.日志类型?.includes('造成伤害')\n    })\n    const { 总倍率: 引窍总倍率, 统计数组: 引窍统计数组 } = 获取总倍率数组(引窍数组)\n    const { 总倍率: 绝脉总倍率, 统计数组: 绝脉统计数组 } = 获取总倍率数组(绝脉数组)\n    return {\n      引窍总倍率,\n      引窍统计数组,\n      绝脉总倍率,\n      绝脉统计数组,\n    }\n  }, [logData])\n\n  return (\n    <结果统计\n      title={\n        <div className={'cycle-simulator-modal-header space-between'}>\n          <h1 className={'cycle-simulator-modal-title'}>技能统计</h1>\n          <Popover\n            content={\n              <div className='ztg-cycle-simulator-skill-count-warp'>\n                <div className='ztg-cycle-simulator-skill-count-item'>\n                  <p>引窍倍率：{引窍总倍率}</p>\n                  <Divider style={{ margin: '4px 0' }} />\n                  {Object.keys(引窍统计数组).map((item) => {\n                    return (\n                      <p key={`引窍统计${item}`}>\n                        引窍·{item}：{引窍统计数组[item]}次\n                      </p>\n                    )\n                  })}\n                </div>\n                <div className='ztg-cycle-simulator-skill-count-item'>\n                  <p>绝脉倍率：{绝脉总倍率}</p>\n                  <Divider style={{ margin: '4px 0' }} />\n                  {Object.keys(绝脉统计数组).map((item) => {\n                    return (\n                      <p key={`绝脉统计${item}`}>\n                        绝脉·{item}：{绝脉统计数组[item]}次\n                      </p>\n                    )\n                  })}\n                </div>\n              </div>\n            }\n          >\n            <span className={'cycle-simulator-help'}>技能细节</span>\n          </Popover>\n        </div>\n      }\n      计算结果={{\n        总伤: total,\n        计算结果技能列表: dpsList,\n      }}\n      visible={open}\n      onClose={() => onCancel()}\n    />\n  )\n}\n\nexport default SkillCountModal\n\nexport const 获取对应实际倍率 = (日志) => {\n  return 日志?.其他数据?.技能等级 || 1\n}\n\nconst 获取总倍率数组 = (数组) => {\n  let 倍率 = 0\n\n  const 统计完整数据 = 数组\n    .map((item) => {\n      const 本次倍率 = 获取对应实际倍率(item)\n      倍率 = 倍率 + 本次倍率\n      return 本次倍率\n    })\n    .filter((item) => item !== -1)\n\n  const 统计数组 = 获取出现次数(统计完整数据)\n  return {\n    总倍率: 倍率,\n    统计数组,\n  }\n}\n\nfunction 获取出现次数(arr) {\n  return arr.reduce((acc, curr) => {\n    acc[curr] ? acc[curr]++ : (acc[curr] = 1)\n    return acc\n  }, {})\n}\n","import { 循环日志数据类型 } from '../../../../../simulator/type'\n\nconst 过滤的buff列表 = ['劲风簇追', '饮羽簇追']\n\nexport const 获取Buff覆盖率 = (日志: 循环日志数据类型[], 总战斗用时: number) => {\n  // 以buff个体分类，组成数字数组代表buff持续时间段\n  const Buff枚举: {\n    [key: string]: number[][]\n  } = {}\n  const 覆盖率 = {}\n\n  // 遍历日志塞入数组\n  for (let i = 0; i < 日志.length; i++) {\n    if (\n      (日志[i]?.日志类型 === '目标buff变动' || 日志[i]?.日志类型 === '自身buff变动') &&\n      (日志[i]?.日志?.includes('获得') || 日志[i]?.日志?.includes('失去'))\n    ) {\n      // 当前buff信息\n      const logName = 日志[i]?.日志\n      const type = logName?.includes('获得') ? 'get' : 'lose'\n      const buffName = type === 'get' ? logName?.split('获得')?.[1] : logName?.split('失去')?.[1]\n      const currentTime: number = 日志[i]?.日志时间 || 0\n      if (buffName && !过滤的buff列表?.includes(buffName)) {\n        if (type === 'get') {\n          if (Buff枚举?.[buffName]) {\n            // 判断当前最后一个数组的长度，如果为1代表还没结束，不处理。为2再塞入新的起始时间\n            if (Buff枚举[buffName][Buff枚举[buffName].length - 1]?.length > 1) {\n              Buff枚举[buffName].push([currentTime])\n            }\n          } else {\n            Buff枚举[buffName] = [[currentTime]]\n          }\n        } else if (type === 'lose') {\n          if (Buff枚举?.[buffName]) {\n            if (Buff枚举?.[buffName]?.[Buff枚举?.[buffName]?.length - 1]) {\n              Buff枚举[buffName][Buff枚举[buffName].length - 1].push(currentTime)\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // 循环结束，对没有结束时间的buff做补充，塞入总战斗用时作为结束时间\n  // 同时，计算各buff的覆盖率\n  Object.keys(Buff枚举).forEach((key) => {\n    if (Buff枚举[key]?.length) {\n      if (\n        Buff枚举[key]?.[Buff枚举[key]?.length - 1] &&\n        Buff枚举[key]?.[Buff枚举[key]?.length - 1]?.length < 2\n      ) {\n        Buff枚举[key][Buff枚举[key].length - 1].push(总战斗用时)\n      }\n\n      let 总持续时间 = 0\n      for (let i = 0; i < Buff枚举[key].length; i++) {\n        if (Buff枚举[key][i] && Buff枚举[key][i].length === 2) {\n          总持续时间 = 总持续时间 + Buff枚举[key][i][1] - Buff枚举[key][i][0]\n        }\n      }\n      覆盖率[key] = ((总持续时间 / 总战斗用时) * 100)?.toFixed(3)\n    }\n  })\n\n  return {\n    Buff枚举,\n    覆盖率,\n  }\n}\n\nexport const 格式化buff覆盖数组 = (Buff枚举) => {\n  const res: any[] = []\n  Object.keys(Buff枚举).forEach((key) => {\n    if (Buff枚举[key]?.length) {\n      Buff枚举[key].forEach((range) => {\n        res.push({ type: key, range: range })\n      })\n    }\n  })\n  return res\n}\n","import { Modal, ModalProps, Space } from 'antd'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { Chart } from '@antv/g2'\nimport { 循环日志数据类型 } from '../../../../../simulator/type'\nimport './index.css'\nimport { 格式化buff覆盖数组, 获取Buff覆盖率 } from './util'\n\ninterface BuffCountModalProps extends ModalProps {\n  open: boolean\n  onCancel: () => void\n  日志: 循环日志数据类型[]\n  总战斗用时: number // 总战斗用时\n}\n\nfunction BuffCountModal(props: BuffCountModalProps) {\n  const { open, onCancel, 日志, 总战斗用时 } = props\n  const [chartData, setChartData] = useState<any>()\n  const limitRef: any = useRef<any>()\n  const [覆盖率, 设置覆盖率] = useState<any>({})\n\n  useEffect(() => {\n    if (open) {\n      setTimeout(() => {\n        initChart()\n      }, 20)\n    }\n    if (open) {\n      limitRef.current = false\n    } else {\n      limitRef.current = false\n      设置覆盖率({})\n      setChartData(undefined)\n    }\n  }, [open, 日志, 总战斗用时])\n\n  const initChart = () => {\n    if (limitRef.current) {\n      return\n    }\n    limitRef.current = true\n\n    const chart = chartData\n      ? chartData\n      : new Chart({\n          container: 'cycle-buff-count-chart',\n          autoFit: true,\n          renderer: 'canvas',\n          padding: [24, 120, 100, 120],\n        })\n\n    chart.tooltip({\n      crosshairs: false,\n    })\n\n    if (!chartData) {\n      setChartData(chart)\n    }\n\n    const dataSource = getDataSource()\n\n    chart.source(dataSource, {\n      time: {\n        tickCount: 10,\n      },\n    })\n    chart.axis('time', {\n      label: {\n        style: {\n          textAlign: 'center', // 文本对齐方向，可取值为： start middle end\n          fontSize: 16, // 文本大小\n        },\n      },\n    })\n\n    const data = getDataSource()\n\n    chart.data(data)\n    chart.coordinate().transpose()\n    chart.interval().position('type*range').color('type').label('range', { offset: 10 })\n    // .color(DOMAIN_COLOR)\n    chart.render()\n    // setLoading(false)\n\n    setTimeout(() => {\n      limitRef.current = false\n    }, 10)\n  }\n\n  const getDataSource = () => {\n    const { Buff枚举, 覆盖率 } = 获取Buff覆盖率(日志, 总战斗用时)\n    设置覆盖率(覆盖率)\n    return 格式化buff覆盖数组(Buff枚举)\n  }\n\n  return (\n    <Modal\n      open={open}\n      onCancel={onCancel}\n      title={\n        <div className={'cycle-simulator-modal-header'}>\n          <h1 className={'cycle-simulator-modal-title'}>Buff覆盖情况（时间单位：帧）</h1>\n        </div>\n      }\n      width={'80%'}\n      centered\n      footer={false}\n    >\n      <Space className='cycle-buff-count-text' size={[16, 16]} wrap>\n        {Object.keys(覆盖率).map((item) => {\n          return (\n            <div key={item} className={'cycle-buff-count-text-wrap'}>\n              <span className='cycle-buff-count-text-label'>{item}：</span>\n              <span className='cycle-buff-count-text-value'>{覆盖率[item]}%</span>\n            </div>\n          )\n        })}\n      </Space>\n      {open ? <div id='cycle-buff-count-chart' className={'cycle-buff-count-chart'} /> : null}\n    </Modal>\n  )\n}\n\nexport default BuffCountModal\n","import React, { useState } from 'react'\nimport { Alert, Tooltip } from 'antd'\nimport { PieChartOutlined, CalendarOutlined, AlignLeftOutlined } from '@ant-design/icons'\n\nimport { 循环日志数据类型, 模拟信息类型 } from '../../../simulator/type'\n// import DpsResModal from './components/DpsResModal'\nimport BattleLogModal from './components/BattleLogModal'\nimport SkillCountModal from './components/SkillCountModal'\nimport BuffCountModal from './components/BuffCountModal'\nimport { 当前计算结果类型 } from '@/@types/输出'\nimport './index.css'\n\ninterface DpsResProps {\n  日志信息: 循环日志数据类型[]\n  模拟信息: 模拟信息类型\n  模拟DPS结果: 当前计算结果类型\n}\n\nfunction DpsRes(props: DpsResProps) {\n  const { 模拟信息, 日志信息, 模拟DPS结果 } = props\n  // buff分析\n  const [buffCountModalOpen, setBuffCountModalOpen] = useState<boolean>(false)\n\n  // 日志log\n  const [logModalOpen, setLogModalOpen] = useState<boolean>(false)\n  // 技能统计\n  const [countModal, setCountModal] = useState<boolean>(false)\n\n  // const 开发中 = () => {\n  //   message.success('功能开发中，敬请期待')\n  // }\n\n  return (\n    <div\n      className={`cycle-bar-dps-res ${\n        模拟信息?.循环执行结果 === '异常' ? 'cycle-bar-dps-res-error' : ''\n      }`}\n    >\n      {模拟信息?.循环执行结果 === '异常' ? (\n        <div className={'cycle-dps-res-error'}>\n          <h1 className={'cycle-dps-res-error-title'}>循环异常</h1>\n          <Alert\n            type='error'\n            showIcon\n            message={`异常信息：${模拟信息?.循环异常信息?.异常信息?.信息}`}\n          />\n        </div>\n      ) : 模拟DPS结果?.秒伤 ? (\n        <div className={'cycle-dps-res-success'}>\n          <div className={'cycle-dps-res-success-content'}>\n            <h1 className={'cycle-dps-res-num'}>{模拟DPS结果?.秒伤}</h1>\n            <div className={'cycle-dps-res-success-text-content'}>\n              <div>\n                <span className={'cycle-dps-res-success-text'}>战斗用时</span>\n                <span className={'cycle-dps-res-success-text cycle-dps-res-success-highlight'}>\n                  {模拟DPS结果?.秒伤计算时间}秒\n                </span>\n              </div>\n              <div className={'cycle-dps-res-icons'}>\n                <Tooltip title='Buff分析' placement='left'>\n                  <PieChartOutlined\n                    className={'cycle-dps-res-icon'}\n                    onClick={() => setBuffCountModalOpen(true)}\n                  />\n                </Tooltip>\n                <Tooltip title='战斗日志' placement='left'>\n                  <CalendarOutlined\n                    className={'cycle-dps-res-icon'}\n                    onClick={() => setLogModalOpen(true)}\n                  />\n                </Tooltip>\n                <Tooltip title='技能统计' placement='left'>\n                  <AlignLeftOutlined\n                    className={'cycle-dps-res-icon'}\n                    onClick={() => setCountModal(true)}\n                  />\n                </Tooltip>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : null}\n      {/* dps结果 */}\n      {/* <DpsResModal open={dpsModal} onCancel={() => setDpsModal(false)} logData={日志信息} /> */}\n      {/* 战斗日志 */}\n      <BattleLogModal\n        open={logModalOpen}\n        onCancel={() => setLogModalOpen(false)}\n        logData={日志信息}\n      />\n      {/* 技能统计 */}\n      <SkillCountModal\n        open={countModal}\n        onCancel={() => setCountModal(false)}\n        dpsList={模拟DPS结果?.计算结果技能列表}\n        total={模拟DPS结果?.总伤}\n        logData={日志信息}\n      />\n      {/* Buff分析 */}\n      {buffCountModalOpen && (\n        <BuffCountModal\n          open={buffCountModalOpen}\n          onCancel={() => setBuffCountModalOpen(false)}\n          日志={日志信息}\n          总战斗用时={模拟信息?.当前时间}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default DpsRes\n","// 当前角色状态栏，只用来展示\nimport React from 'react'\nimport { 循环日志数据类型, ShowCycleSingleSkill, 模拟信息类型 } from '../../simulator/type'\n\nimport Energy from './energy'\nimport Buff from './buff'\nimport DpsRes from './dpsRes'\nimport './index.css'\nimport { 当前计算结果类型 } from '@/@types/输出'\n\ninterface StatusBarProps {\n  模拟信息: 模拟信息类型\n  完整循环: ShowCycleSingleSkill[]\n  日志信息: 循环日志数据类型[]\n  模拟DPS结果: 当前计算结果类型\n  奇穴信息: string[]\n}\n\nfunction StatusBar(props: StatusBarProps) {\n  const { 模拟信息, 日志信息, 模拟DPS结果, 奇穴信息 } = props\n\n  return (\n    <div className={'cycle-status-bar'}>\n      <Energy 角色状态信息={模拟信息?.角色状态信息} />\n      <Buff\n        title='自身Buff'\n        buff列表={模拟信息?.当前自身buff列表}\n        当前时间点={模拟信息?.当前时间}\n        奇穴信息={奇穴信息 || []}\n      />\n      <Buff\n        title='目标Buff'\n        buff列表={模拟信息?.当前目标buff列表}\n        DOT列表={模拟信息?.当前DOT运行状态}\n        当前时间点={模拟信息?.当前时间}\n      />\n      <DpsRes 模拟信息={模拟信息} 日志信息={日志信息} 模拟DPS结果={模拟DPS结果} />\n    </div>\n  )\n}\n\nexport default StatusBar\n","import React from 'react'\nimport { 原始Buff数据 } from '../../constant/skill'\n\nfunction BuffItem({ data, ...rest }) {\n  const buff = 原始Buff数据?.[data]\n  return buff ? <img src={buff.图标} {...rest} /> : null\n}\n\nexport default BuffItem\n","// 技能循环显示技能单元\nimport React, { useMemo } from 'react'\nimport { Badge, Dropdown, Space, Tooltip } from 'antd'\nimport { CloseCircleFilled } from '@ant-design/icons'\nimport classNames from 'classnames'\nimport { ShowCycleSingleSkill, 模拟信息类型 } from '../../simulator/type'\nimport { 每秒郭氏帧 } from '@/数据/常量'\nimport BuffItem from './BuffItem'\nimport './index.css'\n\ninterface CycleSkillItemProps {\n  技能: ShowCycleSingleSkill\n  删除循环技能: (e: number) => void\n  模拟信息: 模拟信息类型\n  buff覆盖数据: number[]\n  buff覆盖索引: number\n  更新buff覆盖数据: (e: number[], 索引: number) => void\n  点击下拉菜单: (e: any) => void\n}\n\nfunction CycleSkillItem(props: CycleSkillItemProps) {\n  const {\n    技能,\n    删除循环技能,\n    模拟信息,\n    buff覆盖数据,\n    buff覆盖索引,\n    更新buff覆盖数据,\n    点击下拉菜单,\n  } = props\n\n  const 判断开始释放时间 = (技能?.开始读条时间 ? 技能.开始读条时间 : 技能.实际释放时间) || 0\n  const 读条时间 = 技能?.开始读条时间\n    ? Math.round((((技能.实际释放时间 || 0) - (技能.开始读条时间 || 0)) / 每秒郭氏帧) * 100) / 100\n    : 0\n\n  const 技能索引 = 技能?.index || 0\n\n  const 技能释放时间 = Math.round(((判断开始释放时间 || 0) / 每秒郭氏帧) * 100) / 100\n  const 间隔CD = (判断开始释放时间 || 0) - (技能.计划释放时间 || 0)\n  // 把帧转成秒，保留两位小数\n  const 剩余秒 = Math.round((间隔CD / 每秒郭氏帧) * 100) / 100\n  // 是否异常\n  // 存在异常索引\n  const 索引 = (模拟信息?.循环异常信息?.异常索引 || 0) + -1\n  const 是否异常 = 模拟信息?.循环执行结果 === '异常' ? (技能?.index || 0) >= 索引 : false\n  const 当前异常 = 模拟信息?.循环执行结果 === '异常' ? (技能?.index || 0) === 索引 : false\n\n  const 技能释放结果 = 技能?.技能释放记录结果 || {}\n\n  const 判断有无重要buff标记 = () => {\n    if (技能释放结果?.造成buff数据?.buff名称) {\n      更新buff覆盖数据(\n        [技能释放结果?.造成buff数据?.buff开始时间, 技能释放结果?.造成buff数据?.buff结束时间],\n        技能索引\n      )\n    }\n  }\n\n  const 卸除重要buff标记 = () => {\n    更新buff覆盖数据([], 0)\n  }\n\n  const 当前是否需要高亮展示在buff覆盖中 = useMemo(() => {\n    if (\n      (技能?.实际释放时间 || 0) <= buff覆盖数据?.[1] &&\n      (技能?.实际释放时间 || 0) >= buff覆盖数据?.[0] &&\n      技能索引 >= buff覆盖索引\n    ) {\n      return true\n    } else {\n      return false\n    }\n  }, [buff覆盖数据, buff覆盖索引, 技能索引, 技能])\n\n  const cls = classNames(\n    'cycle-simulator-setting-skill',\n    是否异常 ? 'cycle-simulator-setting-skill-error' : '',\n    当前是否需要高亮展示在buff覆盖中 ? 'cycle-simulator-setting-skill-highlight' : ''\n  )\n\n  const 图标 = useMemo(() => {\n    return 技能.图标\n  }, [技能, 技能释放结果])\n\n  const 下拉菜单 = [\n    {\n      key: '前部插入',\n      label: (\n        <span>\n          在<span className='cycle-simulator-menu-tip-before'>前部</span>添加技能\n        </span>\n      ),\n    },\n    {\n      key: '后部插入',\n      label: (\n        <span>\n          在<span className='cycle-simulator-menu-tip-after'>后部</span>添加技能\n        </span>\n      ),\n    },\n  ]\n\n  return (\n    <Badge count={剩余秒} offset={[-52, 8]} className={'cycle-simulator-setting-skill-drag'}>\n      <Dropdown menu={{ items: 下拉菜单, onClick: 点击下拉菜单 }} trigger={['contextMenu']}>\n        <div className={cls} onMouseEnter={判断有无重要buff标记} onMouseLeave={卸除重要buff标记}>\n          <Tooltip\n            title={\n              <div>\n                <p>{技能?.技能名称}</p>\n                {技能释放时间 ? <p>释放时间：{技能释放时间}秒</p> : null}\n                {技能释放结果.实际伤害技能 ? <p>伤害名称：{技能释放结果.实际伤害技能}</p> : null}\n                {剩余秒 ? <p>释放等待CD：{剩余秒}秒</p> : null}\n                {读条时间 ? <p>读条：{读条时间}秒</p> : null}\n                {技能释放结果?.重要buff列表?.length ? (\n                  <Space className={'cycle-simulator-setting-buff'} size={[8, 8]} wrap>\n                    {技能释放结果?.重要buff列表.map((item) => {\n                      return (\n                        <BuffItem\n                          data={item}\n                          key={item}\n                          className={'cycle-simulator-setting-buff-item'}\n                        />\n                      )\n                    })}\n                  </Space>\n                ) : null}\n                {是否异常 ? (\n                  当前异常 ? (\n                    <p>异常：{模拟信息?.循环异常信息?.异常信息?.信息}</p>\n                  ) : (\n                    <p>前置技能异常</p>\n                  )\n                ) : null}\n              </div>\n            }\n          >\n            <img className={'ztg-cycle-simulator-setting-skill-img'} src={图标} />\n          </Tooltip>\n          <CloseCircleFilled\n            className={'cycle-simulator-setting-skill-close'}\n            onClick={() => 删除循环技能(技能?.index || 0)}\n          />\n        </div>\n      </Dropdown>\n    </Badge>\n  )\n}\n\nexport default CycleSkillItem\n","import React, { useMemo } from 'react'\nimport { 每秒郭氏帧 } from '@/数据/常量'\nimport { 循环基础技能数据类型, 技能GCD组, 模拟信息类型 } from '../../simulator/type'\nimport classNames from 'classnames'\nimport { Badge, Tooltip } from 'antd'\nimport { ERROR_ACTION } from '../../simulator/utils'\n\ninterface AddCycleSkillBtnProps {\n  技能: 循环基础技能数据类型\n  完整循环: 循环基础技能数据类型[]\n  onClick?: any\n  className?: string\n  模拟信息: 模拟信息类型\n  style?: any\n}\n\ninterface 异常信息数据 {\n  是否禁用?: boolean\n  角标数字?: number\n  异常描述?: string\n}\n\n// 添加循环技能按钮组件\nconst AddCycleSkillBtn: React.FC<AddCycleSkillBtnProps> = (props) => {\n  const { 技能, 模拟信息, onClick, className, ...rest } = props\n\n  const 释放等待CD = 计算可以释放时技能CD(模拟信息, 技能)\n  const 技能当前层数 = 计算技能当前层数(模拟信息, 技能)\n\n  const 异常信息: 异常信息数据 = useMemo(() => {\n    let 禁用信息 = {}\n    if (技能?.技能名称 === '朔风扬尘二' && !模拟信息?.当前自身buff列表?.['朔风扬尘']?.当前层数) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.BUFF错误?.信息,\n      }\n    } else if (技能?.技能名称 === '骤风劈风' && !模拟信息?.当前自身buff列表?.['茫缈']?.当前层数) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.BUFF错误?.信息,\n      }\n    } else if (技能?.技能名称 === '点掉橙武' && !模拟信息?.当前自身buff列表?.['橙武']?.当前层数) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.BUFF错误?.信息,\n      }\n    }\n    if (释放等待CD > 0 && 技能?.最大充能层数 && 技能?.最大充能层数 > 1) {\n      return {\n        ...禁用信息,\n        角标数字: 释放等待CD,\n        异常描述: `当前技能处于充能中，剩余${释放等待CD}秒`,\n      }\n    } else if (释放等待CD > 0) {\n      return {\n        ...禁用信息,\n        角标数字: 释放等待CD,\n        异常描述: `当前技能处于冷却中，剩余${释放等待CD}秒`,\n      }\n    } else {\n      return { ...禁用信息 }\n    }\n  }, [释放等待CD, 技能, 模拟信息])\n\n  // 点击前判断是否可以释放\n  const beforeOnClick = () => {\n    if (异常信息?.是否禁用) {\n      return\n    }\n    onClick()\n  }\n\n  const cls = classNames(className, 异常信息?.是否禁用 ? 'cycle-simulator-setting-btn-error' : '')\n\n  const 技能显示信息 = useMemo(() => {\n    return 技能\n  }, [技能, 模拟信息])\n\n  return (\n    <div onClick={beforeOnClick} className={cls} {...rest}>\n      <Tooltip title={异常信息?.异常描述 || 技能?.说明 || ''}>\n        <Badge count={异常信息?.角标数字} className={'cycle-add-btn-wrap'} offset={[0, 0]}>\n          <img className={`cycle-add-btn`} src={技能显示信息?.图标} />\n          {技能?.最大充能层数 && 技能?.最大充能层数 !== 1 ? (\n            <span className={'cycle-add-btn-count'}>{技能当前层数}</span>\n          ) : null}\n        </Badge>\n      </Tooltip>\n      <p className={'cycle-add-btn-text'}>{技能显示信息?.技能原始名称 || 技能显示信息?.技能名称}</p>\n    </div>\n  )\n}\n\nexport default AddCycleSkillBtn\n\nconst 计算可以释放时技能CD = (模拟信息: 模拟信息类型, 技能: 循环基础技能数据类型) => {\n  const 技能运行状态 = 模拟信息?.当前各技能运行状态?.[技能?.技能名称]\n  const 待充能时间点 = 技能运行状态?.待充能时间点\n\n  if (待充能时间点?.length) {\n    const GCD = 检查GCD(技能, 模拟信息.当前GCD组)\n    // 当前技能可以释放时间当前时间（为上一个技能释放结束时间）加上本技能释放前结算GCD\n    const 可以释放时间 = (模拟信息?.当前时间 || 0) + (GCD || 0)\n    const 下次预估释放时间 = 待充能时间点?.[0]\n    if (下次预估释放时间 > 可以释放时间) {\n      const 技能CD = 下次预估释放时间 - 可以释放时间\n      // 把帧转成秒，保留两位小数\n      const 剩余秒 = Math.round((技能CD / 每秒郭氏帧) * 100) / 100\n      return 剩余秒\n    } else {\n      return 0\n    }\n  } else {\n    return 0\n  }\n}\n\nconst 计算技能当前层数 = (模拟信息: 模拟信息类型, 技能: 循环基础技能数据类型) => {\n  const 技能运行状态 = 模拟信息?.当前各技能运行状态?.[技能?.技能名称]\n  return (技能?.最大充能层数 || 1) - (技能运行状态?.待充能时间点?.length || 0)\n}\n\nconst 检查GCD = (技能: 循环基础技能数据类型, GCD组: 技能GCD组) => {\n  let 校验GCD组: string = 技能.技能GCD组 as string\n  if (技能.技能GCD组 === '自身') {\n    校验GCD组 = 技能?.技能名称\n  }\n  if (校验GCD组) {\n    // 大部分技能只检查自己的GCD\n    const GCD = GCD组[校验GCD组]\n    return GCD\n  } else {\n    return 0\n  }\n}\n","export const 快捷添加数据: 快捷添加数据类型[] = [\n  {\n    名称: '双断截引',\n    技能序列: ['断脉', '截阳', '断脉', '截阳', '引窍'],\n    color: 'cyan',\n  },\n  {\n    名称: '断截断引',\n    技能序列: ['断脉', '截阳', '断脉', '引窍'],\n    color: 'green',\n  },\n  {\n    名称: '断截引',\n    技能序列: ['断脉', '截阳', '引窍'],\n    color: 'blue',\n  },\n  {\n    名称: '破阳截引',\n    技能序列: ['破穴', '一阳来复', '截阳', '引窍'],\n    color: 'magenta',\n  },\n  {\n    名称: '风劈双断',\n    技能序列: ['骤风令', '骤风劈风', '断脉', '截阳', '断脉', '引窍'],\n    color: 'volcano',\n  },\n  {\n    名称: '风劈',\n    技能序列: ['骤风令', '骤风劈风'],\n    color: 'gold',\n  },\n  // {\n  //   名称: 'CBC引A',\n  //   技能序列: ['寒更晓箭', '金乌见坠', '白羽流星', '饮羽簇', '白羽流星', '引风唤灵', '劲风簇'],\n  //   color: 'green',\n  // },\n]\n\nexport interface 快捷添加数据类型 {\n  名称: string\n  技能序列: string[]\n  color?: string\n}\n","import { Col, Row, Space, Tag } from 'antd'\nimport React from 'react'\nimport { 循环基础技能数据类型, 模拟信息类型 } from '../../simulator/type'\nimport AddCycleSkillBtn from './AddCycleSkillBtn'\nimport { 快捷添加数据, 快捷添加数据类型 } from './快捷添加'\nimport './index.css'\n\ninterface AddCycleSkillBtnsProps {\n  新增循环技能: (data: 循环基础技能数据类型) => void\n  批量新增循环: (data: 循环基础技能数据类型[]) => void\n  处理循环结果对象: { 完整循环: 循环基础技能数据类型[] }\n  模拟信息: 模拟信息类型\n  大橙武模拟: boolean\n  奇穴信息: string[]\n  // 宠物顺序: string[]\n  // 更新宠物顺序: (e: string[]) => void\n}\n\nfunction AddCycleSkillBtns(props: AddCycleSkillBtnsProps) {\n  const {\n    新增循环技能,\n    批量新增循环,\n    处理循环结果对象,\n    模拟信息,\n    大橙武模拟,\n    奇穴信息,\n    // 宠物顺序,\n    // 更新宠物顺序,\n  } = props\n\n  const 批量新增循环技能 = (数据: 快捷添加数据类型) => {\n    const 技能原始数据: 循环基础技能数据类型[] = 数据?.技能序列\n      .map((item) => {\n        return 模拟信息?.技能基础数据?.find((a) => a.技能名称 === item) || ({} as any)\n      })\n      .filter((item) => item)\n    if (技能原始数据?.length) {\n      批量新增循环(技能原始数据)\n    }\n  }\n\n  // const hrefDev = location.href?.includes('dev=1')\n  // const DEV = hrefDev\n\n  return (\n    <div className={'cycle-simulator-setting-btns'}>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'ztg-cycle-btn-type'}>一阳指</span>\n        <Space className={'cycle-simulator-setting-skills'} size={[8, 16]} wrap>\n          {模拟信息?.技能基础数据\n            ?.filter((item) => {\n              return !item?.创建循环不可选 && item?.技能类型 === '一阳指'\n            })\n            .map((item) => {\n              return (\n                <AddCycleSkillBtn\n                  onClick={() => 新增循环技能(item)}\n                  key={item?.技能名称}\n                  className={'ztg-cycle-simulator-setting-btn'}\n                  完整循环={处理循环结果对象?.完整循环 || []}\n                  技能={item}\n                  模拟信息={模拟信息}\n                />\n              )\n            })}\n        </Space>\n      </div>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'ztg-cycle-btn-type'}>聘风令</span>\n        <Space className={'cycle-simulator-setting-skills'} size={[8, 16]} wrap>\n          {模拟信息?.技能基础数据\n            ?.filter((item) => !item?.创建循环不可选 && item?.技能类型 === '聘风令')\n            .map((item) => {\n              return (\n                <AddCycleSkillBtn\n                  onClick={() => 新增循环技能(item)}\n                  key={item?.技能名称}\n                  className={'ztg-cycle-simulator-setting-btn'}\n                  完整循环={处理循环结果对象?.完整循环 || []}\n                  技能={item}\n                  模拟信息={模拟信息}\n                />\n              )\n            })}\n        </Space>\n      </div>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'ztg-cycle-btn-type'}>空蒙扇</span>\n        <Space className={'cycle-simulator-setting-skills'} size={[8, 16]} wrap>\n          {模拟信息?.技能基础数据\n            ?.filter((item) => !item?.创建循环不可选 && item?.技能类型 === '空蒙扇')\n            .map((item) => {\n              return (\n                <AddCycleSkillBtn\n                  onClick={() => 新增循环技能(item)}\n                  key={item?.技能名称}\n                  className={'ztg-cycle-simulator-setting-btn'}\n                  完整循环={处理循环结果对象?.完整循环 || []}\n                  技能={item}\n                  模拟信息={模拟信息}\n                />\n              )\n            })}\n        </Space>\n      </div>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'ztg-cycle-btn-type'}>其他</span>\n        <Space className={'cycle-simulator-setting-skills'} size={[8, 16]} wrap>\n          {模拟信息?.技能基础数据\n            ?.filter((item) => {\n              if (!大橙武模拟 && item?.显示类型 === '大橙武模拟') {\n                return false\n              }\n              if (item?.显示类型 === '奇穴技能') {\n                const 依赖名称 = item?.依赖奇穴名 || item?.技能名称\n                return 奇穴信息?.includes(依赖名称)\n              }\n              return !item?.创建循环不可选 && item?.技能类型 === '其他'\n            })\n            .map((item) => {\n              return (\n                <AddCycleSkillBtn\n                  onClick={() => 新增循环技能(item)}\n                  key={item?.技能名称}\n                  className={'ztg-cycle-simulator-setting-btn'}\n                  完整循环={处理循环结果对象?.完整循环 || []}\n                  技能={item}\n                  模拟信息={模拟信息}\n                />\n              )\n            })}\n        </Space>\n      </div>\n      <div className={`cycle-simulator-setting-item cycle-simulator-setting-fast-item`}>\n        <span className={'ztg-cycle-btn-type'}>快捷添加</span>\n        <Row className={'cycle-simulator-setting-quick'} gutter={[16, 8]}>\n          {快捷添加数据.map((item) => {\n            return (\n              <Col span={8} key={item?.名称}>\n                {/* <Tooltip title={item?.技能序列?.join(' ')}> */}\n                <Tag\n                  color={item?.color || 'blue'}\n                  onClick={() => 批量新增循环技能(item)}\n                  className={'cycle-simulator-setting-quick-item'}\n                >\n                  {item?.名称}\n                </Tag>\n                {/* </Tooltip> */}\n              </Col>\n            )\n          })}\n        </Row>\n      </div>\n    </div>\n  )\n}\n\nexport default AddCycleSkillBtns\n","import { Alert, App, Checkbox, Form, Input, Modal, Select, Tabs } from 'antd'\nimport React, { useEffect, useMemo, useState } from 'react'\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport { 更新当前自定义循环列表 } from '@/store/data'\nimport { 延迟设定 } from '@/数据/常量'\nimport './index.css'\n\nconst { 计算循环 } = 获取当前数据()\n\ninterface SaveCustomCycleModalProps {\n  自定义循环保存弹窗: boolean\n  设置自定义循环保存弹窗: (e: boolean) => void\n  保存自定义循环: (名称, 加速选项, 延迟选项) => void\n}\n\nfunction SaveCustomCycleModal(props: SaveCustomCycleModalProps) {\n  const { modal } = App.useApp()\n\n  const { 自定义循环保存弹窗, 设置自定义循环保存弹窗, 保存自定义循环 } = props\n  // 保存类型，覆盖｜新增\n  const [自定义循环类型, 设置自定义循环类型] = useState<string>()\n  // 自定义循环名称保存输入\n  const [自定义循环名称输入, 设置自定义循环名称输入] = useState<string>()\n  // 保存类型，覆盖｜新增\n  const [覆盖循环名, 设置覆盖循环名] = useState<string>()\n  // 保存加速序列\n  const [加速选项, 设置加速选项] = useState<number[]>([0, 1, 2])\n  const [延迟选项, 设置延迟选项] = useState<number[]>([0, 1, 2])\n\n  const 自定义循环 = useAppSelector((state) => state?.data?.自定义循环列表)\n\n  const dispatch = useAppDispatch()\n\n  const 全部循环 = useMemo(() => {\n    return (计算循环 || []).concat(自定义循环)\n  }, [自定义循环, 计算循环])\n\n  useEffect(() => {\n    if (自定义循环保存弹窗) {\n      if (自定义循环?.length) {\n        设置自定义循环类型('覆盖')\n      } else {\n        设置自定义循环类型('新增')\n      }\n    } else {\n      设置自定义循环类型(undefined)\n      设置自定义循环名称输入(undefined)\n      设置覆盖循环名(undefined)\n    }\n  }, [自定义循环保存弹窗, 自定义循环])\n\n  const 保存自定义循环前 = () => {\n    const 名称 = 自定义循环类型 === '覆盖' ? 覆盖循环名 : 自定义循环名称输入\n    保存自定义循环(名称, 加速选项, 延迟选项)\n  }\n\n  // 删除自定义循环\n  const 删除循环前提示 = (e, 名称) => {\n    e.stopPropagation()\n    e.preventDefault()\n\n    modal.confirm({\n      title: `确定要删除循环【${名称}】吗?`,\n      content: '删除后将无法恢复',\n      okText: '我要删除',\n      onOk: async () => {\n        删除循环(名称)\n      },\n    })\n  }\n\n  const 删除循环 = (名称) => {\n    dispatch(更新当前自定义循环列表(自定义循环.filter((item) => item.名称 !== 名称)))\n  }\n\n  return (\n    <Modal\n      centered\n      title='保存自定义循环'\n      okButtonProps={{\n        disabled:\n          !(自定义循环类型 === '覆盖' ? 覆盖循环名 : 自定义循环名称输入) ||\n          !延迟选项?.length ||\n          !加速选项?.length,\n      }}\n      open={自定义循环保存弹窗}\n      onCancel={() => 设置自定义循环保存弹窗(false)}\n      onOk={保存自定义循环前}\n      width={630}\n      destroyOnClose\n      className={'cycle-custom-save-modal'}\n    >\n      <Tabs\n        className={'cycle-custom-save-modal-content'}\n        type='card'\n        activeKey={自定义循环类型}\n        onChange={设置自定义循环类型}\n      >\n        <Tabs.TabPane tab={'覆盖'} key='覆盖'>\n          <Select\n            value={覆盖循环名}\n            onChange={设置覆盖循环名}\n            optionLabelProp='label'\n            placeholder={'请选择你要覆盖的循环'}\n          >\n            {自定义循环.map((item) => {\n              return (\n                <Select.Option value={item.名称} key={item.名称} label={item.名称}>\n                  <div className={'cycle-custom-save-label'}>\n                    <span>{item.名称}</span>\n                    <span\n                      onClick={(e) => 删除循环前提示(e, item.名称)}\n                      className={'cycle-custom-save-delete'}\n                    >\n                      删除\n                    </span>\n                  </div>\n                </Select.Option>\n              )\n            })}\n          </Select>\n        </Tabs.TabPane>\n        <Tabs.TabPane tab={'新增'} key='新增'>\n          <Form>\n            <Form.Item\n              rules={[\n                {\n                  validator: (_, value, callback) => {\n                    if (value) {\n                      if (全部循环?.some((item) => item?.名称 === value)) {\n                        callback('已存在相同的循环名，请更换')\n                      }\n                    }\n                    callback()\n                  },\n                },\n              ]}\n            >\n              <Input\n                value={自定义循环名称输入}\n                placeholder='请输入自定义循环名称'\n                onChange={(e) => 设置自定义循环名称输入(e?.target?.value)}\n              />\n            </Form.Item>\n          </Form>\n        </Tabs.TabPane>\n      </Tabs>\n      <div className='cycle-custom-save-checkbox'>\n        <p>加速</p>\n        <Checkbox.Group value={加速选项} onChange={(e) => 设置加速选项(e as number[])}>\n          {Array.from({ length: 6 }, (v, i) => i).map((a) => {\n            return (\n              <Checkbox value={a} key={a}>\n                {a}段\n              </Checkbox>\n            )\n          })}\n        </Checkbox.Group>\n        <p>延迟</p>\n        <Checkbox.Group value={延迟选项} onChange={(e) => 设置延迟选项(e as number[])}>\n          {延迟设定.map((item) => {\n            return (\n              <Checkbox value={item.value} key={item.value}>\n                {item.label}\n              </Checkbox>\n            )\n          })}\n        </Checkbox.Group>\n      </div>\n      <Alert message={'选项越少保存越快。没选择的选项在外部计算dps时不会进行计算。'} />\n    </Modal>\n  )\n}\n\nexport default SaveCustomCycleModal\n","// 奇穴数据，只在模拟循环内生效\nimport { Drawer, Form, Select, Tooltip } from 'antd'\nimport React, { useEffect } from 'react'\nimport { useAppSelector } from '@/hooks'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport './index.css'\n\nconst { 奇穴数据 = [] } = 获取当前数据()\n\ninterface QixueSetProps {\n  className?: string\n  奇穴信息: string[]\n  更新奇穴信息: (e: string[]) => void\n  奇穴弹窗展示: boolean\n  更新奇穴弹窗展示: (e: boolean) => void\n}\n\nconst QixueSetModal: React.FC<QixueSetProps> = (props) => {\n  const 当前奇穴信息 = useAppSelector((state) => state?.data?.当前奇穴信息)\n  const { 奇穴信息, 更新奇穴信息, 奇穴弹窗展示, 更新奇穴弹窗展示 } = props\n\n  const [form] = Form.useForm()\n\n  const handleChangeQixue = () => {\n    setTimeout(() => {\n      form?.validateFields().then((values) => {\n        const newArray = Object.keys(values).map((key) => {\n          return values[key] as string\n        })\n        更新奇穴信息(newArray)\n      })\n    }, 0)\n  }\n\n  // 监听表单变化\n  useEffect(() => {\n    const obj = {}\n    奇穴信息.map((item, index) => {\n      obj[index] = item || 当前奇穴信息[index]\n    })\n    form?.setFieldsValue({\n      ...obj,\n    })\n  }, [奇穴信息])\n\n  return (\n    <Drawer\n      title={'奇穴设置'}\n      open={奇穴弹窗展示}\n      onClose={() => 更新奇穴弹窗展示(false)}\n      placement='bottom'\n      height={140}\n      mask={false}\n      className={'qixue-simulator-set-drawer qixue-shxj'}\n    >\n      <Form form={form} className={'qixue-simulator-set-drawer-wrap'}>\n        {奇穴数据.map((重, index) => {\n          return (\n            <Form.Item className={'qixue-simulator-set-item'} name={index} key={index + 1}>\n              <Select\n                className={'qixue-simulator-set-item-select'}\n                onChange={handleChangeQixue}\n                dropdownMatchSelectWidth={false}\n                optionLabelProp='label'\n                showArrow={false}\n                popupClassName={'qixue-simulator-set-item-select-popup'}\n                // defaultValue={DEFAULT_QIXUE_VALUE[index]}\n              >\n                {重?.奇穴列表.map((奇穴) => {\n                  return (\n                    <Select.Option\n                      value={奇穴?.奇穴名称}\n                      key={奇穴?.奇穴名称}\n                      className={'qixue-simulator-set-item-select-option'}\n                      label={\n                        <div className={'qixue-simulator-label'}>\n                          <img className={'qixue-simulator-label-img'} src={奇穴?.奇穴图片} />\n                          <span className={'qixue-simulator-label-text'}>{奇穴?.奇穴名称}</span>\n                        </div>\n                      }\n                    >\n                      <div className='qixue-simulator-set-item-select-img-wrap'>\n                        <img\n                          className={'qixue-simulator-set-item-select-img'}\n                          src={奇穴?.奇穴图片}\n                        />\n                      </div>\n                      <Tooltip title={奇穴?.奇穴描述 || ''} placement='right'>\n                        <span className={'qixue-simulator-set-item-select-text'}>\n                          {奇穴?.奇穴名称}\n                        </span>\n                      </Tooltip>\n                    </Select.Option>\n                  )\n                })}\n              </Select>\n            </Form.Item>\n          )\n        })}\n      </Form>\n    </Drawer>\n  )\n}\n\nexport default QixueSetModal\n","import { Drawer } from 'antd'\nimport React from 'react'\nimport { 循环基础技能数据类型, 模拟信息类型 } from '../../simulator/type'\nimport AddCycleSkillBtns from '../AddCycleSkillBtns'\n\ninterface AddCycleSkillModalProps {\n  向循环内插入技能: (data: 循环基础技能数据类型[], 插入位置: string, 插入索引: number) => void\n  处理循环结果对象: { 完整循环: 循环基础技能数据类型[] }\n  模拟信息: 模拟信息类型\n  大橙武模拟: boolean\n  奇穴信息: string[]\n  添加设置: { 位置: string; 索引 }\n  添加技能弹窗显示: boolean\n  关闭弹窗: () => void\n}\n\nfunction AddCycleSkillModal(props: AddCycleSkillModalProps) {\n  const {\n    向循环内插入技能,\n    处理循环结果对象,\n    模拟信息,\n    大橙武模拟,\n    奇穴信息,\n    添加设置,\n    添加技能弹窗显示,\n    关闭弹窗,\n  } = props\n\n  const 新增循环技能 = (item: 循环基础技能数据类型) => {\n    向循环内插入技能([item], 添加设置?.位置, 添加设置?.索引)\n  }\n\n  const 批量新增循环 = (item: 循环基础技能数据类型[]) => {\n    向循环内插入技能(item, 添加设置?.位置, 添加设置?.索引)\n  }\n\n  return (\n    <Drawer\n      title='插入技能'\n      placement='bottom'\n      open={添加技能弹窗显示}\n      onClose={关闭弹窗}\n      height={180}\n    >\n      <AddCycleSkillBtns\n        新增循环技能={新增循环技能}\n        批量新增循环={批量新增循环}\n        处理循环结果对象={处理循环结果对象}\n        模拟信息={模拟信息}\n        大橙武模拟={大橙武模拟}\n        奇穴信息={奇穴信息}\n      />\n    </Drawer>\n  )\n}\n\nexport default AddCycleSkillModal\n","// 循环模拟器\nimport React, { useEffect, useMemo, useState } from 'react'\nimport { App, Button, Modal, Tooltip, message } from 'antd'\nimport { ReactSortable } from 'react-sortablejs'\nimport { CopyOutlined, DeleteOutlined, AlertOutlined } from '@ant-design/icons'\n\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport { 获取加速等级 } from '@/工具函数/data'\nimport { 秒伤计算 } from '@/计算模块/计算函数'\nimport { 当前计算结果类型 } from '@/@types/输出'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport { 循环详情 } from '@/@types/循环'\nimport { 更新当前自定义循环列表 } from '@/store/data'\nimport { 每秒郭氏帧 } from '@/数据/常量'\n\nimport 循环模拟技能基础数据 from './constant/skill'\nimport { getDpsCycle } from './utils'\nimport {\n  循环日志数据类型,\n  循环基础技能数据类型,\n  ShowCycleSingleSkill,\n  模拟信息类型,\n} from './simulator/type'\n\nimport 模拟循环 from './simulator/index'\n\nimport CycleModalHeader from './components/CycleModalHeader'\nimport StatusBar from './components/StatusBar'\nimport CycleSkillItem from './components/CycleSkillItem'\nimport AddCycleSkillBtns from './components/AddCycleSkillBtns'\nimport SaveCustomCycleModal from './components/SaveCustomCycleModal'\nimport QixueSetModal from './components/QixueSetModal'\nimport AddCycleSkillModal from './components/AddCycleSkillModal'\nimport './index.css'\n\nconst { 缓存映射 } = 获取当前数据()\n\nconst 加速等级枚举 = {\n  0: 0,\n  1: 206,\n  2: 9230,\n  3: 19280,\n  4: 30151,\n  5: 42047,\n}\n\ninterface CycleSimulatorProps {\n  打开循环模拟器?: () => void\n  disabled?: boolean\n}\n\nfunction CycleSimulator(props: CycleSimulatorProps) {\n  const { modal } = App.useApp()\n  const { 打开循环模拟器, disabled } = props\n  const [logData, setLogData] = useState<循环日志数据类型[]>([])\n\n  const [模拟DPS结果, 更新模拟DPS结果] = useState<当前计算结果类型>({\n    秒伤: 0,\n    总伤: 0,\n    秒伤计算时间: 0,\n    计算结果技能列表: [],\n  })\n\n  const [模拟信息, 更新模拟信息] = useState<模拟信息类型>({\n    角色状态信息: {\n      能量信息: { 任脉: 100, 督脉: 100 },\n    },\n    当前时间: 0,\n    当前自身buff列表: {},\n    当前目标buff列表: {},\n    循环执行结果: '成功',\n    循环异常信息: {},\n    技能基础数据: [...循环模拟技能基础数据],\n    技能释放记录: [],\n    当前各技能运行状态: {},\n    当前DOT运行状态: {},\n    当前GCD组: {},\n  })\n\n  // 基础弹窗\n  const [basicModalOpen, setBasicModalOpen] = useState<boolean>(false)\n  // 循环\n  const [cycle, setCycle] = useState<循环基础技能数据类型[]>([])\n  const [自定义循环保存弹窗, 设置自定义循环保存弹窗] = useState<boolean>(false)\n  // 当前面板加速值\n  const 外部加速值 = useAppSelector((state) => state?.data?.装备信息?.装备基础属性)?.加速等级 || 0\n  const 外部延迟 = useAppSelector((state) => state?.data?.网络延迟) || 0\n  const 大橙武模拟 =\n    !!useAppSelector((state) => state?.data?.装备信息?.装备增益)?.大橙武特效 || false\n\n  const [加速等级, 更新加速等级] = useState<number>(0)\n  const [起手回能帧, 更新起手回能帧] = useState<number>(0)\n  const [网络延迟, 更新网络延迟] = useState<number>(0)\n  const [起手能量, 更新起手能量] = useState<{ 任脉: number; 督脉: number }>({\n    任脉: 100,\n    督脉: 100,\n  })\n\n  // 自定义循环\n  const 自定义循环列表 = useAppSelector((state) => state?.data?.自定义循环列表)\n\n  const 加速值 = useMemo(() => {\n    return 加速等级枚举[加速等级] || 0\n  }, [加速等级])\n\n  // 是否实时计算\n  const 是否实时计算 = true\n\n  // 奇穴\n  const reduxQixuedata = useAppSelector((state) => state?.data?.当前奇穴信息)\n  const [奇穴信息, 更新奇穴信息] = useState<string[]>([])\n  const [奇穴弹窗展示, 更新奇穴弹窗展示] = useState<boolean>(false)\n  const [buff覆盖数据, 更新buff覆盖数据] = useState<number[]>([])\n  const [buff覆盖索引, 更新buff覆盖索引] = useState<number>(0)\n\n  // 添加循环\n  const [添加技能弹窗显示, 更新添加技能弹窗显示] = useState<boolean>(false)\n  const [添加设置, 更新添加设置] = useState<{ 位置: string; 索引 }>({ 位置: '', 索引: 0 })\n\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (basicModalOpen) {\n      // 设置外面选择的默认奇穴信息\n      更新奇穴信息(reduxQixuedata)\n      更新加速等级(获取加速等级(外部加速值))\n      更新起手回能帧(8) // 默认为8\n      更新网络延迟(外部延迟)\n      更新起手能量({ 任脉: 100, 督脉: 100 })\n    } else {\n      setLogData([])\n      setBasicModalOpen(false)\n      setCycle([])\n      更新模拟DPS结果({ 秒伤: 0, 总伤: 0, 秒伤计算时间: 0, 计算结果技能列表: [] })\n    }\n  }, [basicModalOpen, reduxQixuedata, 外部加速值])\n\n  useEffect(() => {\n    if (是否实时计算 && basicModalOpen) {\n      simulator({})\n    }\n  }, [basicModalOpen, cycle, 是否实时计算, 网络延迟, 起手能量, 加速值, 起手回能帧, 奇穴信息])\n\n  const simulator = (props?) => {\n    const { 传入加速 = 加速值, 传入延迟 = 网络延迟, 更新展示 = true, 奇穴 } = props\n    const res = 模拟循环({\n      测试循环: cycle.map((item) => item?.技能名称) || [],\n      加速值: 传入加速 !== undefined ? 传入加速 : 加速值,\n      网络延迟: 传入延迟 !== undefined ? 传入延迟 : 网络延迟,\n      奇穴: 奇穴 || 奇穴信息,\n      大橙武模拟,\n      起手回能帧,\n      起手能量,\n    })\n\n    const {\n      最终日志,\n      当前自身buff列表: 处理后自身buff,\n      当前目标buff列表: 处理后目标buff,\n      角色状态信息: 处理后角色状态信息,\n      ...rest\n    } = res\n    if (更新展示) {\n      setLogData(最终日志)\n      计算dps(最终日志, rest?.当前时间)\n      更新模拟信息({\n        当前自身buff列表: 处理后自身buff,\n        当前目标buff列表: 处理后目标buff,\n        角色状态信息: 处理后角色状态信息,\n        ...rest,\n      })\n    }\n    return { 最终日志, ...rest }\n  }\n\n  // 计算DPS日志\n  const 计算dps = (data: 循环日志数据类型[], 当前时间) => {\n    const 获取用于计算的技能组 = getDpsCycle(data)\n    const { 秒伤, 计算结果技能列表, 秒伤计算时间, 总伤 } = dispatch(\n      秒伤计算({\n        更新循环技能列表: 获取用于计算的技能组,\n        更新计算时间: 当前时间 / 每秒郭氏帧,\n        更新奇穴数据: 奇穴信息,\n      })\n    )\n    更新模拟DPS结果({\n      秒伤: 当前时间 > 0 ? 秒伤 : 0,\n      总伤: 当前时间 > 0 ? 总伤 : 0,\n      秒伤计算时间: 秒伤计算时间,\n      计算结果技能列表: 计算结果技能列表,\n    })\n  }\n\n  // 根据循环计算更适合展示的多层数组，用于显示\n  const 处理循环结果对象 = useMemo(() => {\n    const res: ShowCycleSingleSkill[][] = []\n\n    const 是否存在换行技能 = cycle?.find((item) => item?.技能名称 === '换行')\n    cycle.map((item, index) => {\n      const 找到当前技能释放记录 = 模拟信息?.技能释放记录?.[index]\n      const data = {\n        ...item,\n        ...找到当前技能释放记录,\n      }\n\n      if (index === 0) {\n        res[res?.length] = [{ ...data, index: index || 0 }]\n      } else {\n        res[res?.length - 1] = [...(res[res?.length - 1] || []), { ...data, index: index || 0 }]\n\n        const 打完本技能换轮次 = 是否存在换行技能\n          ? data?.技能名称 === '换行'\n          : data?.技能名称 === '骤风令'\n\n        if (打完本技能换轮次) {\n          res[res?.length] = []\n        }\n      }\n      return data\n    })\n\n    return { 显示循环: res, 完整循环: cycle }\n  }, [cycle, 模拟信息])\n\n  // 拖拽更新循环\n  const 拖拽更新循环 = (newList, type) => {\n    if (type == '轮次内') {\n      // 首先获取被替换轮次的第一个元素的index索引\n      const minIndex = newList.reduce(function (min, obj) {\n        return Math.min(min, obj.index)\n      }, Infinity)\n      // 获取最大的索引，判断拖拽生效范围\n      const maxIndex = newList.reduce(function (min, obj) {\n        return Math.max(min, obj.index)\n      }, Number.NEGATIVE_INFINITY)\n      // 将数组哪索引范围内跌元素替换为新的数组元素\n      const newCycle = cycle.map((item, index) => {\n        if (index < minIndex || index > maxIndex) {\n          return { ...item }\n        } else {\n          return newList[index - minIndex]\n        }\n      })\n      // 更新循环\n      setCycle(newCycle)\n    } else if (type === '整个轮次拖拽') {\n      const res: 循环基础技能数据类型[] = []\n      newList.forEach((item) => {\n        item.forEach((a) => {\n          if (a.技能名称) {\n            const 当前技能数据 = 模拟信息?.技能基础数据?.find((b) => b?.技能名称 === a.技能名称)\n            if (当前技能数据) {\n              res.push(当前技能数据)\n            }\n          }\n        })\n      })\n      setCycle(res)\n    }\n  }\n  // 向循环内新增技能\n  const 新增循环技能 = (item: 循环基础技能数据类型) => {\n    let newCycle: 循环基础技能数据类型[] = []\n    newCycle = [...(cycle || []), item]\n    setCycle(newCycle)\n  }\n\n  const 向循环内插入技能 = (item: 循环基础技能数据类型[], 插入位置, 插入索引) => {\n    let newCycle: 循环基础技能数据类型[] = [...(cycle || [])]\n    let addCycle: 循环基础技能数据类型[] = []\n\n    if (插入位置 === '前部插入') {\n      // 在索引 2 前插入多个元素\n      addCycle = newCycle.slice(0, 插入索引).concat(item, newCycle.slice(插入索引))\n      更新添加设置({ ...添加设置, 索引: 添加设置.索引 + item.length })\n    } else {\n      // 在索引 2 后插入多个元素\n      addCycle = newCycle\n        .slice(0, 插入索引 + item.length)\n        .concat(item, newCycle.slice(插入索引 + item.length))\n    }\n\n    newCycle = [...addCycle]\n    setCycle(newCycle)\n  }\n\n  const 批量新增循环 = (item: 循环基础技能数据类型[]) => {\n    const batchItem = [...item]\n    const newCycle = [...(cycle || []), ...batchItem]\n    setCycle(newCycle)\n  }\n\n  // 从循环内删除技能\n  const 删除循环技能 = (index) => {\n    const newCycle = [...(cycle || [])]\n    newCycle.splice(index, 1)\n    setCycle(newCycle)\n  }\n\n  // 复制本轮到最后\n  const 复制本轮至最后 = (轮次) => {\n    let newCycle: 循环基础技能数据类型[] = []\n    newCycle = [...(cycle || [])].concat(轮次)\n    setCycle(newCycle)\n  }\n\n  // 删除本轮次\n  const 删除本轮次 = (轮次) => {\n    const minIndex = 轮次.reduce(function (min, obj) {\n      return Math.min(min, obj.index)\n    }, Infinity)\n    // 获取最大的索引，判断拖拽生效范围\n    const maxIndex = 轮次.reduce(function (min, obj) {\n      return Math.max(min, obj.index)\n    }, Number.NEGATIVE_INFINITY)\n    // 将数组哪索引范围内跌元素替换为新的数组元素\n    const newCycle = cycle.filter((item, index) => {\n      return index < minIndex || index > maxIndex\n    })\n    // 更新循环\n    setCycle(newCycle)\n  }\n\n  // 删除本轮后全部循环\n  const 删除本轮后全部循环 = (轮次) => {\n    modal.confirm({\n      title: '确认删除本轮后全部循环吗？',\n      onOk() {\n        // 获取最大的索引，判断生效范围\n        const maxIndex = 轮次.reduce(function (min, obj) {\n          return Math.max(min, obj.index)\n        }, Number.NEGATIVE_INFINITY)\n        // 将数组哪索引范围内跌元素替换为新的数组元素\n        const newCycle = cycle.filter((item, index) => {\n          return index <= maxIndex\n        })\n        // 更新循环\n        setCycle(newCycle)\n      },\n    })\n  }\n\n  // 确认保存自定义循环\n  const 确认保存循环 = (名称, 加速选项, 延迟选项) => {\n    // 获取各加速下 各网络延迟的循环\n    const 各延迟枚举 = 延迟选项?.length ? 延迟选项 : [0, 1, 2, 3]\n    const 各加速枚举 = 加速选项?.length ? 加速选项 : [0, 1, 2, 3, 4, 5]\n\n    const 保存循环结果: 循环详情[] = []\n\n    const 异常结果: any[] = []\n\n    各加速枚举.forEach((加速) => {\n      const 实际加速值 = 加速等级枚举[加速]\n      各延迟枚举.forEach((延迟) => {\n        // 保存循环数据的时候，把镇机和界破的数据一起保存，生成两套并存的数据，方便后续切换比较\n        const 模拟结果 = simulator({\n          传入加速: Number(实际加速值),\n          传入延迟: Number(延迟),\n          更新展示: false,\n          奇穴: [...奇穴信息],\n        })\n        const 本次日志 = 模拟结果?.最终日志\n        const 循环执行结果 = 模拟结果?.循环执行结果\n        // const 战斗时间 = 本次日志[本次日志.length - 1].日志时间 || 0\n        const 战斗秒 = 模拟结果?.当前时间 / 每秒郭氏帧\n        const 用于计算循环 = getDpsCycle(本次日志)\n        if (循环执行结果 === '成功') {\n          保存循环结果.push({\n            循环加速等级: 加速,\n            循环延迟要求: 延迟,\n            战斗时间: 战斗秒,\n            技能详情: 用于计算循环,\n          })\n        } else {\n          异常结果.push({\n            加速,\n            延迟,\n          })\n        }\n      })\n    })\n\n    if (异常结果?.length) {\n      message.error(\n        `以下条件循环异常，将不会保存该加速的循环。异常循环：${异常结果\n          .map((item) => {\n            return `[加速：${item.加速}，延迟：${item.延迟}]`\n          })\n          .join('、')}`\n      )\n    }\n\n    const 技能序列 = cycle.map((item) => item.技能名称)\n\n    const 新自定义循环 = 自定义循环列表?.some((item) => item?.名称 === 名称)\n      ? 自定义循环列表.map((item) => {\n          return item.名称 === 名称\n            ? {\n                名称,\n                标题: 名称,\n                类型: '自定义',\n                标记: '自定义',\n                循环详情: 保存循环结果,\n                奇穴: 奇穴信息,\n                技能序列,\n              }\n            : item\n        })\n      : (自定义循环列表 || []).concat([\n          {\n            名称,\n            标题: 名称,\n            类型: '自定义',\n            标记: '自定义',\n            循环详情: 保存循环结果,\n            奇穴: 奇穴信息,\n            技能序列,\n          },\n        ])\n\n    dispatch(更新当前自定义循环列表(新自定义循环))\n\n    设置自定义循环保存弹窗(false)\n    message.success('保存成功')\n  }\n\n  useEffect(() => {\n    // redux变动，更新storage信息\n    const 保存信息 = {}\n    ;(自定义循环列表 || []).forEach((item) => {\n      保存信息[item.名称] = {\n        ...item,\n      }\n    })\n    localStorage?.setItem(缓存映射.自定义循环, JSON.stringify(保存信息))\n  }, [自定义循环列表, 奇穴信息])\n\n  const 点击下拉菜单 = (data, index) => {\n    更新添加设置({ 位置: data?.key, 索引: index })\n    更新添加技能弹窗显示(true)\n  }\n\n  return (\n    <>\n      <Button\n        danger\n        size='small'\n        disabled={disabled}\n        onClick={() => {\n          setBasicModalOpen(true)\n          打开循环模拟器 && 打开循环模拟器()\n        }}\n      >\n        循环模拟\n      </Button>\n      <Modal\n        className='cycle-simulator-modal simulator-shxj'\n        maskClosable={false}\n        width={'100%'}\n        title={\n          <CycleModalHeader\n            cycle={cycle}\n            大橙武模拟={大橙武模拟}\n            设置自定义循环保存弹窗={设置自定义循环保存弹窗}\n            清空循环={() => setCycle([])}\n            快速导入循环={(循环) => setCycle(循环)}\n            更新奇穴信息={更新奇穴信息}\n            更新奇穴弹窗展示={更新奇穴弹窗展示}\n            加速等级={加速等级}\n            更新加速等级={更新加速等级}\n            起手回能帧={起手回能帧}\n            更新起手回能帧={更新起手回能帧}\n            网络延迟={网络延迟}\n            更新网络延迟={更新网络延迟}\n            模拟信息={模拟信息}\n            起手能量={起手能量}\n            更新起手能量={更新起手能量}\n          />\n        }\n        centered\n        footer={null}\n        open={basicModalOpen}\n        onCancel={() => setBasicModalOpen(false)}\n        destroyOnClose\n      >\n        <div className={'cycle-simulator-setting'}>\n          {/* 角色状态栏 */}\n          <StatusBar\n            模拟信息={模拟信息}\n            完整循环={处理循环结果对象?.完整循环 as any}\n            日志信息={logData}\n            模拟DPS结果={模拟DPS结果}\n            奇穴信息={奇穴信息}\n          />\n          {/* // 循环展示模块 */}\n          <div className={'cycle-simulator-setting-res'}>\n            {处理循环结果对象?.显示循环?.length ? (\n              (处理循环结果对象?.显示循环 || []).map((轮次, index) => {\n                return 轮次?.length ? (\n                  <div className={`cycle-simulator-setting-turn cycle-turn-drag`} key={`${index}`}>\n                    <ReactSortable\n                      list={轮次.map((i) =>\n                        Object.assign(i, { id: `${i?.技能名称}_${index}_${i?.index}` })\n                      )}\n                      setList={(e) => {\n                        拖拽更新循环(e, '轮次内')\n                      }}\n                      className='cycle-simulator-setting-turn-drop'\n                      animation={150}\n                      draggable={'.cycle-simulator-setting-skill-drag'}\n                    >\n                      {(轮次 || []).map((item) => {\n                        return (\n                          <CycleSkillItem\n                            技能={item}\n                            删除循环技能={删除循环技能}\n                            key={`${item?.技能名称}_${index}_${item?.index}`}\n                            模拟信息={模拟信息}\n                            buff覆盖数据={buff覆盖数据}\n                            buff覆盖索引={buff覆盖索引}\n                            更新buff覆盖数据={(e, 索引) => {\n                              更新buff覆盖数据(e)\n                              更新buff覆盖索引(索引)\n                            }}\n                            点击下拉菜单={(e) => 点击下拉菜单(e, item?.index)}\n                          />\n                        )\n                      })}\n                      <div className={'cycle-turn-operate'}>\n                        <Tooltip title='删除本轮后全部循环'>\n                          <AlertOutlined\n                            className={'cycle-turn-operate-btn'}\n                            style={{ color: '#FF0000' }}\n                            onClick={() => 删除本轮后全部循环(轮次)}\n                          />\n                        </Tooltip>\n                        <Tooltip title='复制并添加到最后'>\n                          <CopyOutlined\n                            className={'cycle-turn-operate-btn'}\n                            onClick={() => 复制本轮至最后(轮次)}\n                          />\n                        </Tooltip>\n                        <Tooltip title='删除此轮'>\n                          <DeleteOutlined\n                            className={'cycle-turn-operate-btn'}\n                            onClick={() => 删除本轮次(轮次)}\n                          />\n                        </Tooltip>\n                      </div>\n                    </ReactSortable>\n                  </div>\n                ) : (\n                  <div />\n                )\n              })\n            ) : (\n              <p className={'cycle-simulator-setting-tip'}>请点击下方技能按钮生成模拟技能序列</p>\n            )}\n          </div>\n        </div>\n        {/* 添加循环按钮组 */}\n        <AddCycleSkillBtns\n          新增循环技能={新增循环技能}\n          批量新增循环={批量新增循环}\n          处理循环结果对象={处理循环结果对象}\n          模拟信息={模拟信息}\n          大橙武模拟={大橙武模拟}\n          奇穴信息={奇穴信息}\n        />\n        {/* 保存自定义循环弹窗 */}\n        <SaveCustomCycleModal\n          自定义循环保存弹窗={自定义循环保存弹窗}\n          设置自定义循环保存弹窗={设置自定义循环保存弹窗}\n          保存自定义循环={确认保存循环}\n        />\n        {/* 循环自定义奇穴弹窗 */}\n        <QixueSetModal\n          奇穴信息={奇穴信息}\n          更新奇穴信息={更新奇穴信息}\n          奇穴弹窗展示={奇穴弹窗展示}\n          更新奇穴弹窗展示={更新奇穴弹窗展示}\n        />\n        {/* 添加技能弹窗 */}\n        <AddCycleSkillModal\n          向循环内插入技能={向循环内插入技能}\n          处理循环结果对象={处理循环结果对象}\n          模拟信息={模拟信息}\n          大橙武模拟={大橙武模拟}\n          奇穴信息={奇穴信息}\n          添加设置={添加设置}\n          添加技能弹窗显示={添加技能弹窗显示}\n          关闭弹窗={() => {\n            更新添加技能弹窗显示(false)\n            更新添加设置({ 位置: '', 索引: 0 })\n          }}\n        />\n      </Modal>\n    </>\n  )\n}\n\nexport default React.memo(CycleSimulator)\n"],"names":["技能GCD组","基础GCD帧","技能名称","技能释放后添加GCD","技能类型","图标","技能原始名称","技能CD","每秒郭氏帧","最大充能层数","充能层数","显示类型","依赖奇穴名","说明","日志类型数组","原始Buff数据","经脉循行","名称","最大层数","最大持续时间","备注","玉枕","茫缈","神门","绝脉","封府断脉链","封府截阳链","骤风","出岫","朔风扬尘","扬尘","扬尘增伤","横驱风靡","橙武","getDpsCycle","data","res","i","当前数据","本次造成伤害次数","其他数据","伤害次数","本次技能等级","技能等级","日志类型","当前日志对应技能枚举","获取当前日志对应技能枚举","日志","key","增益列表","技能增益列表","length","buff列表","不存在相同增益","map","item","增益名称","split","some","a","includes","增益技能数","concat","join","技能数量","Object","keys","v","Math","round","d","Skill_Cycle_Map","判断有无橙武循环数据","循环","大橙武启用","filter","技能序列","根据奇穴修改buff数据","奇穴","forEach","val","obj","最大作用次数","ERROR_ACTION","充能不足","信息","BUFF错误","根据加速等级获取虚拟加速值","加速等级","转化buff和增益名称","技能统一类","模拟循环","本次释放记录","this","伤害名称","额外增益列表","触发伤害时间","undefined","校验奇穴是否存在","当前自身buff列表","当前层数","push","技能造成伤害","技能依赖自身buff列表","技能依赖目标buff列表","重要buff列表","buff","当前目标buff列表","buff名称","当前时间","buff对象","Buff和Dot数据","buff开始时间","buff结束时间","断脉","回复能量","触发伤害行为","卸除buff","对象","卸除层数","添加buff","技能类实例集合","引窍","减少调息时间","截阳","判断逆脉","判断扬尘","保存释放记录","获取当前重要buff列表","技能数据","循环模拟技能基础数据","有CD技能通用类","技能运行数据","待充能时间点","新数据","技能基础数据","find","初始化技能运行数据","减少帧数","新待充能时间点","更新技能运行数据","释放重置","当前绝脉层数","添加战斗日志","存在CWBuff","当前任脉值","角色状态信息","能量信息","任脉","当前督脉值","督脉","伤害等级","ceil","max","min","经脉循行状态校验","引爆绝脉次数","floor","神封校验结果","神封校验","消耗当前一半能量","神封触发","经脉循行卸除校验","破穴","一阳来复","雾刃飞光","骤风令","循环加速值","原始CD","加速后帧数","获取实际帧数","创建NPC骤风持续造成伤害","待生效事件","按数字生成数组","次数","事件名称","事件时间","添加待生效事件队列","劈风令","索引","前一个技能","测试循环","后一个技能","GCD","GCD组","当前技能","技能实例","检查GCD","抟风令","纷飙触发减少CD","抟风令断","骤风劈风","可以释放","异常信息","总作用帧","计划下次充能时间点","剩余总时间","减少时间","减少后充能节点","读条开始时间","重置调息时间","处理骤风令","读条抟风令","开始时间","待生效事件结算","骤风数据","实际总Buff帧数","刷新时间","实际生效跳数","续费NPC骤风持续造成伤害","续费次数","删除待生效事件队列","待生效事件队列","事件备注","雪重花满","朔风扬尘一","新增层数","朔风扬尘二","当前扬尘层数","当前扬尘伤害等级","风流云散","造成buff数据","获取施加重要buff信息","当前身上有经脉循行","添加经脉循行每秒回复事件","初始时间","层数","获得经脉循行","触发橙武","大橙武模拟","换行","技能系数","获取当前数据","循环主类","props","循环执行结果","循环异常信息","异常索引","网络延迟","开始释放上一个技能的时间","战斗日志","技能释放记录","公共","自身","风矢上次造成伤害时间","起手回能帧","普通攻击日志","所有释放技能数组","找出所有读条技能的区间","index","是否读条","日志时间","结束时间","战斗最大时间","战斗日志副本","普通攻击时间列表","获取加速等级","加速值","判断奇穴","技能","技能原始CD","根据奇穴修改技能数据","起手能量","初始化技能实例类","重置循环执行结果","覆盖层数","只添加日志","新buff对象","buff刷新时间","待判断奇穴","time","跳过全部GCD时间","DOT结算与更新","清空已经消失的buff","新GCD组","校验GCD组","实例","运行数据","等待CD时间","可以释放时间","可释放时间","等待CD","技能预估释放时间","时间差","增加时间","本次释放充能","log","rest","来源","造成时间","隐藏日志","当前技能数据","有关的buff列表","当前增益数据","增益消失时间","总增益列表","技能释放前检查GCD统一方法","技能释放前检查运行数据","是否是倒读条技能","是否为倒读条技能","是否为额外免费劈风令","延迟等待","技能计划释放时间","待更新GCD组","技能释放后更新运行数据","是否为读条技能","增加技能GCD","增加技能CD","计划释放时间","开始读条时间","开始释放时间","释放时标鹄层数","技能释放记录结果","获取技能释放记录结果","实际释放时间","buff应该消失时间","消失层数","自然消失失去层数","清空buff调用函数","事件结算","对所有有CD技能检查和充能","体态校验结果","能量校验","释放判断结果","释放","校验结果","结算判断时间","轮训执行事件","当前事件","读条伤害","经脉循行每秒回复","骤风造成伤害","横驱风靡造成伤害","shift","传入数据","事件覆盖","新待生效事件队列","sort","b","数值","类型","经脉循行添加校验","初始化经脉循行","本轮模拟开始前","释放前初始化","技能释放前","读条时间","获取读条时间","读条","技能GCD和CD处理","结束读条时间","技能成功开始释放","释放校验结果","技能释放校验","是否为最后一个技能","技能释放异常","命中","造成伤害","释放后","技能释放后","本轮模拟结束后","新日志","各技能当前运行状态","DOT运行数据","模拟实例","模拟","日志排序","当前各技能运行状态","获取当前各技能的运行状态","当前DOT运行状态","获取各DOT的运行状态","最终日志","当前GCD组","cycle","设置自定义循环保存弹窗","清空循环","快速导入循环","更新奇穴弹窗展示","更新奇穴信息","更新起手回能帧","更新加速等级","更新起手能量","更新网络延迟","模拟信息","自定义循环","useAppSelector","state","自定义循环列表","快捷添加循环","数据源","快速导入默认循环","当前循环数据","技能序列信息","className","content","href","target","rel","title","placement","size","value","style","width","showSearch","popupMatchSelectWidth","filterOption","input","option","toString","onChange","e","options","Array","from","label","延迟设定","overlay","onClick","margin","navigator","clipboard","readText","then","clipboardData","message","danger","type","disabled","percent","format","DOT列表","奇穴信息","当前时间点","当前buff列表","最终显示buff列表","useMemo","当前Dot列表","原始数据","待生效数据","wrap","剩余时间","剩余时间秒","toFixed","src","最后一跳","生效时间","open","onCancel","logData","columns","dataIndex","filters","text","onFilter","record","indexOf","render","_","row","centered","footer","dataSource","pagination","pageSize","showTotal","total","dpsList","引窍数组","绝脉数组","获取总倍率数组","引窍总倍率","总倍率","引窍统计数组","统计数组","绝脉总倍率","绝脉统计数组","总伤","计算结果技能列表","visible","onClose","数组","倍率","统计完整数据","本次倍率","获取对应实际倍率","reduce","acc","curr","过滤的buff列表","总战斗用时","useState","chartData","setChartData","limitRef","useRef","覆盖率","设置覆盖率","useEffect","setTimeout","initChart","current","chart","Chart","container","autoFit","renderer","padding","tooltip","crosshairs","getDataSource","source","tickCount","axis","textAlign","fontSize","coordinate","transpose","interval","position","color","offset","Buff枚举","logName","buffName","currentTime","总持续时间","获取Buff覆盖率","range","格式化buff覆盖数组","id","日志信息","模拟DPS结果","buffCountModalOpen","setBuffCountModalOpen","logModalOpen","setLogModalOpen","countModal","setCountModal","showIcon","秒伤","秒伤计算时间","PieChartOutlined","CalendarOutlined","AlignLeftOutlined","删除循环技能","buff覆盖数据","buff覆盖索引","更新buff覆盖数据","点击下拉菜单","判断开始释放时间","技能索引","技能释放时间","间隔CD","剩余秒","是否异常","当前异常","技能释放结果","当前是否需要高亮展示在buff覆盖中","cls","classNames","下拉菜单","count","menu","items","trigger","onMouseEnter","onMouseLeave","实际伤害技能","CloseCircleFilled","释放等待CD","计算可以释放时技能CD","技能当前层数","计算技能当前层数","禁用信息","是否禁用","异常描述","角标数字","技能显示信息","技能运行状态","下次预估释放时间","快捷添加数据","新增循环技能","批量新增循环","处理循环结果对象","创建循环不可选","完整循环","依赖名称","gutter","span","数据","技能原始数据","批量新增循环技能","计算循环","modal","App","自定义循环保存弹窗","保存自定义循环","自定义循环类型","设置自定义循环类型","自定义循环名称输入","设置自定义循环名称输入","覆盖循环名","设置覆盖循环名","加速选项","设置加速选项","延迟选项","设置延迟选项","dispatch","useAppDispatch","全部循环","删除循环","更新当前自定义循环列表","okButtonProps","onOk","destroyOnClose","activeKey","tab","optionLabelProp","placeholder","stopPropagation","preventDefault","confirm","okText","删除循环前提示","rules","validator","callback","奇穴数据","当前奇穴信息","奇穴弹窗展示","Form","form","handleChangeQixue","validateFields","values","newArray","setFieldsValue","height","mask","重","name","dropdownMatchSelectWidth","showArrow","popupClassName","奇穴列表","奇穴名称","奇穴图片","奇穴描述","向循环内插入技能","添加设置","添加技能弹窗显示","关闭弹窗","位置","缓存映射","加速等级枚举","CycleSimulator","打开循环模拟器","setLogData","更新模拟DPS结果","更新模拟信息","basicModalOpen","setBasicModalOpen","setCycle","外部加速值","装备信息","装备基础属性","外部延迟","装备增益","大橙武特效","reduxQixuedata","更新buff覆盖索引","更新添加技能弹窗显示","更新添加设置","simulator","传入加速","传入延迟","更新展示","处理后自身buff","处理后目标buff","处理后角色状态信息","计算dps","获取用于计算的技能组","秒伤计算","更新循环技能列表","更新计算时间","更新奇穴数据","是否存在换行技能","找到当前技能释放记录","显示循环","newCycle","splice","保存信息","localStorage","setItem","JSON","stringify","maskClosable","轮次","ReactSortable","list","assign","setList","newList","minIndex","Infinity","maxIndex","Number","NEGATIVE_INFINITY","拖拽更新循环","animation","draggable","AlertOutlined","删除本轮后全部循环","CopyOutlined","复制本轮至最后","DeleteOutlined","删除本轮次","batchItem","各延迟枚举","各加速枚举","保存循环结果","异常结果","加速","实际加速值","延迟","模拟结果","本次日志","战斗秒","用于计算循环","循环加速等级","循环延迟要求","战斗时间","技能详情","新自定义循环","标题","标记","循环详情","插入位置","插入索引","addCycle","slice","React"],"sourceRoot":""}