{"version":3,"file":"static/js/718.9b7d714d.chunk.js","mappings":"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,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,WC7YuB,CACzB5W,eAAI,qBACJuP,eAAI,CACF,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBAEFqH,2BAAM,CACJ,SACA,qBACA,qBACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,qBACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,qBACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,qBACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,WC9N0B,CAC5B5W,eAAI,6BACJuP,eAAI,CACF,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBAEFqH,2BAAM,CACJ,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,2BACA,SACA,SACA,SACA,2BACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,2BACA,SACA,SACA,SACA,2BACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,2BACA,SACA,SACA,SACA,2BACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,2BACA,SACA,SACA,SACA,2BACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,2BACA,SACA,SACA,SACA,2BACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,2BACA,SACA,SACA,SACA,SACA,2BACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,2BACA,SACA,SACA,SACA,SACA,2BACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,2BACA,SACA,SACA,SACA,2BACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,WC3e0B,CAC5B5W,eAAI,6BACJuP,eAAI,CACF,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBAEFqH,2BAAM,CACJ,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,2BACA,SACA,SACA,SACA,2BACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,2BACA,SACA,SACA,SACA,2BACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,2BACA,SACA,SACA,SACA,2BACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,2BACA,SACA,SACA,SACA,2BACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,2BACA,SACA,SACA,SACA,2BACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,2BACA,SACA,SACA,SACA,2BACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,Y,UC5TJ,OA9IA,SAA0BzH,GACxB,IACE0H,EAaE1H,EAbF0H,MACAC,EAYE3H,EAZF2H,mEACAC,EAWE5H,EAXF4H,yBACAzG,EAUEnB,EAVFmB,yBACA0G,EASE7H,EATF6H,qCACAC,EAQE9H,EARF8H,qCACAC,EAOE/H,EAPF+H,iDACAC,EAMEhI,EANFgI,qCACApJ,EAKEoB,EALFpB,yBACAqJ,EAIEjI,EAJFiI,qCACAC,EAGElI,EAHFkI,yBACA7H,EAEEL,EAFFK,yBACA8H,EACEnI,EADFmI,qCAGIC,GAAQC,EAAAA,EAAAA,IAAe,SAACC,GAAD,oBAAWA,QAAX,IAAWA,GAAX,UAAWA,EAAOlW,YAAlB,aAAW,EAAamW,0CAAxB,IAEvBC,EAAS,SAAC3X,GAAmB,IAAf0W,EAAc,uDAAT,eACjBkB,EAAa,iBAAPlB,EAAcmB,GAAWN,EAE/BO,EAAM,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAK/N,MAAK,SAACjH,GAAD,OAAUA,EAAK5C,eAAOA,CAAtB,IAEnB+X,IAAgB,OAAND,QAAM,IAANA,OAAA,EAAAA,EAAQlB,2BAAQ,IAC7BjU,KAAI,SAACC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","sources":["功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/constant/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/constant/skill.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/utils.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/simulator/utils.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/simulator/通用类/技能统一类.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/simulator/通用类/有CD技能通用类.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/simulator/技能类/决云势/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/simulator/技能类/行云势/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/simulator/技能类/停云势/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/simulator/技能类/留客雨/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/simulator/技能类/断云势/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/simulator/技能类/横云断浪/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/simulator/技能类/沧浪三叠/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/simulator/技能类/孤锋破浪/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/simulator/技能类/灭影追风/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/simulator/技能类/游风飘踪/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/simulator/技能类/吃影子/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/simulator/技能类/触发橙武/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/simulator/技能类/换行/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/simulator/技能类/点掉橙武/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/simulator/通用类/通用DOT类.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/simulator/DOT类/流血/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/simulator/DOT类/截辕/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/simulator/main.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/simulator/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/constant/快速导入默认循环.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/constant/快速导入默认循环/启用循环/新六破.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/constant/快速导入默认循环/启用循环/无影刀.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/constant/快速导入默认循环/启用循环/橙武_循环1.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/constant/快速导入默认循环/启用循环/橙武_循环2.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/CycleModalHeader/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/StatusBar/titai/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/StatusBar/ruiyi/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/StatusBar/buff/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/StatusBar/dpsRes/components/BattleLogModal.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/StatusBar/dpsRes/components/SkillCountModal.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/StatusBar/dpsRes/components/BuffCountModal/util.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/StatusBar/dpsRes/components/BuffCountModal/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/StatusBar/dpsRes/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/StatusBar/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/CycleSkillItem/BuffItem.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/CycleSkillItem/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/AddCycleSkillBtns/AddCycleSkillBtn.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/AddCycleSkillBtns/快捷添加.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/AddCycleSkillBtns/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/SaveCustomCycleModal/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/QixueSetModal/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/AddCycleSkillModal/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/utils.ts"],"sourcesContent":["// BUFF持续最大时间,视为永久\nexport const BUFF持续最大时间 = 99999999999\n\nexport const 基础GCD帧 = 24\n","import { Buff枚举, 循环基础技能数据类型, 日志类型 } from '../simulator/type'\nimport { 基础GCD帧 } from '.'\nimport { 每秒郭氏帧 } from '@/数据/常量'\n\n// 技能图标引入\nimport cang from '../assets/Skill/cang.png'\n// import chifeng from '../assets/Skill/chifeng.png'\nimport duan from '../assets/Skill/duan.png'\nimport gu from '../assets/Skill/gu.png'\nimport heng from '../assets/Skill/heng.png'\nimport jue from '../assets/Skill/jue.png'\nimport liu from '../assets/Skill/liu.png'\nimport mie from '../assets/Skill/mie.png'\nimport ting from '../assets/Skill/ting.png'\nimport xing from '../assets/Skill/xing.png'\nimport you from '../assets/Skill/you.png'\nimport cw from '../assets/Skill/cw.png'\nimport cw_quxiao from '../assets/Skill/cw_quxiao.png'\n\n// Buff图标引入\n\nimport shipo from '../assets/Buff/shipo.png'\nimport yuji from '../assets/Buff/yuji.png'\nimport qiangfeng from '../assets/Buff/qiangfeng.png'\nimport lianfeng from '../assets/Buff/lianfeng.png'\nimport mieying from '../assets/Buff/mieying.png'\nimport pozhan from '../assets/Buff/pozhan.png'\nimport changsuo from '../assets/Buff/changsuo.png'\nimport xinglian from '../assets/Buff/xinglian.png'\nimport canglian from '../assets/Buff/canglian.png'\nimport shenxing from '../assets/Buff/shenxing.png'\nimport liulan from '../assets/Buff/liulan.png'\nimport liuxue from '../assets/Buff/liuxue.png'\nimport liangen from '../assets/Buff/liangen.png'\nimport jieyuan from '../assets/Buff/jieyuan.png'\n\nconst 循环模拟技能基础数据: 循环基础技能数据类型[] = [\n  {\n    技能名称: '行',\n    技能释放后添加GCD: 基础GCD帧,\n    回复锐意: 5,\n    造成伤害次数: 1,\n    技能CD: 0,\n    技能GCD组: '单刀',\n    技能类型: '单刀',\n    图标: xing,\n    技能原始名称: '行云势',\n  },\n  {\n    技能名称: '停',\n    技能释放后添加GCD: 基础GCD帧,\n    回复锐意: 10,\n    造成伤害次数: 1,\n    技能CD: 每秒郭氏帧 * 12,\n    技能GCD组: '单刀',\n    技能类型: '单刀',\n    图标: ting,\n    技能原始名称: '停云势',\n  },\n  {\n    技能名称: '决',\n    技能释放后添加GCD: 基础GCD帧,\n    回复锐意: 25,\n    技能CD: 每秒郭氏帧 * 20,\n    造成伤害次数: 1,\n    技能GCD组: '单刀',\n    技能类型: '单刀',\n    图标: jue,\n    技能原始名称: '决云势',\n  },\n  {\n    技能名称: '留',\n    技能释放后添加GCD: 基础GCD帧,\n    回复锐意: 0,\n    造成伤害次数: 1,\n    技能GCD组: '自身',\n    技能类型: '单刀',\n    技能CD: 每秒郭氏帧 * 6,\n    图标: liu,\n    技能原始名称: '留客雨',\n  },\n  {\n    技能名称: '断',\n    技能释放后添加GCD: 基础GCD帧,\n    造成伤害次数: 1,\n    技能GCD组: '单刀',\n    技能类型: '单刀',\n    图标: duan,\n    技能原始名称: '断云势',\n  },\n  {\n    技能名称: '沧',\n    技能释放后添加GCD: 基础GCD帧,\n    造成伤害次数: 1,\n    技能GCD组: '双刀',\n    技能类型: '双刀',\n    图标: cang,\n    技能原始名称: '沧浪三叠',\n  },\n  {\n    技能名称: '横',\n    技能释放后添加GCD: 基础GCD帧,\n    技能CD: 每秒郭氏帧 * 12,\n    造成伤害次数: 1,\n    技能GCD组: '双刀',\n    技能类型: '双刀',\n    图标: heng,\n    技能原始名称: '横云断浪',\n  },\n  {\n    技能名称: '孤',\n    技能释放后添加GCD: 基础GCD帧,\n    造成伤害次数: 1,\n    技能GCD组: '双刀',\n    技能类型: '双刀',\n    图标: gu,\n    技能原始名称: '孤锋破浪',\n  },\n  {\n    技能名称: '灭',\n    技能释放后添加GCD: 0,\n    造成伤害次数: 0,\n    技能CD: 每秒郭氏帧 * 20,\n    技能GCD组: '自身',\n    技能类型: '其他',\n    图标: mie,\n    技能原始名称: '灭影追风',\n  },\n  {\n    技能名称: '吃影子',\n    技能释放后添加GCD: 0,\n    造成伤害次数: 0,\n    技能GCD组: '自身',\n    技能类型: '其他',\n    图标: shenxing,\n  },\n  {\n    技能名称: '游',\n    技能释放后添加GCD: 基础GCD帧,\n    造成伤害次数: 0,\n    // 秘籍减15秒\n    技能CD: 每秒郭氏帧 * (50 - 15),\n    最大充能层数: 2,\n    技能GCD组: '自身',\n    技能类型: '其他',\n    图标: you,\n    技能原始名称: '游风飘踪',\n  },\n  {\n    技能名称: '触发橙武',\n    技能释放后添加GCD: 0,\n    造成伤害次数: 0,\n    技能CD: 每秒郭氏帧 * 30,\n    技能GCD组: '自身',\n    技能类型: '其他',\n    显示类型: '大橙武模拟',\n    图标: cw,\n  },\n  {\n    技能名称: '点掉橙武',\n    技能释放后添加GCD: 0,\n    造成伤害次数: 0,\n    技能CD: 0,\n    技能GCD组: '自身',\n    技能类型: '其他',\n    显示类型: '大橙武模拟',\n    图标: cw_quxiao,\n  },\n  {\n    技能名称: '换行',\n    技能释放后添加GCD: 0,\n    技能CD: 0,\n    技能GCD组: '自身',\n    造成伤害次数: 0,\n    技能类型: '其他',\n    图标: 'https://icon.jx3box.com/icon/17632.png',\n    说明: '插入换行将只以”换行“作为展示换行。 若无\"换行\"则默认以”断云势“或点了威升的”灭影追风”作为展示换行.',\n  },\n  // {\n  //   技能名称: '呆',\n  //   技能释放后添加GCD: 0,\n  //   造成伤害次数: 0,\n  //   技能类型: '其他',\n  // },\n]\n\nexport default 循环模拟技能基础数据\n\nexport const 日志类型数组: 日志类型[] = [\n  '释放技能',\n  '自身buff变动',\n  '目标buff变动',\n  '造成伤害',\n  '技能释放结果',\n  '等CD',\n]\n\nexport const 技能GCD组 = {\n  流云势法: ['行', '停', '决', '断'],\n  破浪三式: ['横', '沧', '孤'],\n  自身: ['留', '灭', '驰', '游'],\n}\n\n// Map预备数据\nexport const 原始Buff数据: Buff枚举 = {\n  // Buff\n  识破: { 名称: '识破', 最大层数: 1, 最大持续时间: 每秒郭氏帧 * 30, 图标: shipo },\n  雨积: { 名称: '雨积', 最大层数: 1, 最大持续时间: 每秒郭氏帧 * 10, 图标: yuji },\n  戗风: { 名称: '戗风', 最大层数: 1, 最大持续时间: 每秒郭氏帧 * 8, 图标: qiangfeng },\n  潋风: { 名称: '潋风', 最大层数: 1, 最大持续时间: 每秒郭氏帧 * 5, 图标: lianfeng },\n  灭影追风: { 名称: '灭影追风', 最大层数: 1, 最大持续时间: 每秒郭氏帧 * 11, 图标: mieying },\n  破绽: {\n    名称: '破绽',\n    最大层数: 4,\n    最大持续时间: 每秒郭氏帧 * 60,\n    图标: pozhan,\n    自然消失失去层数: 1,\n  },\n  长溯: { 名称: '长溯', 最大层数: 3, 最大持续时间: 每秒郭氏帧 * 30, 图标: changsuo },\n  行链: { 名称: '行链', 最大层数: 2, 最大持续时间: 每秒郭氏帧 * 10, 图标: xinglian },\n  沧链: { 名称: '沧链', 最大层数: 2, 最大持续时间: 每秒郭氏帧 * 3, 图标: canglian },\n  连亘: { 名称: '连亘', 最大层数: 2, 最大持续时间: 每秒郭氏帧 * 10, 图标: liangen },\n  身形: { 名称: '身形', 最大层数: 3, 最大持续时间: 每秒郭氏帧 * 15, 图标: shenxing },\n  流岚: {\n    名称: '流岚',\n    最大层数: 3,\n    最大持续时间: 每秒郭氏帧 * 20,\n    图标: liulan,\n    自然消失失去层数: 1,\n  },\n  橙武: { 名称: '橙武', 最大层数: 1, 最大持续时间: 每秒郭氏帧 * 6, 图标: cw },\n  橙武孤锋: { 名称: '橙武孤锋', 最大层数: 1, 最大持续时间: 每秒郭氏帧 * 6, 图标: cw },\n  威声: {\n    名称: '威声',\n    最大层数: 1,\n    最大持续时间: 每秒郭氏帧 * 2,\n    图标: 'https://icon.jx3box.com/icon/17762.png',\n  },\n  // DOT\n  流血: {\n    名称: '流血',\n    最大层数: 4,\n    最大作用次数: 3,\n    最大持续时间: 每秒郭氏帧 * 6,\n    伤害频率: 32,\n    图标: liuxue,\n  },\n  截辕: {\n    名称: '截辕',\n    最大层数: 1,\n    最大作用次数: 6,\n    最大持续时间: 每秒郭氏帧 * 12,\n    伤害频率: 32,\n    图标: jieyuan,\n  },\n}\n","import { 每秒郭氏帧 } from '@/数据/常量'\nimport { 循环日志数据类型 } from './simulator/type'\n// import { 属性系数 } from '@/数据/常量'\nimport { 循环技能详情, 技能增益列表数据 } from '@/@types/循环'\n\nexport const getDpsCycle = (data: 循环日志数据类型[], 战斗时间): 循环技能详情[] => {\n  const res: { [key: string]: 循环技能详情 } = {}\n  for (let i = 0; i < data.length; i++) {\n    const 当前数据 = data[i]\n    const 本次造成伤害次数 = 当前数据?.其他数据?.伤害次数 || 1\n    const 本次技能等级 = 当前数据?.其他数据?.技能等级 || 1\n    if (当前数据?.日志类型 === '造成伤害') {\n      const 当前日志对应技能枚举 = Skill_Cycle_Map[当前数据?.日志] || 当前数据?.日志\n      const key = `${当前日志对应技能枚举}_${本次技能等级}`\n      let 增益列表 = res[key]?.技能增益列表 || []\n      if (!增益列表?.length) {\n        if (当前数据?.buff列表?.length) {\n          增益列表 = 增益列表.concat([\n            {\n              增益名称: 当前数据?.buff列表?.join(','),\n              增益技能数: 本次造成伤害次数,\n            },\n          ])\n        }\n      } else {\n        if (当前数据?.buff列表?.length) {\n          let 不存在相同增益 = true\n          增益列表 = 增益列表.map((item) => {\n            const 技能增益列表 = item?.增益名称?.split(',') || []\n            if (\n              技能增益列表?.length === 当前数据?.buff列表?.length &&\n              !技能增益列表?.some((a) => !当前数据?.buff列表?.includes(a))\n            ) {\n              不存在相同增益 = false\n              return {\n                增益名称: item.增益名称,\n                增益技能数: item.增益技能数 + 本次造成伤害次数,\n              }\n            } else {\n              return {\n                ...item,\n              }\n            }\n          })\n          if (不存在相同增益) {\n            增益列表 = 增益列表.concat({\n              增益名称: 当前数据?.buff列表?.join(','),\n              增益技能数: 本次造成伤害次数,\n            })\n          }\n        }\n      }\n\n      res[key] = {\n        ...res[key],\n        技能名称: 当前日志对应技能枚举,\n        技能等级: 本次技能等级,\n        技能数量: (res[key]?.技能数量 || 0) + 本次造成伤害次数,\n        技能增益列表: [...增益列表],\n      }\n    }\n  }\n\n  let 结果循环 = Object.keys(res).map((item) => {\n    const v = res[item]\n    return {\n      ...v,\n      技能数量: Math.round(v.技能数量),\n      技能增益列表: v.技能增益列表?.map((d) => {\n        return {\n          ...d,\n          增益技能数: Math.round(d.增益技能数),\n        }\n      }),\n    }\n  })\n\n  // 根据战斗时间加入触石雨和对应的避石击虚数量\n  if (战斗时间) {\n    const 触石雨CD = 每秒郭氏帧 * (25 + 5) // 30秒CD，按只有单刀期间打计算\n    const 触石雨数量 = Math.round(战斗时间 / 触石雨CD)\n    结果循环.push({\n      技能名称: '触石雨',\n      技能数量: 触石雨数量,\n      技能增益列表: [{ 增益名称: '灭影追风,流岚', 增益技能数: 触石雨数量 }],\n    })\n\n    结果循环 = 结果循环.map((item) => {\n      if (item.技能名称 === '避实击虚') {\n        return {\n          ...item,\n          技能数量: item.技能数量 + 触石雨数量,\n          技能增益列表: (item.技能增益列表 || []).map((a) => {\n            return a?.增益名称 === '流岚'\n              ? {\n                  ...a,\n                  增益技能数: a.增益技能数 + 触石雨数量,\n                }\n              : a\n          }),\n        }\n      } else {\n        return item\n      }\n    })\n  }\n\n  return 结果循环\n}\n\nexport const getSingleSkillDpsCycle = (当前数据: 循环日志数据类型): 循环技能详情 => {\n  const 获取当前日志对应技能枚举 = Skill_Cycle_Map[当前数据?.日志] || 当前数据?.日志\n  const 伤害次数 = 当前数据?.其他数据?.伤害次数 || 1\n  let 增益列表: 技能增益列表数据[] = []\n  if (!增益列表?.length) {\n    if (当前数据?.buff列表) {\n      增益列表 = 增益列表.concat({\n        增益名称: 当前数据?.buff列表?.join(','),\n        增益技能数: 伤害次数,\n      })\n    }\n  } else {\n    if (当前数据?.buff列表?.length) {\n      let 不存在相同增益 = true\n      增益列表 = 增益列表.map((item) => {\n        const 技能增益列表 = item?.增益名称?.split(',') || []\n        if (\n          技能增益列表?.length === 当前数据?.buff列表?.length &&\n          !技能增益列表?.some((a) => !当前数据?.buff列表?.includes(a))\n        ) {\n          不存在相同增益 = false\n          return {\n            增益名称: item.增益名称,\n            增益技能数: item.增益技能数 + 伤害次数,\n          }\n        } else {\n          return {\n            ...item,\n          }\n        }\n      })\n      if (不存在相同增益) {\n        增益列表 = 增益列表.concat({\n          增益名称: 当前数据?.buff列表?.join(','),\n          增益技能数: 伤害次数,\n        })\n      }\n    }\n  }\n\n  return {\n    技能名称: 获取当前日志对应技能枚举,\n    技能数量: 伤害次数,\n    技能增益列表: [...增益列表],\n  }\n}\n\nexport const 判断上一个同名技能 = (当前技能, 循环) => {\n  // 上一个同名技能\n  const 循环副本 = [...循环]\n  循环副本.reverse()\n  let 剩余CD = 0\n\n  const 上一个同名技能 = 循环副本?.find((item) => {\n    if (item?.实际技能) {\n      // 用下一个技能可以释放时间判断不是当前技能\n      return item?.实际技能 === 当前技能?.实际技能 && item?.下一个技能可以释放时间\n    } else {\n      const 正常技能判定 = item?.技能名称 === 当前技能?.技能名称 && item?.下一个技能可以释放时间\n      // 用下一个技能可以释放时间判断不是当前技能\n      return 正常技能判定\n    }\n  })\n\n  if (上一个同名技能) {\n    const 实际CD = 当前技能?.技能CD\n    const 上一个同名技能释放时间 = (上一个同名技能?.本技能实际释放时间 || 0) + (实际CD || 0)\n    const 下一个技能可以释放时间 = 循环[循环.length - 1]?.下一个技能可以释放时间\n\n    剩余CD =\n      上一个同名技能释放时间 - 下一个技能可以释放时间 > 0\n        ? 上一个同名技能释放时间 - 下一个技能可以释放时间\n        : 0\n  }\n\n  return { 上一个同名技能, 剩余CD }\n}\n\nexport const 获取总用时 = (时间) => {\n  const 用时秒 = Math.round((时间 / 每秒郭氏帧) * 100) / 100\n  return 用时秒\n}\n\nexport const 获取显示秒伤 = (最后一条伤害数据) => {\n  return Math.round((最后一条伤害数据?.造成总伤害 || 0) / (最后一条伤害数据?.日志时间 / 每秒郭氏帧))\n}\n\n// 没表明枚举就直接取原值\nexport const Skill_Cycle_Map = {}\n","import { 每秒郭氏帧 } from '@/数据/常量'\nimport 循环模拟技能基础数据, { 原始Buff数据 } from '../constant/skill'\nimport { 循环基础技能数据类型, DotDTO } from './type'\n\nexport const 根据奇穴修改buff数据 = (奇穴: string[]) => {\n  const res = {}\n  const 判断奇穴 = (val) => {\n    return 奇穴?.includes(val)\n  }\n\n  Object.keys(原始Buff数据).forEach((key) => {\n    const obj = 原始Buff数据[key]\n    switch (key) {\n      case '身形':\n        if (判断奇穴('流岚')) {\n          if (判断奇穴('溃延')) {\n            obj.最大持续时间 = 每秒郭氏帧 * (20 + 6)\n          } else {\n            obj.最大持续时间 = 每秒郭氏帧 * 20\n          }\n        } else {\n          if (判断奇穴('溃延')) {\n            obj.最大持续时间 = 每秒郭氏帧 * (15 + 6)\n          } else {\n            obj.最大持续时间 = 每秒郭氏帧 * 15\n          }\n        }\n        break\n      case '流血':\n        if (判断奇穴('承磊')) {\n          obj.最大层数 = 6\n        } else {\n          obj.最大层数 = 4\n        }\n        if (判断奇穴('涣衍')) {\n          obj.最大持续时间 = 每秒郭氏帧 * (6 + 12)\n          // eslint-disable-next-line @typescript-eslint/no-extra-semi\n          ;(obj as DotDTO).最大作用次数 = 9\n        } else {\n          obj.最大持续时间 = 每秒郭氏帧 * 6\n          ;(obj as DotDTO).最大作用次数 = 3\n        }\n        break\n      case '破绽':\n        if (判断奇穴('承磊')) {\n          obj.最大层数 = 6\n        } else {\n          obj.最大层数 = 4\n        }\n        break\n      default:\n        break\n    }\n    res[key] = obj\n  })\n\n  return res\n}\n\nexport const 根据奇穴修改技能数据 = (奇穴: string[]): 循环基础技能数据类型[] => {\n  const 判断奇穴 = (val) => {\n    return 奇穴?.includes(val)\n  }\n\n  const res: 循环基础技能数据类型[] = 循环模拟技能基础数据.map((技能) => {\n    if (技能?.技能名称 === '横') {\n      return 判断奇穴('敛摄')\n        ? {\n            ...技能,\n            最大充能层数: 2,\n          }\n        : 判断奇穴('涣衍')\n        ? {\n            ...技能,\n            技能CD: 每秒郭氏帧 * (12 - 3),\n          }\n        : 技能\n    } else if (技能?.技能名称 === '游') {\n      return 判断奇穴('流岚')\n        ? {\n            ...技能,\n            技能CD: 每秒郭氏帧 * (50 - 15),\n          }\n        : 技能\n    } else {\n      return 技能\n    }\n  })\n\n  return res\n}\n\nexport const ERROR_ACTION = {\n  锐意不足: {\n    信息: '当前锐意不足，无法释放该技能',\n  },\n  身形不足: {\n    信息: '当前身形不足，无法释放该技能',\n  },\n  体态错误: {\n    信息: '当前体态无法释放该技能',\n  },\n  BUFF错误: {\n    信息: '当前没有对应的BUFF',\n  },\n}\n\nexport const 起手识破BUFF = (Buff和Dot数据) => {\n  return {\n    识破: {\n      ...Buff和Dot数据['识破'],\n      当前层数: 1,\n      刷新时间: 0,\n    },\n  }\n}\n","import 循环主类类型 from '../main'\nimport { 技能释放记录结果 } from '../type'\n\nclass 技能统一类 {\n  模拟循环: Partial<循环主类类型> = {}\n  本次释放记录: 技能释放记录结果 = {}\n\n  constructor(模拟循环) {\n    this.模拟循环 = 模拟循环\n    return\n  }\n\n  释放前初始化() {\n    // 重置释放记录\n    this.本次释放记录 = {}\n  }\n\n  触发回复锐意(锐意值, 来源) {\n    this.模拟循环.增加锐意?.(锐意值, 来源)\n  }\n\n  触发清空锐意(来源) {\n    const 当前锐意 = this.模拟循环.角色状态信息?.锐意 || 0\n    this.模拟循环.减少锐意?.(当前锐意, 来源)\n  }\n\n  触发伤害行为(\n    伤害名称,\n    伤害次数 = 1,\n    额外增益列表: string[] = [],\n    触发伤害时间: number | undefined = undefined,\n    DOT伤害 = false,\n    技能等级 = 1\n  ) {\n    this.模拟循环.技能造成伤害?.(伤害名称, 伤害次数, 额外增益列表, 触发伤害时间, DOT伤害, 技能等级)\n  }\n\n  破浪三式触发鸣锋() {\n    if (this.模拟循环.校验奇穴是否存在?.('鸣锋')) {\n      const 增益层数 = this.模拟循环.当前目标buff列表?.['流血']?.当前层数 || 0\n      if (增益层数) {\n        this.触发伤害行为('鸣锋', 1, [`鸣锋_流血_${增益层数}`])\n      } else {\n        this.触发伤害行为('鸣锋', 1)\n      }\n    }\n  }\n\n  流云势法触发连亘(来源?) {\n    if (this.模拟循环.校验奇穴是否存在?.('连亘')) {\n      const 连亘层数 = this.模拟循环.当前自身buff列表?.['连亘']?.当前层数 || 0\n      if (连亘层数 < 2) {\n        this.模拟循环.添加buff?.({ 名称: '连亘', 对象: '自身', 新增层数: 1 })\n      } else {\n        // 触发连亘回复锐意\n        this.触发回复锐意(20, '连亘')\n        this.模拟循环.卸除buff?.({ 名称: '连亘', 对象: '自身', 卸除层数: 2 })\n      }\n      if (来源 === '断云势') {\n        this.模拟循环.卸除buff?.({ 名称: '连亘', 对象: '自身', 卸除层数: 2 })\n      }\n    }\n  }\n\n  获取技能释放记录结果() {\n    return {\n      ...this.本次释放记录,\n    }\n  }\n\n  获取当前重要buff列表(技能依赖自身buff列表: string[] = [], 技能依赖目标buff列表: string[] = []) {\n    const 重要buff列表: string[] = []\n    技能依赖自身buff列表.forEach((buff) => {\n      if (this.模拟循环.当前自身buff列表?.[buff]?.当前层数) {\n        重要buff列表.push(buff)\n      }\n    })\n    技能依赖目标buff列表.forEach((buff) => {\n      if (this.模拟循环.当前目标buff列表?.[buff]?.当前层数) {\n        重要buff列表.push(buff)\n      }\n    })\n    return 重要buff列表 || []\n  }\n\n  获取施加重要buff信息(buff名称) {\n    const 当前时间 = this.模拟循环.当前时间 || 0\n    const buff对象 = this.模拟循环.Buff和Dot数据?.[buff名称]\n\n    return buff对象\n      ? {\n          buff名称: buff名称,\n          buff开始时间: 当前时间,\n          buff结束时间: 当前时间 + (buff对象?.最大持续时间 || 0),\n        }\n      : null\n  }\n}\n\nexport default 技能统一类\n","import { 技能运行数据类型 } from '../type'\nimport 技能统一类 from './技能统一类'\n\nclass 有CD技能通用类 extends 技能统一类 {\n  技能运行数据: 技能运行数据类型 = {\n    当前层数: -999,\n  }\n\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  初始化技能运行数据(技能) {\n    if (this.技能运行数据.当前层数 === -999) {\n      this.技能运行数据.当前层数 = 技能?.最大充能层数 || 1\n    }\n  }\n\n  更新技能运行数据(新数据) {\n    this.技能运行数据 = {\n      ...this.技能运行数据,\n      ...新数据,\n    }\n  }\n}\n\nexport default 有CD技能通用类\n","import { 每秒郭氏帧 } from '@/数据/常量'\nimport 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 决云势 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '决')\n  static 回复锐意 = 0\n  static 识破附加锐意 = 0\n\n  constructor(模拟循环) {\n    super(模拟循环)\n    决云势.回复锐意 = 决云势.技能数据?.回复锐意 || 0\n    决云势.识破附加锐意 = this.模拟循环.校验奇穴是否存在?.('周流') ? 25 : 10\n\n    this.初始化技能运行数据(决云势.技能数据)\n  }\n\n  判断有无识破() {\n    return !!this.模拟循环.当前自身buff列表?.['识破']?.当前层数\n  }\n\n  技能释放后更新运行数据() {\n    // 非潋风奇穴的识破决，释放后重置技能CD\n    if (this.判断有无识破() && !this.模拟循环.校验奇穴是否存在?.('潋风')) {\n      return\n    } else {\n      if (决云势.技能数据) {\n        this?.模拟循环?.技能释放后更新运行数据?.(决云势.技能数据, this)\n      }\n    }\n  }\n\n  橙武触发重置调息() {\n    this.技能运行数据 = {\n      当前层数: 1,\n    }\n  }\n\n  // 减少13秒\n  溃延触发减少决云势调息时间() {\n    const 层数 = this.技能运行数据.当前层数\n    const 计划下次充能时间点 = this.技能运行数据.计划下次充能时间点 || 0\n    // 没有层数才需要处理\n    if (!层数 && 计划下次充能时间点) {\n      const 减少11秒后充能节点 = Math.max(计划下次充能时间点 - 每秒郭氏帧 * 11, 0)\n      if (减少11秒后充能节点 <= (this.模拟循环.当前时间 || 0)) {\n        this.技能运行数据 = {\n          当前层数: 1,\n        }\n      } else {\n        this.技能运行数据 = {\n          ...this.技能运行数据,\n          计划下次充能时间点: 减少11秒后充能节点,\n        }\n      }\n      this.模拟循环.添加战斗日志?.({\n        日志: `溃延触发减少决云势调息时间，决释放CD时间变为${减少11秒后充能节点}`,\n        日志类型: '技能释放结果',\n      })\n    }\n  }\n\n  // 减少3秒\n  击懈触发减少决云势调息时间() {\n    const 层数 = this.技能运行数据.当前层数\n    const 计划下次充能时间点 = this.技能运行数据.计划下次充能时间点 || 0\n    // 没有层数才需要处理\n    if (!层数 && 计划下次充能时间点) {\n      const 减少后充能节点 = Math.max(计划下次充能时间点 - 每秒郭氏帧 * 10, 0)\n      if (减少后充能节点 <= (this.模拟循环.当前时间 || 0)) {\n        this.技能运行数据 = {\n          当前层数: 1,\n        }\n      } else {\n        this.技能运行数据 = {\n          ...this.技能运行数据,\n          计划下次充能时间点: 减少后充能节点,\n        }\n      }\n      this.模拟循环.添加战斗日志?.({\n        日志: `击懈触发减少决云势调息时间，决释放CD时间变为${减少后充能节点}`,\n        日志类型: '技能释放结果',\n      })\n    }\n  }\n\n  回复锐意() {\n    let 回复锐意 = 决云势.回复锐意\n    if (this.判断有无识破()) {\n      回复锐意 = 回复锐意 + 决云势.识破附加锐意\n    }\n    this.触发回复锐意?.(回复锐意, 决云势.技能数据?.技能名称)\n  }\n\n  命中() {\n    this.模拟循环.触发潋风携刃?.()\n    // 判断有潋风时，添加水墨圈buff\n    if (this.模拟循环.校验奇穴是否存在?.('潋风')) {\n      this.模拟循环.添加buff?.({ 名称: '潋风', 对象: '自身' })\n    }\n    this.回复锐意()\n    // 判断当前身上是否有识破buff，有则添加目标buff破绽\n    if (this.判断有无识破()) {\n      this.模拟循环.添加buff?.({ 名称: '破绽' })\n      this.模拟循环.卸除buff?.({ 名称: '识破', 对象: '自身' })\n    } else {\n      if (this.模拟循环.校验奇穴是否存在?.('击懈')) {\n        this.模拟循环.添加buff?.({ 名称: '破绽' })\n      }\n    }\n  }\n\n  造成伤害() {\n    this.模拟循环.触发避实击虚?.()\n\n    this.流云势法触发连亘()\n\n    this.触发伤害行为('决云势')\n\n    this.保存释放记录()\n  }\n\n  // 释放后() {\n  //   this.回复锐意()\n  // }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表(['潋风', '灭影追风', '流岚']),\n    }\n  }\n}\n\nexport default 决云势\n\nexport const 决云势类型 = typeof 决云势\n","import 循环模拟技能基础数据 from '../../../constant/skill'\nimport 技能统一类 from '../../通用类/技能统一类'\n\nclass 行云势 extends 技能统一类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '行')\n  static 回复锐意 = 0\n\n  constructor(模拟循环) {\n    super(模拟循环)\n    行云势.回复锐意 =\n      (行云势.技能数据?.回复锐意 || 0) + (this.模拟循环.校验奇穴是否存在?.('驭耀') ? 2 : 0)\n  }\n\n  判断行链触发伤害() {\n    const 行链层数 = this.模拟循环.当前自身buff列表?.['行链']?.当前层数\n    if (!行链层数) {\n      this.行云势造成伤害?.('行云势·一', 1)\n      // 添加两层行链buff\n      this.模拟循环.添加buff?.({ 名称: '行链', 对象: '自身', 新增层数: 2 })\n    } else if (行链层数 > 1) {\n      this.行云势造成伤害?.('行云势·二', 2)\n      // 消耗一层行链buff\n      this.模拟循环.卸除buff?.({ 名称: '行链', 对象: '自身', 卸除层数: 1 })\n    } else if (行链层数 === 1) {\n      this.行云势造成伤害?.('行云势·三', 3)\n      this.模拟循环.卸除buff?.({ 名称: '行链', 对象: '自身', 卸除层数: 2 })\n    }\n  }\n\n  造成伤害() {\n    this.模拟循环.触发潋风携刃?.()\n\n    this.模拟循环.触发避实击虚?.()\n\n    // 判断奇穴存在电逝时，在灭影随风buff下，只会造成行3伤害\n    if (\n      this.模拟循环.校验奇穴是否存在?.('电逝') &&\n      this.模拟循环.当前自身buff列表?.['灭影追风']?.当前层数\n    ) {\n      this.行云势造成伤害('行云势·三', 3)\n      this.模拟循环.卸除buff?.({ 名称: '行链', 对象: '自身', 卸除层数: 2 })\n    } else {\n      this.判断行链触发伤害()\n    }\n  }\n\n  行云势造成伤害(名称, 段数) {\n    this.触发伤害行为(名称)\n    this.保存释放记录(名称, 段数)\n  }\n\n  保存释放记录(名称, 段数) {\n    this.本次释放记录 = {\n      伤害段数: 段数,\n      实际伤害技能: 名称,\n      重要buff列表: this.获取当前重要buff列表(['雨积', '灭影追风', '流岚', '潋风']),\n    }\n  }\n\n  释放后() {\n    this.流云势法触发连亘()\n\n    this.触发回复锐意(行云势.回复锐意, 行云势.技能数据?.技能名称)\n\n    // 去除雨积\n    if (this.模拟循环.当前自身buff列表?.['雨积']?.当前层数) {\n      this.模拟循环.卸除buff?.({ 名称: '雨积', 对象: '自身' })\n    }\n  }\n}\n\nexport default 行云势\n\nexport const 行云势类型 = typeof 行云势\n","// import 循环主类 from '../main'\nimport 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 停云势 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '停')\n  static 回复锐意 = 0\n\n  constructor(模拟循环) {\n    super(模拟循环)\n\n    停云势.回复锐意 =\n      (停云势.技能数据?.回复锐意 || 0) + (this.模拟循环.校验奇穴是否存在?.('驭耀') ? 10 : 0)\n\n    this.初始化技能运行数据(停云势.技能数据)\n  }\n\n  命中() {\n    // 横断：停云势”“留客雨”会刷新目标身上属于自身的“横云断浪”流血效果。\n    if (\n      this.模拟循环.当前自身buff列表?.['流血']?.当前层数 &&\n      this.模拟循环.校验奇穴是否存在?.('横断')\n    ) {\n      this.模拟循环.添加buff?.({ 名称: '流血', 对象: '目标', 新增层数: 0 })\n    }\n  }\n\n  造成伤害() {\n    this.模拟循环.触发潋风携刃?.()\n\n    this.模拟循环.触发避实击虚?.()\n\n    this.触发伤害行为('停云势')\n  }\n\n  释放后() {\n    this.流云势法触发连亘()\n\n    this.触发回复锐意(停云势.回复锐意, 停云势.技能数据?.技能名称)\n\n    this.保存释放记录()\n\n    // 去除雨积\n    if (this.模拟循环.当前自身buff列表?.['雨积']?.当前层数) {\n      this.模拟循环.卸除buff?.({ 名称: '雨积', 对象: '自身' })\n    }\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表(['雨积', '灭影追风', '潋风', '流岚']),\n    }\n  }\n}\n\nexport default 停云势\n\nexport const 停云势类型 = typeof 停云势\n","import { 每秒郭氏帧 } from '@/数据/常量'\nimport 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 留客雨 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '留')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n\n    this.初始化技能运行数据(留客雨.技能数据)\n  }\n\n  潋风触发重置留客雨调息时间() {\n    this.技能运行数据 = {\n      当前层数: 1,\n    }\n    this.模拟循环.添加战斗日志?.({\n      日志: `潋风触发重置留客雨调息时间`,\n      日志类型: '技能释放结果',\n    })\n  }\n\n  减少单刀GCD() {\n    if (this.模拟循环?.GCD组?.单刀) {\n      const 减少后GCD = Math.max(this.模拟循环.GCD组?.单刀 - 每秒郭氏帧, 0)\n      this.模拟循环.GCD组.单刀 = 减少后GCD\n      this.模拟循环.添加战斗日志?.({\n        日志: `留客雨命中减少单刀GCD1秒，单刀GCD变为【${减少后GCD}】`,\n        日志类型: '技能释放结果',\n      })\n    }\n  }\n\n  命中() {\n    // 留客雨命中-降低自身1秒“流云势法/单刀”套路基础调息时间。\n    this.减少单刀GCD()\n\n    if (this.模拟循环.校验奇穴是否存在?.('雨积')) {\n      this.模拟循环.添加buff?.({ 名称: '雨积', 对象: '自身', 新增层数: 1 })\n    }\n\n    if (this.模拟循环.校验奇穴是否存在?.('击懈')) {\n      this.模拟循环.技能类实例集合?.决?.击懈触发减少决云势调息时间?.()\n    }\n\n    // 横断：停云势”“留客雨”会刷新目标身上属于自身的“横云断浪”流血效果。\n    if (\n      this.模拟循环.当前自身buff列表?.['流血']?.当前层数 &&\n      this.模拟循环.校验奇穴是否存在?.('横断')\n    ) {\n      this.模拟循环.添加buff?.({ 名称: '流血', 对象: '目标', 新增层数: 0 })\n    }\n  }\n\n  造成伤害() {\n    this.模拟循环.触发避实击虚?.()\n    this.触发伤害行为('留客雨')\n    this.保存释放记录()\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表(['灭影追风', '流岚', '潋风']),\n    }\n  }\n}\n\nexport default 留客雨\n\nexport const 留客雨类型 = typeof 留客雨\n","// import 循环主类 from '../main'\nimport 循环模拟技能基础数据 from '../../../constant/skill'\nimport { ERROR_ACTION } from '../../utils'\nimport 技能统一类 from '../../通用类/技能统一类'\n\nclass 断云势 extends 技能统一类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '断')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  触发断云势伤害(名称) {\n    // 镇机破绽增伤\n    if (this.模拟循环.校验奇穴是否存在?.('镇机')) {\n      const 目标身上破绽层数 = this.模拟循环.当前目标buff列表?.['破绽']?.当前层数 || 0\n      if (目标身上破绽层数 > 0) {\n        this.触发伤害行为(名称, 1, [`镇机_破绽_${目标身上破绽层数}`])\n      }\n    } else {\n      this.触发伤害行为(名称, 1)\n    }\n  }\n\n  释放() {\n    if (!this.模拟循环?.角色状态信息?.锐意 || this.模拟循环?.角色状态信息?.锐意 < 100) {\n      return {\n        可以释放: false,\n        异常信息: ERROR_ACTION.锐意不足,\n      }\n    } else {\n      return { 可以释放: true }\n    }\n  }\n\n  命中() {\n    this.模拟循环.触发潋风携刃?.()\n    this.触发清空锐意(断云势.技能数据?.技能名称)\n  }\n\n  造成伤害() {\n    this.模拟循环.触发避实击虚?.()\n\n    this.触发断云势伤害('断云势')\n\n    this.保存释放记录()\n\n    // 判断血量是否大于70\n    this.触发断云势伤害('断云势·额外伤害')\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表(['灭影追风', '流岚', '潋风']),\n    }\n  }\n\n  释放后() {\n    this.流云势法触发连亘()\n\n    this.模拟循环.切换角色体态?.('双刀', 断云势.技能数据?.技能名称)\n  }\n}\n\nexport default 断云势\n\nexport const 断云势类型 = typeof 断云势\n","// import 循环主类 from '../main'\nimport 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 横云断浪 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '横')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n\n    // 因为横断技能充能信息受奇穴影响，这里做覆盖\n    横云断浪.技能数据 = 模拟循环?.技能基础数据?.find((item) => item.技能名称 === '横')\n\n    this.初始化技能运行数据(横云断浪.技能数据)\n  }\n\n  命中() {\n    this.横云断浪上流血()\n  }\n\n  横云断浪上流血() {\n    this.模拟循环.技能类实例集合?.流血?.获得和刷新流血?.()\n  }\n\n  造成伤害() {\n    this.模拟循环.触发避实击虚?.()\n\n    this.破浪三式触发鸣锋()\n\n    this.触发伤害行为('横云断浪')\n\n    this.保存释放记录()\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表(['戗风', '灭影追风', '流岚']),\n    }\n  }\n}\n\nexport default 横云断浪\n\nexport const 横云断浪类型 = typeof 横云断浪\n","import 循环模拟技能基础数据 from '../../../constant/skill'\nimport 技能统一类 from '../../通用类/技能统一类'\n\nclass 沧浪三叠 extends 技能统一类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '沧')\n  static 回复锐意 = 0\n\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  检查GCD() {\n    const 单刀GCD = this.模拟循环.GCD组?.单刀 || 0\n    const 双刀GCD = this.模拟循环.GCD组?.双刀 || 0\n    const 最大GCD = Math.max(单刀GCD, 双刀GCD)\n    // if (最大GCD) {\n    //   this.模拟循环.增加时间?.(最大GCD)\n    // }\n    return 最大GCD || 0\n  }\n\n  判断沧链触发伤害() {\n    const 沧链层数 = this.模拟循环.当前自身buff列表?.['沧链']?.当前层数\n    if (!沧链层数) {\n      this.沧浪造成伤害?.('沧浪三叠·一')\n      // 添加两层沧链buff\n      this.模拟循环.添加buff?.({ 名称: '沧链', 对象: '自身', 新增层数: 2 })\n    } else if (沧链层数 > 1) {\n      this.沧浪造成伤害?.('沧浪三叠·二')\n      // 消耗一层沧链buff\n      this.模拟循环.卸除buff?.({ 名称: '沧链', 对象: '自身', 卸除层数: 1 })\n    } else if (沧链层数 === 1) {\n      this.沧浪造成伤害?.('沧浪三叠·三')\n      this.模拟循环.卸除buff?.({ 名称: '沧链', 对象: '自身', 卸除层数: 2 })\n    }\n  }\n\n  命中() {\n    // 判断有潋风时，添加水墨圈buff\n    if (this.模拟循环.校验奇穴是否存在?.('长溯')) {\n      this.模拟循环.添加buff?.({ 名称: '长溯', 对象: '目标' })\n    }\n  }\n\n  造成伤害() {\n    this.模拟循环.触发避实击虚?.()\n\n    this.破浪三式触发鸣锋()\n\n    const 当前破绽层数 = this.模拟循环.当前目标buff列表?.['破绽']?.当前层数 || 0\n\n    if (this.模拟循环.校验奇穴是否存在?.('滔天') && 当前破绽层数 > 0) {\n      this.触发伤害行为?.('沧浪三叠·一')\n      this.触发伤害行为?.('沧浪三叠·二')\n      this.触发伤害行为?.('沧浪三叠·三')\n      this.保存释放记录('沧浪三叠·滔天')\n\n      if (当前破绽层数 > 1) {\n        this.模拟循环.添加战斗日志?.({\n          日志: `触发滔天消耗一层破绽`,\n          日志类型: '目标buff变动',\n          日志时间: this.模拟循环.当前时间,\n        })\n        const 新破绽对象 = { ...this.模拟循环.当前目标buff列表?.['破绽'], 当前层数: 0 }\n        新破绽对象.当前层数 = 当前破绽层数 - 1\n        this.模拟循环.当前目标buff列表 = {\n          ...(this.模拟循环.当前目标buff列表 || {}),\n          破绽: { ...新破绽对象 } as any,\n        }\n        this.模拟循环.添加战斗日志?.({\n          日志: `破绽层数变为【${新破绽对象.当前层数}】`,\n          日志类型: '目标buff变动',\n          日志时间: this.模拟循环.当前时间,\n        })\n      } else {\n        this.模拟循环.卸除buff?.({ 名称: '破绽', 对象: '目标', 卸除层数: 1 })\n      }\n      this.模拟循环.卸除buff?.({ 名称: '沧链', 对象: '自身', 卸除层数: 2 })\n    } else {\n      this.判断沧链触发伤害()\n    }\n  }\n\n  沧浪造成伤害(名称) {\n    this.触发伤害行为(名称)\n\n    this.保存释放记录(名称)\n  }\n\n  保存释放记录(名称) {\n    this.本次释放记录 = {\n      实际伤害技能: 名称,\n      重要buff列表: this.获取当前重要buff列表(['戗风', '灭影追风', '流岚']),\n    }\n  }\n}\n\nexport default 沧浪三叠\n\nexport const 沧浪三叠类型 = typeof 沧浪三叠\n","import { 每秒郭氏帧 } from '@/数据/常量'\nimport 循环模拟技能基础数据 from '../../../constant/skill'\nimport 技能统一类 from '../../通用类/技能统一类'\n\nclass 孤锋破浪 extends 技能统一类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '孤')\n  static 回复锐意 = 0\n\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  检查GCD() {\n    const 单刀GCD = this.模拟循环.GCD组?.单刀 || 0\n    const 双刀GCD = this.模拟循环.GCD组?.双刀 || 0\n    const 最大GCD = Math.max(单刀GCD, 双刀GCD)\n    // if (最大GCD) {\n    //   this.模拟循环.增加时间?.(最大GCD)\n    // }\n    return 最大GCD\n  }\n\n  触发孤锋破浪伤害() {\n    // 破招\n    this.触发伤害行为('破')\n\n    this.触发伤害行为('孤锋破浪')\n\n    this.模拟循环.触发避实击虚?.()\n  }\n\n  命中(是否为最后一个技能) {\n    if (this.模拟循环.校验奇穴是否存在?.('界破') && !是否为最后一个技能) {\n      // 2秒后生效\n      const 生效时间 = (this.模拟循环?.当前时间 || 0) + 每秒郭氏帧 * 2\n      this.触发伤害行为('界破', 1, [], 生效时间)\n      this.模拟循环?.触发避实击虚?.(生效时间)\n    }\n    if (this.模拟循环.校验奇穴是否存在?.('截辕')) {\n      this.触发伤害行为('截辕')\n      this.模拟循环.技能类实例集合?.截辕?.获得和刷新截辕?.()\n    }\n  }\n\n  造成伤害() {\n    this.破浪三式触发鸣锋()\n\n    this.触发孤锋破浪伤害()\n\n    this.保存释放记录()\n\n    // 判断长溯层数\n    const 长溯层数 = this.模拟循环.当前目标buff列表?.['长溯']?.当前层数\n    if (长溯层数) {\n      for (let i = 0; i < 长溯层数; i++) {\n        this.触发孤锋破浪伤害()\n      }\n      this.模拟循环.卸除buff?.({ 名称: '长溯', 对象: '目标', 卸除层数: 3 })\n    }\n  }\n\n  释放后() {\n    if (\n      !this.模拟循环.当前自身buff列表?.['橙武']?.当前层数 &&\n      !this.模拟循环.当前自身buff列表?.['威声']?.当前层数\n    ) {\n      this.模拟循环.切换角色体态?.('单刀', 孤锋破浪.技能数据?.技能名称)\n    }\n\n    // 威声只生效一次\n    if (this.模拟循环.当前自身buff列表?.['威声']?.当前层数) {\n      this.模拟循环.卸除buff?.({ 名称: '威声', 对象: '自身', 卸除层数: 1 })\n    }\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表(['戗风', '灭影追风', '流岚']),\n    }\n  }\n}\n\nexport default 孤锋破浪\n\nexport const 孤锋破浪类型 = typeof 孤锋破浪\n","// import 循环主类 from '../main'\nimport 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 灭影追风 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '灭')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n\n    this.初始化技能运行数据(灭影追风.技能数据)\n  }\n\n  // 这里单独写灭的卡GCD释放逻辑\n  检查GCD(索引) {\n    const 后一个技能 = this.模拟循环?.测试循环?.[索引 + 1]\n    let GCD = this.模拟循环?.GCD组?.['灭'] || 0\n\n    // 如果存在后面的技能，判断后面的技能当前的GCD为多少，推进到后一个技能。这样可以让灭卡在后面的技能释放前释放\n    if (后一个技能) {\n      const 当前技能 = this?.模拟循环?.技能基础数据?.find((item) => item?.技能名称 === 后一个技能)\n      if (当前技能 && 当前技能?.技能GCD组) {\n        const 技能实例 = this?.模拟循环?.技能类实例集合?.[当前技能?.技能名称]\n        GCD = this.模拟循环?.检查GCD?.(当前技能, 技能实例, 索引 + 1) || 0\n      }\n    }\n    return GCD\n  }\n\n  命中() {\n    this.模拟循环.添加buff?.({ 名称: '灭影追风', 对象: '自身' })\n\n    if (this.模拟循环.校验奇穴是否存在?.('威声')) {\n      this.模拟循环.添加buff?.({ 名称: '威声', 对象: '自身' })\n      this.模拟循环.切换角色体态?.('双刀', 灭影追风.技能数据?.技能名称)\n    }\n\n    this.保存释放记录()\n  }\n\n  保存释放记录() {\n    const 造成buff数据 = this.获取施加重要buff信息('灭影追风')\n    this.本次释放记录 = 造成buff数据 ? { 造成buff数据 } : {}\n  }\n}\n\nexport default 灭影追风\n\nexport const 灭影随风类型 = typeof 灭影追风\n","// import 循环主类 from '../main'\nimport { 每秒郭氏帧 } from '@/数据/常量'\nimport 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 游风飘踪 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '游')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n\n    // 因为横断技能充能信息受奇穴影响，这里做覆盖\n    游风飘踪.技能数据 = 模拟循环?.技能基础数据?.find((item) => item.技能名称 === '游')\n\n    this.初始化技能运行数据(游风飘踪.技能数据)\n  }\n\n  命中() {\n    if (this.模拟循环.校验奇穴是否存在?.('流岚')) {\n      this.模拟循环.添加buff?.({ 名称: '身形', 对象: '自身', 新增层数: 3 })\n    }\n  }\n\n  // 游风在没有被控制状态释放后回返还7秒冷却，这里做特殊处理\n  技能释放后更新运行数据() {\n    const 最大充能层数 = 游风飘踪.技能数据?.最大充能层数 || 1\n    const 是否为充满后第一次释放 = this?.技能运行数据?.当前层数 === 最大充能层数\n\n    const 当前时间 = this?.模拟循环?.当前时间 || 0\n    function 获取帧数(秒) {\n      return 每秒郭氏帧 * 秒\n    }\n    const 原充能时间 = this?.技能运行数据?.计划下次充能时间点 || 0\n    const 原充能时间返还7秒 = Math.max(原充能时间 - 获取帧数(7), 0)\n    const 本次释放后返还是否会导致充能 = 原充能时间返还7秒 <= 当前时间 && 原充能时间 > 当前时间\n\n    const 释放后层数 =\n      本次释放后返还是否会导致充能 && !是否为充满后第一次释放\n        ? this?.技能运行数据?.当前层数\n        : this?.技能运行数据?.当前层数 - 1\n\n    const 当前时间开始计算充能时间点 = 当前时间 + (游风飘踪.技能数据?.技能CD || 0) - 获取帧数(7)\n\n    if (是否为充满后第一次释放) {\n      this?.更新技能运行数据({\n        当前层数: 释放后层数,\n        计划下次充能时间点: 当前时间开始计算充能时间点,\n      })\n    } else {\n      if (释放后层数 <= 0) {\n        const 计算充能时间 =\n          // 已经充能好了\n          原充能时间返还7秒 <= 当前时间 ? 当前时间开始计算充能时间点 : 原充能时间返还7秒\n        this?.更新技能运行数据({\n          当前层数: 释放后层数,\n          计划下次充能时间点: 计算充能时间,\n        })\n      } else {\n        if (当前时间开始计算充能时间点) {\n          this?.更新技能运行数据({\n            当前层数: 释放后层数,\n            计划下次充能时间点: 原充能时间 + (游风飘踪.技能数据?.技能CD || 0) - 获取帧数(7),\n          })\n        } else {\n          this?.更新技能运行数据({\n            当前层数: 释放后层数,\n          })\n        }\n      }\n    }\n  }\n}\n\nexport default 游风飘踪\n\nexport const 游风飘踪类型 = typeof 游风飘踪\n","// import 循环主类 from '../main'\n// import { 每秒郭氏帧 } from '@/components/CycleSimulator/constant'\nimport 循环模拟技能基础数据 from '../../../constant/skill'\nimport { BuffDTO } from '../../type'\nimport { ERROR_ACTION } from '../../utils'\nimport 技能统一类 from '../../通用类/技能统一类'\n\nclass 吃影子 extends 技能统一类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '吃影子')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  吃影子获得流岚() {\n    // 获取当前流岚buff信息\n    const 当前流岚信息 = this.模拟循环.当前自身buff列表?.['流岚']\n    const 原始buff对象 = this.模拟循环.Buff和Dot数据?.['流岚']\n    const 新流岚对象: BuffDTO = { ...原始buff对象, ...当前流岚信息 } as any\n    const 当前时间 = this.模拟循环.当前时间 || 0\n\n    // 这里由于没有设定剩余时间的概念，用3层代表流岚刷新时间来调整，3层为60秒\n    if (当前流岚信息?.当前层数) {\n      if (当前流岚信息?.当前层数 === 3) {\n        新流岚对象.刷新时间 = 当前时间\n      }\n      新流岚对象.当前层数 = Math.min(原始buff对象?.最大层数 || 0, (新流岚对象.当前层数 || 0) + 1)\n    } else {\n      新流岚对象.当前层数 = 1\n      新流岚对象.刷新时间 = 当前时间\n    }\n    this.模拟循环.当前自身buff列表 = {\n      ...this.模拟循环.当前自身buff列表,\n      流岚: { ...新流岚对象 },\n    }\n    this.模拟循环?.添加战斗日志?.({\n      日志: `自身获得流岚`,\n      日志类型: '自身buff变动',\n      日志时间: 当前时间,\n    })\n  }\n\n  释放() {\n    if (!this.模拟循环.当前自身buff列表?.['身形']?.当前层数) {\n      return {\n        可以释放: false,\n        异常信息: ERROR_ACTION.身形不足,\n      }\n    } else {\n      return { 可以释放: true }\n    }\n  }\n\n  命中() {\n    if (this.模拟循环.当前自身buff列表?.['身形']?.当前层数) {\n      this.模拟循环.添加buff?.({ 名称: '识破', 对象: '自身', 新增层数: 1 })\n\n      const 新层数 = this.模拟循环.当前自身buff列表?.['身形']?.当前层数 - 1\n      // 完全卸除不需要传入时间\n      const 刷新时间 = 新层数 <= 0 ? 0 : this.模拟循环.当前自身buff列表?.['身形']?.刷新时间\n      this.模拟循环.卸除buff?.({ 名称: '身形', 对象: '自身', 卸除层数: 1, buff刷新时间: 刷新时间 })\n    }\n    if (this.模拟循环.校验奇穴是否存在?.('溃延')) {\n      this.模拟循环.技能类实例集合?.决?.溃延触发减少决云势调息时间?.()\n    }\n\n    if (this.模拟循环.校验奇穴是否存在?.('戗风')) {\n      this.模拟循环.添加buff?.({ 名称: '戗风', 对象: '自身', 新增层数: 1 })\n    }\n\n    if (this.模拟循环.校验奇穴是否存在?.('流岚')) {\n      this.吃影子获得流岚()\n    }\n\n    this.保存释放记录()\n  }\n\n  保存释放记录() {\n    const 造成buff数据 = this.获取施加重要buff信息('戗风')\n    this.本次释放记录 = 造成buff数据 ? { 造成buff数据 } : {}\n  }\n}\n\nexport default 吃影子\n\nexport const 吃影子类型 = typeof 吃影子\n","// import 循环主类 from '../main'\nimport 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 触发橙武 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '触发橙武')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n\n    this.初始化技能运行数据(触发橙武.技能数据)\n  }\n\n  命中() {\n    this.模拟循环.添加buff?.({ 名称: '橙武', 对象: '自身', 新增层数: 1 })\n    this.模拟循环.添加buff?.({ 名称: '橙武孤锋', 对象: '自身', 新增层数: 1 })\n\n    this.模拟循环.技能类实例集合?.决?.橙武触发重置调息?.()\n\n    this.触发回复锐意(100, '触发橙武')\n    this.模拟循环.切换角色体态?.('双刀', '触发橙武')\n  }\n}\n\nexport default 触发橙武\n\nexport const 触发橙武类型 = typeof 触发橙武\n","import 循环模拟技能基础数据 from '../../../constant/skill'\nimport 技能统一类 from '../../通用类/技能统一类'\n\nclass 换行 extends 技能统一类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '换行')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n}\n\nexport default 换行\n\nexport const 换行类型 = typeof 换行\n","// import 循环主类 from '../main'\nimport 循环模拟技能基础数据 from '../../../constant/skill'\nimport 技能统一类 from '../../通用类/技能统一类'\n\nclass 点掉橙武 extends 技能统一类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '点掉橙武')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  命中() {\n    if (this.模拟循环.大橙武模拟 && this.模拟循环?.当前自身buff列表?.['橙武']?.当前层数) {\n      this.模拟循环.卸除buff?.({ 名称: '橙武', 对象: '自身' })\n      this.模拟循环.卸除buff?.({ 名称: '橙武孤锋', 对象: '自身' })\n    }\n  }\n}\n\nexport default 点掉橙武\n\nexport const 点掉橙武类型 = typeof 点掉橙武\n","import { 根据加速等级获取虚拟加速值 } from '../../../山海心诀/utils'\nimport { 获取实际帧数 } from '@/工具函数/data'\nimport { DOT待生效数据类型, DOT运行数据类型, DotDTO } from '../type'\nimport 技能统一类 from './技能统一类'\n\nclass 通用DOT类 extends 技能统一类 {\n  DOT运行数据: DOT运行数据类型 = {\n    待生效数据: [],\n  }\n\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  获取当前DOT数据(DOT名称) {\n    const DOT数据: DotDTO = this.模拟循环.Buff和Dot数据?.[DOT名称] as DotDTO\n    return DOT数据\n  }\n\n  更新DOT运行数据(新数据) {\n    this.DOT运行数据 = {\n      ...this.DOT运行数据,\n      ...新数据,\n    }\n  }\n\n  结算并更新运行数据() {\n    const 待生效数据 = this.DOT运行数据?.待生效数据 || []\n    if (待生效数据.length > 0) {\n      const 结算数组: DOT待生效数据类型[] = []\n      const 未结算数组: DOT待生效数据类型[] = []\n      const 当前时间 = this.模拟循环.当前时间 || 0\n      待生效数据.forEach((数据) => {\n        if ((数据.生效时间 || 0) <= 当前时间) {\n          结算数组.push(数据)\n        } else {\n          未结算数组.push(数据)\n        }\n      })\n      this.更新DOT运行数据({\n        待生效数据: 未结算数组,\n      })\n      return 结算数组\n    }\n    return []\n  }\n\n  // 对当前dot进行结算和运行数据\n  更新待生效数据(当前层数: number, DOT数据: DotDTO) {\n    const DOT是否吃加速 = DOT数据.是否吃加速 !== undefined ? DOT数据.是否吃加速 : true\n\n    const 循环加速值 = 根据加速等级获取虚拟加速值(this.模拟循环.加速等级)\n    const 实际初次频率 = DOT是否吃加速\n      ? 获取实际帧数(DOT数据.初次频率 || DOT数据.伤害频率, 循环加速值)\n      : DOT数据.初次频率 || DOT数据.伤害频率\n\n    const 实际伤害频率 = DOT是否吃加速\n      ? 获取实际帧数(DOT数据.伤害频率, 循环加速值)\n      : DOT数据.伤害频率\n\n    const 当前时间 = this.模拟循环.当前时间 || 0\n    const 当前是否有灭影追风Buff = !!this.模拟循环?.当前自身buff列表?.['灭影追风']?.当前层数\n    const 待生效数据: DOT待生效数据类型[] =\n      this.DOT运行数据?.待生效数据.map((item) => {\n        return { ...item, 当前层数, 快照buff列表: 当前是否有灭影追风Buff ? ['灭影追风_双会'] : [] }\n      }) || []\n\n    // 如果DOT依然存在\n    if (待生效数据?.length > 0) {\n      const 待添加次数 = DOT数据.最大作用次数 - 待生效数据?.length\n      const 原最后一次生效时间 = 待生效数据[待生效数据?.length - 1]?.生效时间 || 0\n      for (let i = 0; i < 待添加次数; i++) {\n        待生效数据.push({\n          当前层数,\n          生效时间: 原最后一次生效时间 + 实际伤害频率 * (i + 1),\n          快照buff列表: 当前是否有灭影追风Buff ? ['灭影追风_双会'] : [],\n        })\n      }\n    } else {\n      const 待添加次数 = DOT数据.最大作用次数\n      for (let i = 0; i < 待添加次数; i++) {\n        const 生效时间 = 当前时间 + (i === 0 ? 实际初次频率 : 实际伤害频率 * (i + 1))\n        待生效数据.push({\n          当前层数,\n          生效时间,\n          快照buff列表: 当前是否有灭影追风Buff ? ['灭影追风_双会'] : [],\n        })\n      }\n    }\n    this.更新DOT运行数据({\n      待生效数据: 待生效数据,\n    })\n  }\n}\n\nexport default 通用DOT类\n","// import 循环主类 from '../main'\nimport 通用DOT类 from '../../通用类/通用DOT类'\n\nclass 流血 extends 通用DOT类 {\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  获得和刷新流血() {\n    const 当前破绽层数 = this.模拟循环.当前目标buff列表?.['破绽']?.当前层数 || 0\n    const 当前流血层数 = this.模拟循环.当前目标buff列表?.['流血']?.当前层数 || 0\n    const 流血最大层数 = this?.模拟循环?.Buff和Dot数据?.流血?.最大层数 || 4\n    const 新流血层数 = Math.min(当前流血层数 + 当前破绽层数, 流血最大层数)\n    if (当前破绽层数) {\n      this.模拟循环.添加buff?.({\n        名称: '流血',\n        对象: '目标',\n        新增层数: 当前破绽层数,\n      })\n    }\n    const 数据 = this.获取当前DOT数据('流血')\n    this.更新待生效数据(新流血层数, 数据)\n  }\n\n  结算流血伤害() {\n    const 待生效数据 = this.结算并更新运行数据()\n\n    待生效数据.forEach((数据) => {\n      const 层数 = 数据.当前层数 || 1\n      const 生效时间 = 数据.生效时间 || 0\n      const 快照buff列表 = 数据.快照buff列表 || []\n      if (生效时间) {\n        this.触发伤害行为(流血伤害名称枚举[层数], 1, 快照buff列表, 生效时间, true)\n      }\n    })\n  }\n}\n\nexport default 流血\n\nexport const 流血DOT类型 = typeof 流血\n\nconst 流血伤害名称枚举 = {\n  1: '流血·一',\n  2: '流血·二',\n  3: '流血·三',\n  4: '流血·四',\n  5: '流血·五',\n  6: '流血·六',\n}\n","// import 循环主类 from '../main'\nimport 通用DOT类 from '../../通用类/通用DOT类'\n\nclass 截辕 extends 通用DOT类 {\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  获得和刷新截辕() {\n    const 当前截辕层数 = this.模拟循环.当前目标buff列表?.['截辕']?.当前层数 || 0\n    this.模拟循环.添加buff?.({\n      名称: '截辕',\n      对象: '目标',\n      新增层数: 1,\n    })\n    const 数据 = this.获取当前DOT数据('截辕')\n    this.更新待生效数据(当前截辕层数, 数据)\n  }\n\n  结算截辕伤害() {\n    const 待生效数据 = this.结算并更新运行数据()\n\n    待生效数据.forEach((数据) => {\n      const 生效时间 = 数据.生效时间 || 0\n      const 快照buff列表 = 数据.快照buff列表 || []\n\n      if (生效时间) {\n        this.触发伤害行为('截辕（DOT）', 1, 快照buff列表, 生效时间, true)\n      }\n    })\n  }\n}\n\nexport default 截辕\n\nexport const 截辕DOT类型 = typeof 截辕\n","/**\n * 定义模拟循环类\n */\n\nimport { ERROR_ACTION, 根据奇穴修改buff数据, 根据奇穴修改技能数据, 起手识破BUFF } from './utils'\nimport {\n  技能GCD组,\n  技能类实例集合,\n  检查运行数据实例类型,\n  Buff枚举,\n  循环日志数据类型,\n  循环基础技能数据类型,\n  角色状态信息类型,\n  技能释放记录数据,\n} from './type'\n\nimport 决云势 from './技能类/决云势'\nimport 行云势 from './技能类/行云势'\nimport 停云势 from './技能类/停云势'\nimport 留客雨 from './技能类/留客雨'\nimport 断云势 from './技能类/断云势'\nimport 横云断浪 from './技能类/横云断浪'\nimport 沧浪三叠 from './技能类/沧浪三叠'\nimport 孤锋破浪 from './技能类/孤锋破浪'\nimport 灭影追风 from './技能类/灭影追风'\nimport 游风飘踪 from './技能类/游风飘踪'\nimport 吃影子 from './技能类/吃影子'\nimport 触发橙武 from './技能类/触发橙武'\nimport 换行 from './技能类/换行'\nimport 点掉橙武 from './技能类/点掉橙武'\nimport 流血 from './DOT类/流血'\nimport 截辕 from './DOT类/截辕'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport { 获取加速等级 } from '@/工具函数/data'\nimport 获取技能信息 from '@/数据/数据工具/获取技能等级信息'\n\nconst { 技能系数 } = 获取当前数据()\n\ninterface SimulatorCycleProps {\n  测试循环: string[]\n  加速值: number\n  网络延迟: number\n  奇穴: string[]\n  起手驰风: boolean\n  大橙武模拟: boolean\n}\n\nclass 循环主类 {\n  循环执行结果: '成功' | '异常' = '成功'\n  循环异常信息 = { 异常索引: 0, 异常信息: '' }\n  测试循环: string[] = []\n  奇穴: string[] = []\n  加速等级 = 0\n  网络延迟 = 0\n  角色状态信息: 角色状态信息类型 = {\n    锐意: 0,\n    体态: '双刀',\n  }\n  当前自身buff列表: Buff枚举 = {}\n  当前目标buff列表: Buff枚举 = {}\n  当前时间 = 0\n  开始释放上一个技能的时间 = 0\n  战斗日志: 循环日志数据类型[] = []\n  技能释放记录: 技能释放记录数据[] = []\n  Buff和Dot数据: Buff枚举 = {}\n  技能基础数据: 循环基础技能数据类型[] = []\n  GCD组: 技能GCD组 = {\n    单刀: 0,\n    双刀: 0,\n  }\n  技能类实例集合: 技能类实例集合 = {}\n  云刀上次造成伤害时间: number | undefined = undefined\n  大橙武模拟 = false\n\n  // 初始化创建\n  constructor(props: SimulatorCycleProps) {\n    // 模拟开始后不会变动的数据\n    this.测试循环 = props.测试循环\n    this.大橙武模拟 = props.大橙武模拟\n    this.奇穴 = props.奇穴\n    this.加速等级 = 获取加速等级(props.加速值)\n    this.网络延迟 = props.网络延迟\n    this.Buff和Dot数据 = 根据奇穴修改buff数据(this.奇穴)\n    this.技能基础数据 = 根据奇穴修改技能数据(this.奇穴)\n\n    // 模拟初始化\n    this.初始化技能实例类()\n    this.当前自身buff列表 = props.起手驰风 ? { ...起手识破BUFF(this.Buff和Dot数据) } : {}\n    this.当前目标buff列表 = {}\n    this.角色状态信息 = {\n      锐意: 0,\n      体态: '双刀',\n    }\n    this.重置循环执行结果()\n  }\n\n  重置循环执行结果() {\n    this.循环执行结果 = '成功'\n    this.循环异常信息 = { 异常索引: 0, 异常信息: '' }\n  }\n\n  初始化技能实例类() {\n    this.技能类实例集合 = {\n      决: new 决云势(this),\n      行: new 行云势(this),\n      停: new 停云势(this),\n      留: new 留客雨(this),\n      断: new 断云势(this),\n      横: new 横云断浪(this),\n      沧: new 沧浪三叠(this),\n      孤: new 孤锋破浪(this),\n      灭: new 灭影追风(this),\n      游: new 游风飘踪(this),\n      吃影子: new 吃影子(this),\n      流血: new 流血(this),\n      截辕: new 截辕(this),\n      触发橙武: new 触发橙武(this),\n      点掉橙武: new 点掉橙武(this),\n      换行: new 换行(this),\n    }\n  }\n\n  添加buff({ 名称, 对象 = '目标', 事件时间 = this.当前时间, 新增层数 = 1 }) {\n    const 当前层数 =\n      对象 === '自身'\n        ? this.当前自身buff列表[名称]?.当前层数\n        : this.当前目标buff列表[名称]?.当前层数\n\n    const 新buff对象 = {\n      ...this.Buff和Dot数据[名称],\n      当前层数: Math.min((当前层数 || 0) + 新增层数, this.Buff和Dot数据[名称].最大层数 || 1),\n      刷新时间: 事件时间,\n    }\n    if (新buff对象.当前层数 !== 当前层数 && 新buff对象.当前层数 !== 1) {\n      this.添加战斗日志({\n        日志: `${名称}层数变为【${新buff对象.当前层数}】`,\n        日志类型: 对象 === '自身' ? '自身buff变动' : '目标buff变动',\n        日志时间: 事件时间,\n      })\n    } else {\n      this.添加战斗日志({\n        日志: `${对象}获得${名称}`,\n        日志类型: 对象 === '自身' ? '自身buff变动' : '目标buff变动',\n        日志时间: 事件时间,\n      })\n    }\n\n    if (对象 === '自身') {\n      this.当前自身buff列表[名称] = { ...新buff对象 }\n    } else {\n      this.当前目标buff列表[名称] = { ...新buff对象 }\n    }\n  }\n\n  卸除buff({ 名称, buff刷新时间 = 0, 对象 = '目标', 事件时间 = this.当前时间, 卸除层数 = 1 }) {\n    const 当前层数 =\n      对象 === '自身'\n        ? this.当前自身buff列表[名称]?.当前层数\n        : this.当前目标buff列表[名称]?.当前层数\n\n    if (当前层数 && 当前层数 >= 0) {\n      if (当前层数 - 卸除层数 > 0) {\n        this.添加战斗日志({\n          日志: `${名称}层数变为【${当前层数 - 卸除层数}】`,\n          日志类型: 对象 === '自身' ? '自身buff变动' : '目标buff变动',\n          日志时间: 事件时间,\n        })\n        const 新buff对象 = {\n          ...this.Buff和Dot数据[名称],\n          当前层数: 当前层数 - 卸除层数,\n          刷新时间: buff刷新时间 || 事件时间,\n        }\n        if (对象 === '自身') {\n          this.当前自身buff列表[名称] = { ...新buff对象 }\n        } else {\n          this.当前目标buff列表[名称] = { ...新buff对象 }\n        }\n      } else {\n        this.添加战斗日志({\n          日志: `${对象}失去${名称}`,\n          日志类型: 对象 === '自身' ? '自身buff变动' : '目标buff变动',\n          日志时间: 事件时间,\n        })\n        if (对象 === '自身') {\n          delete this.当前自身buff列表[名称]\n        } else {\n          delete this.当前目标buff列表[名称]\n        }\n      }\n    }\n  }\n\n  // 校验奇穴是否存在\n  校验奇穴是否存在(待判断奇穴) {\n    return this?.奇穴?.includes(待判断奇穴)\n  }\n\n  // 单双刀体态校验\n  单双刀体态校验(当前技能: 循环基础技能数据类型) {\n    if (当前技能?.技能类型 && ['单刀', '双刀']?.includes(当前技能?.技能类型)) {\n      if (this.角色状态信息?.体态 !== 当前技能?.技能类型) {\n        return {\n          可以释放: false,\n          异常信息: ERROR_ACTION.体态错误,\n        }\n      } else {\n        return { 可以释放: true }\n      }\n    } else {\n      return { 可以释放: true }\n    }\n  }\n\n  // ----------------- 时间、GCD、CD相关算法 start----------------- //\n  /**\n   *\n   * @param 增加时间方法\n   * @description 每次增加时间方法都要同步推进GCD\n   */\n  增加时间(time) {\n    this.跳过全部GCD时间(time)\n    // 增加时间\n    this.当前时间 = this.当前时间 + (time > 0 ? time : 0 || 0)\n  }\n\n  跳过全部GCD时间(time) {\n    // 减少GCD剩余时间\n    const 新GCD组: 技能GCD组 = { 单刀: 0, 双刀: 0 }\n    Object.keys(this.GCD组).map((key) => {\n      新GCD组[key] = Math.max((this.GCD组[key] || 0) - time, 0)\n    })\n    this.GCD组 = { ...新GCD组 }\n  }\n\n  技能释放前检查GCD统一方法(当前技能: 循环基础技能数据类型) {\n    let 校验GCD组: string = 当前技能.技能GCD组 as string\n    if (当前技能.技能GCD组 === '自身') {\n      校验GCD组 = 当前技能?.技能名称\n    }\n    if (校验GCD组) {\n      // 大部分技能只检查自己的GCD\n      const GCD = this.GCD组[校验GCD组]\n      // 增加GCD\n      return GCD || 0\n    }\n    return 0\n  }\n\n  // 对所有有CD技能检查和充能\n  对所有有CD技能检查和充能() {\n    Object.keys(this.技能类实例集合).forEach((key) => {\n      const 实例 = this.技能类实例集合[key]\n      const 当前技能 = this.技能基础数据?.find((item) => item.技能名称 === key)\n      if (实例?.技能运行数据) {\n        const 最大充能层数 = 当前技能?.最大充能层数 || 1\n        const 当前层数 = 实例?.技能运行数据?.当前层数\n        const 计划下次充能时间点 = 实例?.技能运行数据?.计划下次充能时间点 || 0\n        if (当前层数 < 最大充能层数) {\n          // 当前有层数，检查充能度过情况，更新层数和充能时间\n          let 新层数 = 当前层数\n          let 新充能时间点 = 计划下次充能时间点\n          const 充能 = () => {\n            if (新充能时间点 <= this.当前时间 && 新层数 < 最大充能层数) {\n              新层数 = 新层数 + 1\n              // 没充满，继续跑充能CD\n              if (新层数 < 最大充能层数) {\n                新充能时间点 = 新充能时间点 + (当前技能?.技能CD || 0)\n              }\n              if (新充能时间点 <= this.当前时间 && 新层数 < 最大充能层数) {\n                充能()\n              }\n            }\n          }\n          if (新充能时间点 && 新充能时间点 <= this.当前时间) {\n            充能()\n            实例?.更新技能运行数据({ 当前层数: 新层数, 计划下次充能时间点: 新充能时间点 })\n          }\n        }\n      }\n    })\n  }\n\n  技能释放前检查运行数据(当前技能: 循环基础技能数据类型, 技能实例: 检查运行数据实例类型, GCD) {\n    let 等待CD时间 = 0\n    const 可以释放时间 = this.当前时间 + GCD || 0\n    if (技能实例?.技能运行数据) {\n      const 当前层数 = 技能实例?.技能运行数据?.当前层数\n      const 计划下次充能时间点 = 技能实例?.技能运行数据?.计划下次充能时间点 || 0\n      // 当前层数为-1，说明未初始化实例，设置为最大层数\n      if (当前层数 <= 0) {\n        // 当前没有层数可用，需要等待充能\n        if (计划下次充能时间点 > 可以释放时间) {\n          等待CD时间 = 计划下次充能时间点 - 可以释放时间\n        }\n        if (计划下次充能时间点 <= 可以释放时间) {\n          const 新层数 = Math.min(当前层数 + 1, 当前技能?.最大充能层数 || 1)\n          技能实例?.更新技能运行数据({ 当前层数: 新层数 })\n        }\n      }\n    }\n    return 等待CD时间\n  }\n\n  技能释放后更新运行数据(\n    当前技能: 循环基础技能数据类型,\n    技能实例: 检查运行数据实例类型,\n    增加CD?: number\n  ) {\n    const 实际增加CD = 增加CD || 当前技能?.技能CD || 0\n    if (技能实例?.技能运行数据) {\n      const 最大充能层数 = 当前技能?.最大充能层数 || 1\n      const 是否为充满后第一次释放 = 技能实例?.技能运行数据?.当前层数 === 最大充能层数\n      const 释放后层数 = 技能实例?.技能运行数据?.当前层数 - 1\n      const 当前时间 = this.当前时间 || 0\n      if (是否为充满后第一次释放) {\n        技能实例?.更新技能运行数据({\n          当前层数: 释放后层数,\n          计划下次充能时间点: 当前时间 + 实际增加CD,\n        })\n      } else {\n        if (释放后层数 <= 0) {\n          const 原充能时间 = 技能实例?.技能运行数据?.计划下次充能时间点 || 0\n          const 计算充能时间 = 原充能时间 <= 当前时间 ? 当前时间 + 实际增加CD : 原充能时间\n          技能实例?.更新技能运行数据({\n            当前层数: 释放后层数,\n            计划下次充能时间点: 计算充能时间,\n          })\n        } else {\n          技能实例?.更新技能运行数据({\n            当前层数: 释放后层数,\n          })\n        }\n      }\n    }\n  }\n\n  // ----------------- 时间、GCD、CD相关算法 end----------------- //\n\n  // 添加战斗日志\n  添加战斗日志(log: 循环日志数据类型) {\n    const { 日志时间 = this.当前时间, ...rest } = log\n    this.战斗日志 = [\n      ...(this.战斗日志 || []),\n      {\n        日志时间: 日志时间,\n        ...rest,\n      },\n    ]\n  }\n\n  // 造成伤害\n  技能造成伤害(\n    来源,\n    伤害次数 = 1,\n    额外增益列表: string[] = [],\n    造成时间 = this.当前时间,\n    DOT伤害 = false,\n    技能等级 = 1\n  ) {\n    const 对应技能 = 技能系数?.find((item) => item.技能名称 === 来源)\n    const 技能增益列表 = 获取技能信息(对应技能)?.技能增益列表 || []\n\n    const 有关的buff列表 =\n      技能增益列表\n        ?.filter((item) => {\n          if (造成时间) {\n            const 当前增益数据 = this?.当前自身buff列表?.[item.增益名称]\n            const 增益消失时间 = (当前增益数据?.刷新时间 || 0) + (当前增益数据?.最大持续时间 || 0)\n            return 造成时间 <= 增益消失时间 && !!当前增益数据\n          } else {\n            return !!this?.当前自身buff列表?.[item.增益名称]\n          }\n        })\n        ?.map((item) => {\n          // DOT伤害实时只吃灭影的破防，双会吃快照伤害，由额外增益列表传入\n          if (item?.增益名称 === '灭影追风' && DOT伤害) {\n            return '灭影追风_破防'\n          } else {\n            return item.增益名称\n          }\n        }) || []\n\n    const 总增益列表 = 有关的buff列表.concat(额外增益列表)\n\n    this.添加战斗日志({\n      日志: 来源,\n      日志类型: '造成伤害',\n      日志时间: 造成时间,\n      buff列表: 总增益列表 || [],\n      其他数据: {\n        伤害次数: 伤害次数,\n        技能等级: 技能等级,\n      },\n    })\n  }\n\n  增加锐意(锐意值, 来源) {\n    this.添加战斗日志({\n      日志: `${来源}回复锐意【${锐意值}】点`,\n      日志类型: '回复锐意',\n    })\n    const 更新后锐意 = (this.角色状态信息.锐意 || 0) + 锐意值\n    this.角色状态信息.锐意 = Math.min(更新后锐意, 100)\n    this.添加战斗日志({\n      日志: `锐意变为【${this.角色状态信息.锐意}】`,\n      日志类型: '自身buff变动',\n    })\n  }\n\n  减少锐意(锐意值, 来源) {\n    this.添加战斗日志({\n      日志: `${来源}消耗锐意【${锐意值}】点`,\n      日志类型: '消耗锐意',\n    })\n    const 更新后锐意 = (this.角色状态信息.锐意 || 0) - 锐意值\n    this.角色状态信息.锐意 = Math.max(更新后锐意, 0)\n    this.添加战斗日志({\n      日志: `锐意变为【${this.角色状态信息.锐意}】`,\n      日志类型: '自身buff变动',\n    })\n  }\n\n  切换角色体态(切换目标: '单刀' | '双刀', 来源) {\n    if (this.角色状态信息.体态 !== 切换目标) {\n      this.角色状态信息.体态 = 切换目标\n      this.添加战斗日志({\n        日志: `${来源}切换体态为【${切换目标}】`,\n        日志类型: '自身buff变动',\n      })\n    }\n  }\n\n  触发避实击虚(触发时间 = this.当前时间) {\n    const 破绽层数 = this.当前目标buff列表?.破绽?.当前层数 || 0\n    const 破绽避实击虚枚举 = { 0: 0, 1: 0.25, 2: 0.5, 3: 0.75, 4: 1, 5: 1, 6: 1 }\n\n    if (破绽避实击虚枚举[破绽层数]) {\n      let 避实击虚层数 = 1\n      if (this.校验奇穴是否存在('斩颓')) {\n        避实击虚层数 = 破绽层数\n      }\n      this.技能造成伤害(\n        `避实击虚`,\n        破绽避实击虚枚举[破绽层数],\n        [],\n        触发时间,\n        false,\n        避实击虚层数 || 1\n      )\n    }\n  }\n\n  触发潋风携刃() {\n    if (this?.当前自身buff列表?.['潋风']?.当前层数) {\n      this.增加锐意(20, '潋风·携刃')\n      this.技能造成伤害('潋风·携刃')\n      // this.技能类实例集合?.留?.潋风触发重置留客雨调息时间?.()\n    }\n  }\n\n  触发潋风拓锋() {\n    if (this?.当前自身buff列表?.['潋风']?.当前层数) {\n      this.技能造成伤害('潋风·拓锋')\n    }\n  }\n\n  检查GCD(当前技能: 循环基础技能数据类型, 技能实例, i) {\n    let GCD = 0\n    if (技能实例?.检查GCD) {\n      GCD = 技能实例?.检查GCD?.(i)\n    } else {\n      GCD = this.技能释放前检查GCD统一方法(当前技能)\n    }\n    return GCD\n  }\n\n  // 判断GCD，技能CD等\n  技能释放前(当前技能: 循环基础技能数据类型, 技能实例, i) {\n    let GCD = 0\n    let 等待CD = 0\n\n    // 判断是否为当前箭袋第一个技能\n    if (i >= 0) {\n      // 判断上一个技能对于本技能是否有GCD限制\n      if (当前技能?.技能GCD组) {\n        GCD = this.检查GCD(当前技能, 技能实例, i)\n      }\n      // 判断技能CD，如果存在CD。增加等待时间\n      if (当前技能?.技能CD) {\n        等待CD = this.技能释放前检查运行数据(当前技能, 技能实例, GCD)\n      }\n    }\n    // const 延迟等待 = this.当前时间 && (GCD || 等待CD) ? this.网络延迟 : 0\n    const 延迟等待 = this.当前时间 && 当前技能?.技能GCD组 !== '自身' && GCD ? this.网络延迟 : 0\n\n    // const 延迟等待 = this.当前时间 ? this.网络延迟 : 0\n    const 技能计划释放时间 = this.当前时间 + GCD + 延迟等待\n    return {\n      技能计划释放时间: 技能计划释放时间,\n      技能预估释放时间: 技能计划释放时间 + 等待CD,\n      等待CD,\n    }\n  }\n\n  技能GCD和CD处理(\n    等待CD,\n    技能预估释放时间,\n    当前技能: 循环基础技能数据类型,\n    技能实例: 检查运行数据实例类型\n  ) {\n    // 判断在处理完特殊事件以后，剩余的待定时间还有多少\n    const 时间差 = 技能预估释放时间 - this.当前时间\n    if (时间差 && 时间差 > 0) {\n      this.增加时间(时间差)\n    }\n    if (等待CD) {\n      this.添加战斗日志({\n        日志: `【${当前技能?.技能名称}】等技能CD【${等待CD}】帧`,\n        日志类型: '等CD',\n        日志时间: 技能预估释放时间,\n      })\n      const 当前层数 = 技能实例?.技能运行数据?.当前层数\n      const 新层数 = Math.min(当前层数 + 1, 当前技能?.最大充能层数 || 1)\n      技能实例?.更新技能运行数据({ 当前层数: 新层数 })\n    }\n  }\n\n  // 增加技能GCD\n  增加技能GCD(当前技能: 循环基础技能数据类型) {\n    // GCD处理\n    if (当前技能?.技能GCD组) {\n      let 待更新GCD组: string = 当前技能.技能GCD组 as string\n      if (当前技能.技能GCD组 === '自身') {\n        待更新GCD组 = 当前技能?.技能名称\n      }\n      if (待更新GCD组) {\n        this.GCD组[待更新GCD组] =\n          (this.GCD组[待更新GCD组] || 0) + 当前技能?.技能释放后添加GCD - this.加速等级\n      }\n    }\n  }\n\n  技能成功开始释放(当前技能: 循环基础技能数据类型, 技能实例) {\n    this.增加技能GCD(当前技能)\n    this.增加技能CD(当前技能, 技能实例)\n  }\n\n  // 增加技能CD\n  增加技能CD(当前技能: 循环基础技能数据类型, 技能实例) {\n    // 技能CD处理\n    if (当前技能?.技能CD) {\n      if (技能实例?.技能释放后更新运行数据) {\n        技能实例.技能释放后更新运行数据?.()\n      } else {\n        this.技能释放后更新运行数据(当前技能, 技能实例)\n      }\n    }\n  }\n\n  // 判断添加GCD等\n  技能释放后(当前技能: 循环基础技能数据类型, 计划释放时间: number, 开始释放时间: number, 技能实例) {\n    const 技能释放记录结果 = 技能实例?.获取技能释放记录结果?.() || {}\n    // 技能释放记录\n    this.技能释放记录.push({\n      技能名称: 当前技能?.技能名称,\n      计划释放时间,\n      实际释放时间: 开始释放时间,\n      技能释放记录结果,\n    })\n  }\n\n  清空buff调用函数(对象: '自身' | '目标') {\n    const buff列表 = 对象 === '自身' ? this.当前自身buff列表 : this.当前目标buff列表\n\n    // 更新目标buff\n    Object.keys(buff列表).forEach((key) => {\n      const buff对象 = buff列表[key]\n      const buff应该消失时间 = (buff对象?.刷新时间 || 0) + (buff对象?.最大持续时间 || 0)\n      const 消失层数 = buff对象?.自然消失失去层数 || buff对象?.最大层数\n      if (buff应该消失时间 < this.当前时间) {\n        this.卸除buff({ 名称: key, 对象, 事件时间: buff应该消失时间, 卸除层数: 消失层数 })\n      }\n    })\n  }\n\n  清空已经消失的buff() {\n    // 更新目标buff\n    this.清空buff调用函数('目标')\n    // 更新自身buff\n    this.清空buff调用函数('自身')\n  }\n\n  // 对当前的DOT进行已过期的结算和剩余时间更新\n  DOT结算与更新() {\n    this.技能类实例集合?.流血?.结算流血伤害()\n    this.技能类实例集合?.截辕?.结算截辕伤害()\n  }\n\n  普通攻击结算() {\n    // 云刀从0秒开始，没1.5秒（24帧造成一次伤害）\n    const 云刀间隔 = 24\n    if (this.云刀上次造成伤害时间 !== undefined) {\n      if (this.云刀上次造成伤害时间 + 云刀间隔 <= this.当前时间) {\n        const 本次应该造成云刀伤害序列: number[] = [this.云刀上次造成伤害时间 + 云刀间隔]\n        while (\n          本次应该造成云刀伤害序列?.[本次应该造成云刀伤害序列.length - 1] + 云刀间隔 <=\n          this.当前时间\n        ) {\n          本次应该造成云刀伤害序列.push(\n            本次应该造成云刀伤害序列?.[本次应该造成云刀伤害序列.length - 1] + 云刀间隔\n          )\n        }\n        for (let i = 0; i < 本次应该造成云刀伤害序列.length; i++) {\n          this.技能造成伤害('云刀', undefined, undefined, 本次应该造成云刀伤害序列[i])\n          if (i === 本次应该造成云刀伤害序列.length - 1) {\n            this.云刀上次造成伤害时间 = 本次应该造成云刀伤害序列[i]\n          }\n        }\n      }\n    } else {\n      this.技能造成伤害('云刀')\n      this.云刀上次造成伤害时间 = 0\n    }\n  }\n\n  // 模拟轮次开始\n  本轮模拟开始前() {\n    this.重置循环执行结果()\n    this.DOT结算与更新()\n    this.普通攻击结算()\n  }\n\n  // 模拟轮次释放结束\n  本轮模拟结束后() {\n    // 判断buff列表，清空已经消失的buff\n    this.清空已经消失的buff()\n    this.对所有有CD技能检查和充能()\n  }\n\n  // 技能释放校验\n  技能释放校验(技能实例, 当前技能) {\n    const 体态校验结果 = this.单双刀体态校验(当前技能)\n    const 释放判断结果 = 技能实例.释放\n      ? 技能实例.释放?.() || { 可以释放: true }\n      : { 可以释放: true }\n    const 校验结果 = {\n      可以释放: 体态校验结果.可以释放 && 释放判断结果.可以释放,\n      异常信息: 体态校验结果.异常信息 || 释放判断结果.异常信息,\n    }\n    if (校验结果.可以释放) {\n      this.添加战斗日志?.({\n        日志: 当前技能?.技能名称,\n        日志类型: '释放技能',\n      })\n    }\n    return 校验结果\n  }\n\n  // 技能释放异常\n  技能释放异常(校验结果, 当前技能, i) {\n    this.添加战斗日志({\n      日志: `循环在第${i + 1}个技能${当前技能?.技能名称}异常终止`,\n      日志类型: '循环异常',\n    })\n    this.循环执行结果 = '异常'\n    if (校验结果?.异常信息) {\n      this.循环异常信息 = {\n        异常索引: i + 1,\n        异常信息: 校验结果?.异常信息,\n      }\n    }\n  }\n\n  // 模拟函数，一个技能的释放生命周期\n  模拟() {\n    for (let i = 0; i < this.测试循环.length; i++) {\n      this.本轮模拟开始前()\n      const 当前技能 = this?.技能基础数据?.find((item) => item?.技能名称 === this.测试循环[i])\n\n      if (当前技能) {\n        const 技能实例 = this.技能类实例集合[当前技能?.技能名称]\n        if (技能实例) {\n          技能实例?.释放前初始化?.()\n          // 获取预估技能释放时间，处理预估时间前的所有待生效事件，推进时间轴\n          const { 技能计划释放时间, 等待CD, 技能预估释放时间 } = this.技能释放前(\n            当前技能,\n            技能实例,\n            i\n          )\n          const 是否为读条技能 = !!技能实例?.读条时间?.()\n          if (是否为读条技能) {\n            技能实例?.读条?.(技能预估释放时间)\n          }\n          this.技能GCD和CD处理(等待CD, 技能预估释放时间, 当前技能, 技能实例)\n          const 释放校验结果 = this.技能释放校验(技能实例, 当前技能)\n          this.清空已经消失的buff()\n          const 是否为最后一个技能 = i === this.测试循环.length - 1\n          const 开始释放时间 = this.当前时间\n          if (释放校验结果?.可以释放) {\n            this.技能成功开始释放(当前技能, 技能实例)\n            技能实例.命中?.(是否为最后一个技能)\n            技能实例.造成伤害?.()\n            技能实例.释放后?.()\n          } else {\n            this.技能释放异常(释放校验结果, 当前技能, i)\n            break\n          }\n          this.技能释放后(当前技能, 技能计划释放时间, 开始释放时间, 技能实例)\n        }\n      }\n      this.本轮模拟结束后()\n    }\n  }\n\n  // 将日志按时间排序\n  日志排序() {\n    const 新日志 = [...(this.战斗日志 || [])]\n\n    新日志.sort((a, b) => {\n      return (a?.日志时间 || 0) - (b?.日志时间 || 0)\n    })\n\n    this.战斗日志 = [...(新日志 || [])]\n  }\n\n  获取当前各技能的运行状态() {\n    const 各技能当前运行状态 = {}\n\n    ;(Object.keys(this.技能类实例集合) || []).forEach((key) => {\n      各技能当前运行状态[key] = this.技能类实例集合[key]?.技能运行数据 || {}\n    })\n\n    return 各技能当前运行状态\n  }\n}\n\nexport default 循环主类\n\nexport type 循环主类类型 = typeof 循环主类\n","/**\n * 定义模拟循环类\n */\n\nimport { 角色状态信息类型 } from '../simulator/type'\nimport 循环主类 from './main'\n\ninterface SimulatorCycleProps {\n  测试循环: string[]\n  加速值: number\n  网络延迟: number\n  奇穴: string[]\n  角色状态信息?: 角色状态信息类型\n  // 当前自身buff列表?: Buff枚举\n  // 当前目标buff列表?: Buff枚举\n  起手驰风: boolean\n  大橙武模拟: boolean\n}\n\nconst 模拟循环 = (props: SimulatorCycleProps) => {\n  const 模拟实例 = new 循环主类(props)\n  模拟实例.模拟()\n\n  模拟实例.日志排序()\n\n  const 当前各技能运行状态 = 模拟实例.获取当前各技能的运行状态()\n\n  return {\n    最终日志: 模拟实例.战斗日志,\n    当前自身buff列表: 模拟实例.当前自身buff列表,\n    当前目标buff列表: 模拟实例.当前目标buff列表,\n    角色状态信息: 模拟实例.角色状态信息,\n    当前时间: 模拟实例.当前时间,\n    循环执行结果: 模拟实例.循环执行结果,\n    循环异常信息: 模拟实例.循环异常信息,\n    技能释放记录: 模拟实例.技能释放记录,\n    当前各技能运行状态,\n    当前GCD组: 模拟实例.GCD组,\n    技能基础数据: 模拟实例.技能基础数据,\n  }\n}\n\nexport default 模拟循环\n","import 新六破 from './快速导入默认循环/启用循环/新六破'\n// import 六破灭好了就开 from './快速导入默认循环/启用循环/六破灭好了就开'\nimport 无影刀 from './快速导入默认循环/启用循环/无影刀'\nimport 橙武_循环1 from './快速导入默认循环/启用循环/橙武_循环1'\nimport 橙武_循环2 from './快速导入默认循环/启用循环/橙武_循环2'\n\nexport default [新六破, 无影刀, 橙武_循环1, 橙武_循环2]\n","import { 循环数据 } from '@/@types/循环'\n\n// 1断加速 0123\n// 2断加速 123\n// 3断加速 23\n\nconst 新六破: Partial<循环数据> = {\n  名称: '新六破',\n  标题: '新六破',\n  类型: '自定义',\n  标记: '自定义',\n  奇穴: [\n    '渊冲',\n    '戗风',\n    '溃延',\n    '放皓',\n    '电逝',\n    '承磊',\n    '界破',\n    '长溯',\n    '涣衍',\n    '涤瑕',\n    '流岚',\n    '潋风',\n  ],\n  技能序列: [\n    '游',\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '游',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '游',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '游',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '游',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '游',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '游',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '游',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '游',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '游',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n  ],\n}\n\nexport default 新六破\n","import { 循环数据 } from '@/@types/循环'\n\nconst 无影刀: Partial<循环数据> = {\n  名称: '无影刀',\n  奇穴: [\n    '渊冲',\n    '戗风',\n    '溃延',\n    '放皓',\n    '电逝',\n    '击懈',\n    '界破',\n    '长溯',\n    '涣衍',\n    '强膂',\n    '流岚',\n    '潋风',\n  ],\n  技能序列: [\n    '游',\n    '吃影子',\n    '吃影子',\n    '吃影子',\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '游',\n    '吃影子',\n    '吃影子',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '游',\n    '吃影子',\n    '吃影子',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '游',\n    '吃影子',\n    '吃影子',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '行',\n    '断',\n  ],\n}\n\nexport default 无影刀\n","import { 循环数据 } from '@/@types/循环'\n// 搞加速低延迟\n\nconst 橙武_循环1: Partial<循环数据> = {\n  名称: '橙武_循环1',\n  奇穴: [\n    '渊冲',\n    '戗风',\n    '溃延',\n    '放皓',\n    '电逝',\n    '承磊',\n    '界破',\n    '长溯',\n    '涣衍',\n    '涤瑕',\n    '流岚',\n    '潋风',\n  ],\n  技能序列: [\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '游',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '灭',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '触发橙武',\n    '孤',\n    '孤',\n    '孤',\n    '点掉橙武',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '游',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '灭',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n    '触发橙武',\n    '孤',\n    '孤',\n    '孤',\n    '点掉橙武',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '游',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '吃影子',\n    '横',\n    '灭',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '触发橙武',\n    '孤',\n    '孤',\n    '孤',\n    '点掉橙武',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '灭',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '游',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '灭',\n    '行',\n    '留',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '触发橙武',\n    '孤',\n    '孤',\n    '孤',\n    '点掉橙武',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '游',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '灭',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '横',\n    '沧',\n    '沧',\n    '游',\n    '吃影子',\n    '沧',\n    '孤',\n    '触发橙武',\n    '孤',\n    '孤',\n    '孤',\n    '点掉橙武',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '横',\n    '沧',\n    '沧',\n    '游',\n    '吃影子',\n    '沧',\n    '孤',\n    '触发橙武',\n    '孤',\n    '灭',\n    '孤',\n    '孤',\n    '点掉橙武',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '横',\n    '沧',\n    '沧',\n    '游',\n    '吃影子',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '触发橙武',\n    '孤',\n    '灭',\n    '孤',\n    '孤',\n    '点掉橙武',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '横',\n    '沧',\n    '沧',\n    '游',\n    '吃影子',\n    '沧',\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '触发橙武',\n    '孤',\n    '孤',\n    '孤',\n    '点掉橙武',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n  ],\n}\n\nexport default 橙武_循环1\n","import { 循环数据 } from '@/@types/循环'\n\n// 1断加速 0123\n// 2断加速 123\n// 3断加速 23\n\nconst 橙武_循环2: Partial<循环数据> = {\n  名称: '橙武_循环2',\n  奇穴: [\n    '渊冲',\n    '戗风',\n    '溃延',\n    '放皓',\n    '电逝',\n    '承磊',\n    '界破',\n    '长溯',\n    '涣衍',\n    '涤瑕',\n    '流岚',\n    '潋风',\n  ],\n  技能序列: [\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '游',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '游',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n    '触发橙武',\n    '孤',\n    '孤',\n    '孤',\n    '点掉橙武',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '吃影子',\n    '行',\n    '留',\n    '断',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '游',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n    '触发橙武',\n    '孤',\n    '孤',\n    '孤',\n    '点掉橙武',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '游',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '游',\n    '吃影子',\n    '灭',\n    '孤',\n    '触发橙武',\n    '孤',\n    '孤',\n    '孤',\n    '点掉橙武',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '吃影子',\n    '行',\n    '留',\n    '断',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '游',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '横',\n    '沧',\n    '沧',\n    '吃影子',\n    '沧',\n    '灭',\n    '孤',\n    '触发橙武',\n    '孤',\n    '孤',\n    '孤',\n    '点掉橙武',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '吃影子',\n    '行',\n    '留',\n    '断',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '游',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n    '触发橙武',\n    '孤',\n    '孤',\n    '孤',\n    '点掉橙武',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '游',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '游',\n    '吃影子',\n    '灭',\n    '孤',\n    '触发橙武',\n    '孤',\n    '孤',\n    '孤',\n    '点掉橙武',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n    '吃影子',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '吃影子',\n    '行',\n    '留',\n    '断',\n    '横',\n    '沧',\n    '沧',\n    '沧',\n    '灭',\n    '孤',\n    '决',\n    '留',\n    '行',\n    '行',\n    '留',\n    '行',\n    '行',\n    '留',\n    '断',\n  ],\n}\n\nexport default 橙武_循环2\n","import { Button, Checkbox, Dropdown, Menu, Popover, Select, Tooltip } from 'antd'\nimport React from 'react'\nimport { 循环基础技能数据类型, 模拟信息类型 } from '../../simulator/type'\nimport 快速导入默认循环 from '../../constant/快速导入默认循环'\nimport { useAppSelector } from '@/hooks'\nimport './index.css'\nimport { 延迟设定 } from '@/数据/常量'\ninterface CycleModalHeaderProps {\n  cycle: 循环基础技能数据类型[]\n  设置自定义循环保存弹窗: (e: boolean) => void\n  清空循环: () => void\n  起手驰风: boolean\n  设置起手驰风: (e: boolean) => void\n  快速导入循环: (e: 循环基础技能数据类型[]) => void\n  更新奇穴弹窗展示: (e: boolean) => void\n  更新奇穴信息: (e: string[]) => void\n  加速等级: number\n  更新加速等级: (e: number) => void\n  网络延迟: number\n  更新网络延迟: (e: number) => void\n  模拟信息: 模拟信息类型\n}\n\nfunction CycleModalHeader(props: CycleModalHeaderProps) {\n  const {\n    cycle,\n    设置自定义循环保存弹窗,\n    清空循环,\n    起手驰风,\n    设置起手驰风,\n    快速导入循环,\n    更新奇穴弹窗展示,\n    更新奇穴信息,\n    加速等级,\n    更新加速等级,\n    模拟信息,\n    网络延迟,\n    更新网络延迟,\n  } = props\n\n  const 自定义循环 = useAppSelector((state) => state?.data?.自定义循环列表)\n\n  const 快捷添加循环 = (名称, 类型 = '默认') => {\n    const 数据源 = 类型 === '默认' ? 快速导入默认循环 : 自定义循环\n\n    const 当前循环数据 = 数据源?.find((item) => item.名称 === 名称)\n\n    const 技能序列信息 = (当前循环数据?.技能序列 || [])\n      .map((item) => {\n        return 模拟信息?.技能基础数据?.find((a) => a?.技能名称 === item) as 循环基础技能数据类型\n      })\n      .filter((item) => item)\n\n    快速导入循环(技能序列信息)\n    if (当前循环数据?.奇穴) {\n      更新奇穴信息(当前循环数据?.奇穴)\n    }\n  }\n\n  return (\n    <div className={'cycle-simulator-modal-header space-between'}>\n      <div className={'cycle-simulator-modal-title-wrapper'}>\n        <h1 className={'cycle-simulator-modal-title'}>循环模拟</h1>\n        <Popover\n          content={\n            <div>\n              <p>1、点击下方技能按钮添加至循环内</p>\n              <p>2、可以整行删除、复制本行到最后一行</p>\n              <p>3、可以在单行内拖动改变技能顺序</p>\n              <p>\n                更多使用说明详见：\n                <a href='https://www.jx3box.com/tool/75292' target='_blank' rel='noreferrer'>\n                  使用手册及FAQ\n                </a>\n              </p>\n            </div>\n          }\n        >\n          <span className={'cycle-simulator-help'}>如何使用</span>\n        </Popover>\n        {/* <Popover\n          content={\n            <div>\n              目前未支持的功能\n            </div>\n          }\n        >\n          <span className={'cycle-not-support'}>未支持功能</span>\n        </Popover> */}\n      </div>\n      <div className={'cycle-simulator-header-btns'}>\n        <Checkbox\n          className={'cycle-simulator-header-checkbox'}\n          checked={起手驰风}\n          // value={起手驰风}\n          onChange={(e) => 设置起手驰风(e.target.checked)}\n        >\n          起手驰风\n        </Checkbox>\n        <Select\n          size='small'\n          className={'cycle-simulator-header-select'}\n          value={加速等级}\n          onChange={更新加速等级}\n          options={Array.from({ length: 6 }, (v, i) => i).map((a) => {\n            return {\n              value: a,\n              label: `${a}段加速`,\n            }\n          })}\n        />\n        <Select\n          size='small'\n          className={'cycle-simulator-header-select'}\n          value={网络延迟}\n          onChange={更新网络延迟}\n          options={延迟设定}\n        />\n        <Dropdown\n          overlay={\n            <Menu>\n              {快速导入默认循环?.map((item) => {\n                return (\n                  <Menu.Item key={item?.名称} onClick={() => 快捷添加循环(item?.名称)}>\n                    {item?.名称}\n                  </Menu.Item>\n                )\n              })}\n              {自定义循环?.length\n                ? 自定义循环.map((item, index) => {\n                    return (\n                      <Menu.Item key={index} onClick={() => 快捷添加循环(item?.名称, '自定义')}>\n                        {item?.名称}\n                      </Menu.Item>\n                    )\n                  })\n                : null}\n            </Menu>\n          }\n        >\n          <Button size='small'>导入循环</Button>\n        </Dropdown>\n        <Tooltip title={'本奇穴设置只会在循环模拟器内生效，不影响外部'}>\n          <Button size='small' onClick={() => 更新奇穴弹窗展示(true)}>\n            奇穴设置\n          </Button>\n        </Tooltip>\n        <Button size='small' onClick={() => 清空循环()} danger>\n          清空循环\n        </Button>\n        <Tooltip title='自定义循环和原计算器其他循环的dps会心期望计算方式不同。会导致最终数值偏差。请勿进行跨循环比较。'>\n          <Button\n            size='small'\n            type='primary'\n            onClick={() => 设置自定义循环保存弹窗(true)}\n            disabled={cycle?.length < 1 || 模拟信息?.循环执行结果 === '异常'}\n          >\n            保存为自定义循环\n          </Button>\n        </Tooltip>\n      </div>\n    </div>\n  )\n}\n\nexport default CycleModalHeader\n","import React from 'react'\nimport { 角色状态信息类型 } from '../../../simulator/type'\n\nimport Img_Dandao from '../../../assets/dandao.png'\nimport Img_Shuangdao from '../../../assets/canglang.png'\nimport { Tooltip } from 'antd'\nimport './index.css'\n\ninterface TitaiProps {\n  角色状态信息: 角色状态信息类型\n}\n\nfunction Titai(props: TitaiProps) {\n  const { 角色状态信息 } = props\n\n  return (\n    <div className={'cycle-status-bar-content'}>\n      <div className={'cycle-status-bar-title'}>体态</div>\n      <Tooltip title={角色状态信息?.体态}>\n        <img\n          className={'cycle-status-bar-titai-img'}\n          src={角色状态信息?.体态 === '单刀' ? Img_Dandao : Img_Shuangdao}\n          alt=''\n        />\n      </Tooltip>\n    </div>\n  )\n}\n\nexport default Titai\n","import React from 'react'\nimport { 角色状态信息类型 } from '../../../simulator/type'\n\nimport { Progress } from 'antd'\nimport './index.css'\n\ninterface RuiyiProps {\n  角色状态信息: 角色状态信息类型\n}\n\nfunction Ruiyi(props: RuiyiProps) {\n  const { 角色状态信息 } = props\n\n  return (\n    <div className={'cycle-status-bar-content'}>\n      <div className={'cycle-status-bar-title'}>锐意</div>\n      <div className={'cycle-status-bar-body'}>\n        <Progress\n          className={'cycle-status-bar-ruiyi'}\n          percent={角色状态信息?.锐意}\n          format={(percent) => `${percent}`}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Ruiyi\n","import React from 'react'\n\nimport { Space, Tooltip } from 'antd'\nimport { Buff枚举 } from '../../../simulator/type'\nimport { 每秒郭氏帧 } from '@/数据/常量'\nimport './index.css'\n\ninterface BuffProps {\n  title: string\n  buff列表: Buff枚举\n  当前时间点: number\n}\n\nfunction Buff(props: BuffProps) {\n  const { title, buff列表, 当前时间点 } = props\n\n  const 当前buff列表 = Object.keys(buff列表).map((item) => buff列表[item])\n\n  return (\n    <div className={'cycle-status-bar-content cycle-status-bar-buff-content'}>\n      <div className={'cycle-status-bar-title'}>{title}</div>\n      <Space className={'cycle-status-bar-buff-list'} size={[8, 8]} wrap>\n        {当前buff列表?.length ? (\n          当前buff列表.map((item) => {\n            const 应该消失时间 = (item.刷新时间 || 0) + (item.最大持续时间 || 0)\n            const 剩余时间 = 应该消失时间 - 当前时间点 || 0\n            const 剩余时间秒 = (剩余时间 / 每秒郭氏帧).toFixed(1)\n            const 层数 = item.当前层数 || 0\n            return (\n              <div className={'cycle-status-bar-buff'} key={item.名称}>\n                <div className={'cycle-status-bar-buff-item'}>\n                  <Tooltip\n                    title={\n                      item.名称 === '流岚' ? (\n                        <>\n                          {item.名称}\n                          {((层数 - 1) * 20 + 剩余时间 / 每秒郭氏帧).toFixed(1)}秒\n                        </>\n                      ) : (\n                        <>{`${item.名称}${层数 > 1 ? `${层数}层` : ''}`}</>\n                      )\n                    }\n                  >\n                    <img className={'cycle-status-bar-buff-img'} src={item.图标} />\n                  </Tooltip>\n                  {层数 > 1 ? (\n                    <span className={'cycle-status-bar-buff-count'}>{item.当前层数}</span>\n                  ) : null}\n                </div>\n                <p\n                  className={`cycle-status-bar-buff-second ${\n                    剩余时间 < 每秒郭氏帧 * 2 ? 'cycle-status-bar-buff-second-limit' : ''\n                  }`}\n                >\n                  {剩余时间秒}\n                </p>\n              </div>\n            )\n          })\n        ) : (\n          <p className={'cycle-buff-empty'}>无</p>\n        )}\n      </Space>\n    </div>\n  )\n}\n\nexport default Buff\n","import React from 'react'\nimport { Modal, ModalProps, Table } from 'antd'\nimport 循环模拟技能基础数据, { 日志类型数组 } from '../../../../constant/skill'\nimport { 每秒郭氏帧 } from '@/数据/常量'\nimport { 循环日志数据类型 } from '../../../../simulator/type'\nimport '../../../../index.css'\n\ninterface BattleLogModalProps extends ModalProps {\n  logData: 循环日志数据类型[]\n}\n\nconst BattleLogModal: React.FC<BattleLogModalProps> = (props) => {\n  const { open, onCancel, logData } = props\n\n  const columns = [\n    {\n      title: '日志',\n      dataIndex: '日志',\n      filters: [...循环模拟技能基础数据, { 技能名称: '流血' }]?.map((item) => {\n        return {\n          text: item?.技能名称,\n          value: item?.技能名称,\n        }\n      }),\n      onFilter: (value: any, record) => {\n        return record.日志?.includes(value) || record?.日志类型?.includes(value)\n      },\n    },\n    {\n      title: '日志类型',\n      dataIndex: '日志类型',\n      filters: 日志类型数组?.map((item) => {\n        return {\n          text: item,\n          value: item,\n        }\n      }),\n      onFilter: (value: any, record) => record.日志类型.indexOf(value) === 0,\n    },\n    {\n      title: '伤害次数',\n      dataIndex: '伤害次数',\n      render: (_, row) => {\n        return row?.其他数据?.伤害次数 || ''\n      },\n    },\n    {\n      title: 'buff列表',\n      dataIndex: 'buff列表',\n      render: (_, record) => {\n        return record.日志类型 === '造成伤害' ? (_ || [])?.join(',') || '-' : '-'\n      },\n    },\n    {\n      title: '日志帧',\n      dataIndex: '日志时间',\n      render: (_) => {\n        return _\n      },\n    },\n    {\n      title: '日志秒',\n      dataIndex: '日志秒',\n      render: (_, row) => {\n        return row?.日志时间 / 每秒郭氏帧\n      },\n    },\n    // {\n    //   title: '造成伤害',\n    //   dataIndex: '造成伤害',\n    // },\n    // {\n    //   title: '造成总伤害',\n    //   dataIndex: '造成总伤害',\n    // },\n    // {\n    //   title: '秒伤',\n    //   dataIndex: '秒伤',\n    // },\n  ]\n\n  return (\n    <Modal\n      className='cycle-simulator-modal'\n      open={open}\n      onCancel={onCancel}\n      title={\n        <div className={'cycle-simulator-modal-header'}>\n          <h1 className={'cycle-simulator-modal-title'}>战斗日志</h1>\n        </div>\n      }\n      width={'80%'}\n      centered\n      footer={false}\n    >\n      <Table\n        dataSource={logData}\n        columns={columns}\n        size='small'\n        pagination={{ pageSize: 100, showTotal: (total) => total }}\n      />\n    </Modal>\n  )\n}\n\nexport default BattleLogModal\n","import React from 'react'\nimport 结果统计 from '@/功能模块/计算结果/结果统计'\nimport { 计算结果技能列表类型 } from '@/@types/输出'\nimport '../../../../index.css'\n\ninterface SkillCountModalProps {\n  open: boolean\n  onCancel: () => void\n  dpsList: 计算结果技能列表类型[]\n  total: number\n}\n\nconst SkillCountModal: React.FC<SkillCountModalProps> = (props) => {\n  const { open, onCancel, total, dpsList } = props\n\n  return (\n    <结果统计\n      计算结果={{\n        总伤: total,\n        计算结果技能列表: dpsList,\n      }}\n      visible={open}\n      onClose={() => onCancel()}\n    />\n  )\n}\n\nexport default SkillCountModal\n","import { 循环日志数据类型 } from '../../../../../simulator/type'\n\nconst 过滤的buff列表 = ['长溯']\n\nexport const 获取Buff覆盖率 = (日志: 循环日志数据类型[], 总战斗用时: number) => {\n  // 以buff个体分类，组成数字数组代表buff持续时间段\n  const Buff枚举: {\n    [key: string]: number[][]\n  } = {}\n  const 覆盖率 = {}\n\n  // 遍历日志塞入数组\n  for (let i = 0; i < 日志.length; i++) {\n    if (\n      (日志[i]?.日志类型 === '目标buff变动' || 日志[i]?.日志类型 === '自身buff变动') &&\n      (日志[i]?.日志?.includes('获得') || 日志[i]?.日志?.includes('失去'))\n    ) {\n      // 当前buff信息\n      const logName = 日志[i]?.日志\n      const type = logName?.includes('获得') ? 'get' : 'lose'\n      const buffName = type === 'get' ? logName?.split('获得')?.[1] : logName?.split('失去')?.[1]\n      const currentTime: number = 日志[i]?.日志时间 || 0\n      if (buffName && !过滤的buff列表?.includes(buffName)) {\n        if (type === 'get') {\n          if (Buff枚举?.[buffName]) {\n            // 判断当前最后一个数组的长度，如果为1代表还没结束，不处理。为2再塞入新的起始时间\n            if (Buff枚举[buffName][Buff枚举[buffName].length - 1]?.length > 1) {\n              Buff枚举[buffName].push([currentTime])\n            }\n          } else {\n            Buff枚举[buffName] = [[currentTime]]\n          }\n        } else if (type === 'lose') {\n          if (Buff枚举?.[buffName]) {\n            if (Buff枚举?.[buffName]?.[Buff枚举?.[buffName]?.length - 1]) {\n              Buff枚举[buffName][Buff枚举[buffName].length - 1].push(currentTime)\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // 循环结束，对没有结束时间的buff做补充，塞入总战斗用时作为结束时间\n  // 同时，计算各buff的覆盖率\n  Object.keys(Buff枚举).forEach((key) => {\n    if (Buff枚举[key]?.length) {\n      if (\n        Buff枚举[key]?.[Buff枚举[key]?.length - 1] &&\n        Buff枚举[key]?.[Buff枚举[key]?.length - 1]?.length < 2\n      ) {\n        Buff枚举[key][Buff枚举[key].length - 1].push(总战斗用时)\n      }\n\n      let 总持续时间 = 0\n      for (let i = 0; i < Buff枚举[key].length; i++) {\n        if (Buff枚举[key][i] && Buff枚举[key][i].length === 2) {\n          总持续时间 = 总持续时间 + Buff枚举[key][i][1] - Buff枚举[key][i][0]\n        }\n      }\n      覆盖率[key] = ((总持续时间 / 总战斗用时) * 100)?.toFixed(3)\n    }\n  })\n\n  return {\n    Buff枚举,\n    覆盖率,\n  }\n}\n\nexport const 格式化buff覆盖数组 = (Buff枚举) => {\n  const res: any[] = []\n  Object.keys(Buff枚举).forEach((key) => {\n    if (Buff枚举[key]?.length) {\n      Buff枚举[key].forEach((range) => {\n        res.push({ type: key, range: range })\n      })\n    }\n  })\n  return res\n}\n","import { Modal, ModalProps, Space } from 'antd'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { Chart } from '@antv/g2'\nimport { 循环日志数据类型 } from '../../../../../simulator/type'\nimport './index.css'\nimport { 格式化buff覆盖数组, 获取Buff覆盖率 } from './util'\n\ninterface BuffCountModalProps extends ModalProps {\n  open: boolean\n  onCancel: () => void\n  日志: 循环日志数据类型[]\n  总战斗用时: number // 总战斗用时\n}\n\nfunction BuffCountModal(props: BuffCountModalProps) {\n  const { open, onCancel, 日志, 总战斗用时 } = props\n  const [chartData, setChartData] = useState<any>()\n  const limitRef: any = useRef<any>()\n  const [覆盖率, 设置覆盖率] = useState<any>({})\n\n  useEffect(() => {\n    if (open) {\n      setTimeout(() => {\n        initChart()\n      }, 20)\n    }\n    if (open) {\n      limitRef.current = false\n    } else {\n      limitRef.current = false\n      设置覆盖率({})\n      setChartData(undefined)\n    }\n  }, [open, 日志, 总战斗用时])\n\n  const initChart = () => {\n    if (limitRef.current) {\n      return\n    }\n    limitRef.current = true\n\n    const chart = chartData\n      ? chartData\n      : new Chart({\n          container: 'cycle-buff-count-chart',\n          autoFit: true,\n          renderer: 'canvas',\n          padding: [24, 120, 100, 120],\n        })\n\n    chart.tooltip({\n      crosshairs: false,\n    })\n\n    if (!chartData) {\n      setChartData(chart)\n    }\n\n    const dataSource = getDataSource()\n\n    chart.source(dataSource, {\n      time: {\n        tickCount: 10,\n      },\n    })\n    chart.axis('time', {\n      label: {\n        style: {\n          textAlign: 'center', // 文本对齐方向，可取值为： start middle end\n          fontSize: 16, // 文本大小\n        },\n      },\n    })\n\n    const data = getDataSource()\n\n    chart.data(data)\n    chart.coordinate().transpose()\n    chart.interval().position('type*range').color('type').label('range', { offset: 10 })\n    // .color(DOMAIN_COLOR)\n    chart.render()\n    // setLoading(false)\n\n    setTimeout(() => {\n      limitRef.current = false\n    }, 10)\n  }\n\n  const getDataSource = () => {\n    const { Buff枚举, 覆盖率 } = 获取Buff覆盖率(日志, 总战斗用时)\n    设置覆盖率(覆盖率)\n    return 格式化buff覆盖数组(Buff枚举)\n  }\n\n  return (\n    <Modal\n      open={open}\n      onCancel={onCancel}\n      title={\n        <div className={'cycle-simulator-modal-header'}>\n          <h1 className={'cycle-simulator-modal-title'}>Buff覆盖情况（时间单位：帧）</h1>\n        </div>\n      }\n      width={'80%'}\n      centered\n      footer={false}\n    >\n      <Space className='cycle-buff-count-text' size={[16, 16]} wrap>\n        {Object.keys(覆盖率).map((item) => {\n          return (\n            <div key={item} className={'cycle-buff-count-text-wrap'}>\n              <span className='cycle-buff-count-text-label'>{item}：</span>\n              <span className='cycle-buff-count-text-value'>{覆盖率[item]}%</span>\n            </div>\n          )\n        })}\n      </Space>\n      {open ? <div id='cycle-buff-count-chart' className={'cycle-buff-count-chart'} /> : null}\n    </Modal>\n  )\n}\n\nexport default BuffCountModal\n","import React, { useState } from 'react'\nimport { Alert, Tooltip } from 'antd'\nimport { PieChartOutlined, CalendarOutlined, AlignLeftOutlined } from '@ant-design/icons'\nimport { 当前计算结果类型 } from '@/@types/输出'\n\nimport { 循环日志数据类型, 模拟信息类型 } from '../../../simulator/type'\n// import DpsResModal from './components/DpsResModal'\nimport BattleLogModal from './components/BattleLogModal'\nimport SkillCountModal from './components/SkillCountModal'\nimport BuffCountModal from './components/BuffCountModal'\nimport './index.css'\n\ninterface DpsResProps {\n  日志信息: 循环日志数据类型[]\n  模拟信息: 模拟信息类型\n  模拟DPS结果: 当前计算结果类型\n}\n\nfunction DpsRes(props: DpsResProps) {\n  const { 模拟信息, 日志信息, 模拟DPS结果 } = props\n\n  // dps曲线\n  // const [dpsModal, setDpsModal] = useState<boolean>(false)\n\n  // buff分析\n  const [buffCountModalOpen, setBuffCountModalOpen] = useState<boolean>(false)\n  // 日志log\n  const [logModalOpen, setLogModalOpen] = useState<boolean>(false)\n  // 技能统计\n  const [countModal, setCountModal] = useState<boolean>(false)\n\n  // const 开发中 = () => {\n  //   message.success('功能开发中，敬请期待')\n  // }\n\n  return (\n    <div\n      className={`cycle-bar-dps-res ${\n        模拟信息?.循环执行结果 === '异常' ? 'cycle-bar-dps-res-error' : ''\n      }`}\n    >\n      {模拟信息?.循环执行结果 === '异常' ? (\n        <div className={'cycle-dps-res-error'}>\n          <h1 className={'cycle-dps-res-error-title'}>循环异常</h1>\n          <Alert\n            type='error'\n            showIcon\n            message={`异常信息：${模拟信息?.循环异常信息?.异常信息?.信息}`}\n          />\n        </div>\n      ) : 模拟DPS结果?.秒伤 ? (\n        <div className={'cycle-dps-res-success'}>\n          <div className={'cycle-dps-res-success-content'}>\n            <h1 className={'cycle-dps-res-num'}>{模拟DPS结果?.秒伤}</h1>\n            <div className={'cycle-dps-res-success-text-content'}>\n              <div>\n                <span className={'cycle-dps-res-success-text'}>战斗用时</span>\n                <span className={'cycle-dps-res-success-text cycle-dps-res-success-highlight'}>\n                  {模拟DPS结果?.秒伤计算时间}秒\n                </span>\n              </div>\n              <div className={'cycle-dps-res-icons'}>\n                <Tooltip title='Buff分析' placement='left'>\n                  <PieChartOutlined\n                    className={'cycle-dps-res-icon'}\n                    onClick={() => setBuffCountModalOpen(true)}\n                  />\n                </Tooltip>\n                <Tooltip title='战斗日志' placement='left'>\n                  <CalendarOutlined\n                    className={'cycle-dps-res-icon'}\n                    onClick={() => setLogModalOpen(true)}\n                  />\n                </Tooltip>\n                <Tooltip title='技能统计' placement='left'>\n                  <AlignLeftOutlined\n                    className={'cycle-dps-res-icon'}\n                    onClick={() => setCountModal(true)}\n                  />\n                </Tooltip>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : null}\n      {/* dps结果 */}\n      {/* <DpsResModal open={dpsModal} onCancel={() => setDpsModal(false)} logData={日志信息} /> */}\n      {/* 战斗日志 */}\n      <BattleLogModal\n        open={logModalOpen}\n        onCancel={() => setLogModalOpen(false)}\n        logData={日志信息}\n      />\n      {/* 技能统计 */}\n      <SkillCountModal\n        open={countModal}\n        onCancel={() => setCountModal(false)}\n        dpsList={模拟DPS结果?.计算结果技能列表}\n        total={模拟DPS结果?.总伤}\n      />\n      {/* Buff分析 */}\n      {buffCountModalOpen && (\n        <BuffCountModal\n          open={buffCountModalOpen}\n          onCancel={() => setBuffCountModalOpen(false)}\n          日志={日志信息}\n          总战斗用时={模拟信息?.当前时间}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default DpsRes\n","// 当前角色状态栏，只用来展示\nimport React from 'react'\nimport { 当前计算结果类型 } from '@/@types/输出'\nimport { 循环日志数据类型, ShowCycleSingleSkill, 模拟信息类型 } from '../../simulator/type'\n\nimport Titai from './titai'\nimport Ruiyi from './ruiyi'\nimport Buff from './buff'\nimport DpsRes from './dpsRes'\nimport './index.css'\n\ninterface StatusBarProps {\n  模拟信息: 模拟信息类型\n  完整循环: ShowCycleSingleSkill[]\n  日志信息: 循环日志数据类型[]\n  模拟DPS结果: 当前计算结果类型\n}\n\nfunction StatusBar(props: StatusBarProps) {\n  const { 模拟信息, 日志信息, 模拟DPS结果 } = props\n\n  return (\n    <div className={'cycle-status-bar'}>\n      <Titai 角色状态信息={模拟信息?.角色状态信息} />\n      <Ruiyi 角色状态信息={模拟信息?.角色状态信息} />\n      <Buff\n        title='自身Buff'\n        buff列表={模拟信息?.当前自身buff列表}\n        当前时间点={模拟信息?.当前时间}\n      />\n      <Buff\n        title='目标Buff'\n        buff列表={模拟信息?.当前目标buff列表}\n        当前时间点={模拟信息?.当前时间}\n      />\n      <DpsRes 模拟信息={模拟信息} 日志信息={日志信息} 模拟DPS结果={模拟DPS结果} />\n    </div>\n  )\n}\n\nexport default StatusBar\n","import React from 'react'\nimport { 原始Buff数据 } from '../../constant/skill'\n\nfunction BuffItem({ data, ...rest }) {\n  const buff = 原始Buff数据?.[data]\n  return buff ? <img src={buff.图标} {...rest} /> : null\n}\n\nexport default BuffItem\n","// 技能循环显示技能单元\nimport React, { useMemo } from 'react'\nimport { Badge, Dropdown, Space, Tooltip } from 'antd'\nimport { CloseCircleFilled } from '@ant-design/icons'\nimport classNames from 'classnames'\nimport { ShowCycleSingleSkill, 模拟信息类型 } from '../../simulator/type'\nimport { 每秒郭氏帧 } from '@/数据/常量'\nimport BuffItem from './BuffItem'\nimport './index.css'\ninterface CycleSkillItemProps {\n  技能: ShowCycleSingleSkill\n  删除循环技能: (e: number) => void\n  模拟信息: 模拟信息类型\n  buff覆盖数据: number[]\n  更新buff覆盖数据: (e: number[]) => void\n  点击下拉菜单: (e: any) => void\n}\n\nfunction CycleSkillItem(props: CycleSkillItemProps) {\n  const { 技能, 删除循环技能, 模拟信息, buff覆盖数据, 更新buff覆盖数据, 点击下拉菜单 } = props\n\n  const 技能释放时间 = Math.round(((技能.实际释放时间 || 0) / 每秒郭氏帧) * 100) / 100\n  const 间隔CD = (技能.实际释放时间 || 0) - (技能.计划释放时间 || 0)\n  // 把帧转成秒，保留两位小数\n  const 剩余秒 = Math.round((间隔CD / 每秒郭氏帧) * 100) / 100\n  // 是否异常\n  // 存在异常索引\n  const 索引 = (模拟信息?.循环异常信息?.异常索引 || 0) + -1\n  const 是否异常 = 模拟信息?.循环执行结果 === '异常' ? (技能?.index || 0) >= 索引 : false\n  const 当前异常 = 模拟信息?.循环执行结果 === '异常' ? (技能?.index || 0) === 索引 : false\n\n  const 技能释放结果 = 技能?.技能释放记录结果 || {}\n\n  const 判断有无重要buff标记 = () => {\n    if (技能释放结果?.造成buff数据?.buff名称) {\n      更新buff覆盖数据([\n        技能释放结果?.造成buff数据?.buff开始时间,\n        技能释放结果?.造成buff数据?.buff结束时间,\n      ])\n    }\n  }\n\n  const 卸除重要buff标记 = () => {\n    更新buff覆盖数据([])\n  }\n\n  const 当前是否需要高亮展示在buff覆盖中 = useMemo(() => {\n    if (\n      (技能?.实际释放时间 || 0) <= buff覆盖数据?.[1] &&\n      (技能?.实际释放时间 || 0) >= buff覆盖数据?.[0]\n    ) {\n      return true\n    } else {\n      return false\n    }\n  }, [buff覆盖数据, 技能])\n\n  const cls = classNames(\n    'cycle-simulator-setting-skill',\n    是否异常 ? 'cycle-simulator-setting-skill-error' : '',\n    当前是否需要高亮展示在buff覆盖中 ? 'cycle-simulator-setting-skill-highlight' : ''\n  )\n\n  const 下拉菜单 = [\n    {\n      key: '前部插入',\n      label: (\n        <span>\n          在<span className='cycle-simulator-menu-tip-before'>前部</span>添加技能\n        </span>\n      ),\n    },\n    {\n      key: '后部插入',\n      label: (\n        <span>\n          在<span className='cycle-simulator-menu-tip-after'>后部</span>添加技能\n        </span>\n      ),\n    },\n  ]\n\n  return (\n    <Badge count={剩余秒} offset={[-52, 8]} className={'cycle-simulator-setting-skill-drag'}>\n      <Dropdown menu={{ items: 下拉菜单, onClick: 点击下拉菜单 }} trigger={['contextMenu']}>\n        <div className={cls} onMouseEnter={判断有无重要buff标记} onMouseLeave={卸除重要buff标记}>\n          <Tooltip\n            title={\n              <div>\n                <p>{技能?.技能名称}</p>\n                {技能释放结果.实际伤害技能 ? <p>伤害名称：{技能释放结果.实际伤害技能}</p> : null}\n                {技能释放时间 ? <p>释放时间：{技能释放时间}秒</p> : null}\n                {剩余秒 ? <p>释放等待CD：{剩余秒}秒</p> : null}\n                {技能释放结果?.重要buff列表?.length ? (\n                  <Space className={'cycle-simulator-setting-buff'} size={[8, 8]} wrap>\n                    {技能释放结果?.重要buff列表.map((item) => {\n                      return (\n                        <BuffItem\n                          data={item}\n                          key={item}\n                          className={'cycle-simulator-setting-buff-item'}\n                        />\n                      )\n                    })}\n                  </Space>\n                ) : null}\n                {是否异常 ? (\n                  当前异常 ? (\n                    <p>异常：{模拟信息?.循环异常信息?.异常信息?.信息}</p>\n                  ) : (\n                    <p>前置技能异常</p>\n                  )\n                ) : null}\n              </div>\n            }\n          >\n            <img className={'daozong-cycle-simulator-setting-skill-img'} src={技能?.图标} />\n          </Tooltip>\n          <CloseCircleFilled\n            className={'cycle-simulator-setting-skill-close'}\n            onClick={() => 删除循环技能(技能?.index || 0)}\n          />\n          {技能释放结果?.伤害段数 ? (\n            <span className={`cycle-simulator-setting-skill-count count${技能释放结果?.伤害段数}`}>\n              {技能释放结果?.伤害段数}\n            </span>\n          ) : null}\n        </div>\n      </Dropdown>\n    </Badge>\n  )\n}\n\nexport default CycleSkillItem\n","import React, { useMemo } from 'react'\nimport { 循环基础技能数据类型, 技能GCD组, 模拟信息类型 } from '../../simulator/type'\nimport { 每秒郭氏帧 } from '@/数据/常量'\nimport classNames from 'classnames'\nimport { Badge, Tooltip } from 'antd'\nimport { ERROR_ACTION } from '../../simulator/utils'\n\ninterface AddCycleSkillBtnProps {\n  技能: 循环基础技能数据类型\n  完整循环: 循环基础技能数据类型[]\n  onClick?: any\n  className?: string\n  模拟信息: 模拟信息类型\n  style?: any\n}\n\ninterface 异常信息数据 {\n  是否禁用?: boolean\n  角标数字?: number\n  异常描述?: string\n}\n\n// 添加循环技能按钮组件\nconst AddCycleSkillBtn: React.FC<AddCycleSkillBtnProps> = (props) => {\n  const { 技能, 模拟信息, onClick, className, ...rest } = props\n\n  const 释放等待CD = 计算可以释放时技能CD(模拟信息, 技能)\n  const 技能运行状态 = 模拟信息?.当前各技能运行状态?.[技能?.技能名称]\n\n  const 异常信息: 异常信息数据 = useMemo(() => {\n    let 禁用信息 = {}\n    if (技能?.技能类型 !== '其他' && 模拟信息?.角色状态信息?.体态 !== 技能?.技能类型) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.体态错误?.信息,\n      }\n    } else if (技能?.技能名称 === '断' && (模拟信息?.角色状态信息?.锐意 || 0) < 100) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.锐意不足?.信息,\n      }\n    } else if (技能?.技能名称 === '吃影子' && !模拟信息?.当前自身buff列表?.['身形']?.当前层数) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.身形不足?.信息,\n      }\n    } else if (技能?.技能名称 === '点掉橙武' && !模拟信息?.当前自身buff列表?.['橙武']?.当前层数) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.BUFF错误?.信息,\n      }\n    }\n    if (释放等待CD > 0 && 技能运行状态?.当前层数 >= 1) {\n      return {\n        ...禁用信息,\n        角标数字: 释放等待CD,\n        异常描述: `当前技能处于充能中，剩余${释放等待CD}秒`,\n      }\n    } else if (释放等待CD > 0) {\n      return {\n        ...禁用信息,\n        角标数字: 释放等待CD,\n        异常描述: `当前技能处于冷却中，剩余${释放等待CD}秒`,\n      }\n    } else {\n      return { ...禁用信息 }\n    }\n  }, [释放等待CD, 技能, 模拟信息])\n\n  // 点击前判断是否可以释放\n  const beforeOnClick = () => {\n    if (异常信息?.是否禁用) {\n      return\n    }\n    onClick()\n  }\n\n  const cls = classNames(className, 异常信息?.是否禁用 ? 'cycle-simulator-setting-btn-error' : '')\n\n  return (\n    <div onClick={beforeOnClick} className={cls} {...rest}>\n      <Tooltip title={异常信息?.异常描述 || 技能?.说明 || ''}>\n        <Badge count={异常信息?.角标数字} className={'cycle-add-btn-wrap'} offset={[0, 0]}>\n          <img className={`cycle-add-btn`} src={技能?.图标} />\n          {技能运行状态?.当前层数 !== undefined ? (\n            <span className={'cycle-add-btn-count'}>{技能运行状态?.当前层数}</span>\n          ) : null}\n        </Badge>\n      </Tooltip>\n      <p className={'cycle-add-btn-text'}>{技能?.技能原始名称 || 技能?.技能名称}</p>\n    </div>\n  )\n}\n\nexport default AddCycleSkillBtn\n\nconst 计算可以释放时技能CD = (模拟信息: 模拟信息类型, 技能: 循环基础技能数据类型) => {\n  const 技能运行状态 = 模拟信息?.当前各技能运行状态?.[技能?.技能名称]\n\n  const GCD = 检查GCD(技能, 模拟信息.当前GCD组)\n\n  // 当前技能可以释放时间当前时间（为上一个技能释放结束时间）加上本技能释放前结算GCD\n  const 可以释放时间 = (模拟信息?.当前时间 || 0) + (GCD || 0)\n  const 技能CD = (技能运行状态?.计划下次充能时间点 || 0) - 可以释放时间\n  // 把帧转成秒，保留两位小数\n  const 剩余秒 = Math.round((技能CD / 每秒郭氏帧) * 100) / 100\n  return 剩余秒\n}\n\nconst 检查GCD = (技能: 循环基础技能数据类型, GCD组: 技能GCD组) => {\n  let 校验GCD组: string = 技能.技能GCD组 as string\n  if (技能.技能GCD组 === '自身') {\n    校验GCD组 = 技能?.技能名称\n  }\n  if (校验GCD组) {\n    // 大部分技能只检查自己的GCD\n    const GCD = GCD组[校验GCD组]\n    return GCD\n  } else {\n    return 0\n  }\n}\n","export const 快捷添加数据: 快捷添加数据类型[] = [\n  {\n    名称: '三沧孤',\n    技能序列: ['沧', '沧', '沧', '孤'],\n    color: 'blue',\n  },\n  {\n    名称: '决留行',\n    技能序列: ['决', '留', '行'],\n    color: 'magenta',\n  },\n  // {\n  //   名称: '行断',\n  //   技能序列: ['行', '断'],\n  //   color: 'volcano',\n  // },\n  {\n    名称: '横三沧孤',\n    技能序列: ['横', '沧', '沧', '沧', '孤'],\n    color: 'purple',\n  },\n  {\n    名称: '决留三行',\n    技能序列: ['决', '留', '行', '行', '行'],\n    color: 'green',\n  },\n  // {\n  //   名称: '停断',\n  //   技能序列: ['停', '断'],\n  //   color: 'red',\n  // },\n]\n\nexport interface 快捷添加数据类型 {\n  名称: string\n  技能序列: string[]\n  color?: string\n}\n","import { Col, Row, Space, Tag } from 'antd'\nimport React from 'react'\nimport { 循环基础技能数据类型, 模拟信息类型 } from '../../simulator/type'\nimport AddCycleSkillBtn from './AddCycleSkillBtn'\nimport { 快捷添加数据, 快捷添加数据类型 } from './快捷添加'\nimport './index.css'\n\ninterface AddCycleSkillBtnsProps {\n  新增循环技能: (data: 循环基础技能数据类型) => void\n  批量新增循环: (data: 循环基础技能数据类型[]) => void\n  处理循环结果对象: { 完整循环: 循环基础技能数据类型[] }\n  模拟信息: 模拟信息类型\n  大橙武模拟: boolean\n}\n\nfunction AddCycleSkillBtns(props: AddCycleSkillBtnsProps) {\n  const { 新增循环技能, 批量新增循环, 处理循环结果对象, 模拟信息, 大橙武模拟 } = props\n\n  const 批量新增循环技能 = (数据: 快捷添加数据类型) => {\n    const 技能原始数据: 循环基础技能数据类型[] = 数据?.技能序列\n      .map((item) => {\n        return 模拟信息?.技能基础数据?.find((a) => a.技能名称 === item) || ({} as any)\n      })\n      .filter((item) => item)\n    if (技能原始数据?.length) {\n      批量新增循环(技能原始数据)\n    }\n  }\n\n  return (\n    <div className={'cycle-simulator-setting-btns'}>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'daozong-cycle-btn-type'}>流云势法</span>\n        <Space className={'cycle-simulator-setting-skills'} size={[6, 16]} wrap>\n          {模拟信息?.技能基础数据\n            ?.filter((item) => !item?.创建循环不可选 && item?.技能类型 === '单刀')\n            .map((item) => {\n              return (\n                <AddCycleSkillBtn\n                  onClick={() => 新增循环技能(item)}\n                  key={item?.技能名称}\n                  className={'daozong-cycle-simulator-setting-btn'}\n                  完整循环={处理循环结果对象?.完整循环 || []}\n                  技能={item}\n                  模拟信息={模拟信息}\n                />\n              )\n            })}\n        </Space>\n      </div>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'daozong-cycle-btn-type'}>破浪三式</span>\n        <Space className={'cycle-simulator-setting-skills'} size={[8, 16]} wrap>\n          {模拟信息?.技能基础数据\n            ?.filter((item) => !item?.创建循环不可选 && item?.技能类型 === '双刀')\n            .map((item) => {\n              return (\n                <AddCycleSkillBtn\n                  onClick={() => 新增循环技能(item)}\n                  key={item?.技能名称}\n                  className={'daozong-cycle-simulator-setting-btn'}\n                  完整循环={处理循环结果对象?.完整循环 || []}\n                  技能={item}\n                  模拟信息={模拟信息}\n                />\n              )\n            })}\n        </Space>\n      </div>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'daozong-cycle-btn-type'}>其他</span>\n        <Space className={'cycle-simulator-setting-skills'} size={[8, 16]} wrap>\n          {模拟信息?.技能基础数据\n            ?.filter((item) => {\n              if (!大橙武模拟 && item?.显示类型 === '大橙武模拟') {\n                return false\n              }\n              return !item?.创建循环不可选 && item?.技能类型 === '其他'\n            })\n            .map((item) => {\n              return (\n                <AddCycleSkillBtn\n                  onClick={() => 新增循环技能(item)}\n                  key={item?.技能名称}\n                  style={大橙武模拟 ? { padding: '0 6px' } : { padding: '0 8px' }}\n                  className={'daozong-cycle-simulator-setting-btn'}\n                  完整循环={处理循环结果对象?.完整循环 || []}\n                  技能={item}\n                  模拟信息={模拟信息}\n                />\n              )\n            })}\n        </Space>\n      </div>\n      <div className={'cycle-simulator-setting-item cycle-simulator-setting-quick-wrap'}>\n        <span className={'daozong-cycle-btn-type'}>快捷添加</span>\n        <Row className={'cycle-simulator-setting-quick'} gutter={[16, 8]}>\n          {快捷添加数据.map((item) => {\n            return (\n              <Col span={12} key={item?.名称}>\n                <Tag\n                  color={item?.color || 'blue'}\n                  onClick={() => 批量新增循环技能(item)}\n                  className={'cycle-simulator-setting-quick-item'}\n                >\n                  {item?.名称}\n                </Tag>\n              </Col>\n            )\n          })}\n        </Row>\n      </div>\n    </div>\n  )\n}\n\nexport default AddCycleSkillBtns\n","import { Alert, App, Checkbox, Form, Input, Modal, Select, Tabs } from 'antd'\nimport React, { useEffect, useMemo, useState } from 'react'\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport { 更新当前自定义循环列表 } from '@/store/data'\nimport { 延迟设定 } from '@/数据/常量'\nimport './index.css'\n\nconst { 计算循环 } = 获取当前数据()\n\ninterface SaveCustomCycleModalProps {\n  自定义循环保存弹窗: boolean\n  设置自定义循环保存弹窗: (e: boolean) => void\n  保存自定义循环: (名称, 加速选项, 延迟选项) => void\n}\n\nfunction SaveCustomCycleModal(props: SaveCustomCycleModalProps) {\n  const { modal } = App.useApp()\n\n  const { 自定义循环保存弹窗, 设置自定义循环保存弹窗, 保存自定义循环 } = props\n  // 保存类型，覆盖｜新增\n  const [自定义循环类型, 设置自定义循环类型] = useState<string>()\n  // 自定义循环名称保存输入\n  const [自定义循环名称输入, 设置自定义循环名称输入] = useState<string>()\n  // 保存类型，覆盖｜新增\n  const [覆盖循环名, 设置覆盖循环名] = useState<string>()\n  // 保存加速序列\n  const [加速选项, 设置加速选项] = useState<number[]>([0, 1, 2])\n  const [延迟选项, 设置延迟选项] = useState<number[]>([0, 1, 2])\n\n  const 自定义循环 = useAppSelector((state) => state?.data?.自定义循环列表)\n\n  const dispatch = useAppDispatch()\n\n  const 全部循环 = useMemo(() => {\n    return (计算循环 || []).concat(自定义循环)\n  }, [自定义循环, 计算循环])\n\n  useEffect(() => {\n    if (自定义循环保存弹窗) {\n      if (自定义循环?.length) {\n        设置自定义循环类型('覆盖')\n      } else {\n        设置自定义循环类型('新增')\n      }\n    } else {\n      设置自定义循环类型(undefined)\n      设置自定义循环名称输入(undefined)\n      设置覆盖循环名(undefined)\n    }\n  }, [自定义循环保存弹窗, 自定义循环])\n\n  const 保存自定义循环前 = () => {\n    const 名称 = 自定义循环类型 === '覆盖' ? 覆盖循环名 : 自定义循环名称输入\n    保存自定义循环(名称, 加速选项, 延迟选项)\n  }\n\n  // 删除自定义循环\n  const 删除循环前提示 = (e, 名称) => {\n    e.stopPropagation()\n    e.preventDefault()\n\n    modal.confirm({\n      title: `确定要删除循环【${名称}】吗?`,\n      content: '删除后将无法恢复',\n      okText: '我要删除',\n      onOk: async () => {\n        删除循环(名称)\n      },\n    })\n  }\n\n  const 删除循环 = (名称) => {\n    dispatch(更新当前自定义循环列表(自定义循环.filter((item) => item.名称 !== 名称)))\n  }\n\n  return (\n    <Modal\n      centered\n      title='保存自定义循环'\n      okButtonProps={{\n        disabled: !(自定义循环类型 === '覆盖' ? 覆盖循环名 : 自定义循环名称输入),\n      }}\n      open={自定义循环保存弹窗}\n      onCancel={() => 设置自定义循环保存弹窗(false)}\n      onOk={保存自定义循环前}\n      width={630}\n      destroyOnClose\n      className={'cycle-custom-save-modal'}\n    >\n      <Tabs\n        className={'cycle-custom-save-modal-content'}\n        type='card'\n        activeKey={自定义循环类型}\n        onChange={设置自定义循环类型}\n      >\n        <Tabs.TabPane tab={'覆盖'} key='覆盖'>\n          <Select\n            value={覆盖循环名}\n            onChange={设置覆盖循环名}\n            optionLabelProp='label'\n            placeholder={'请选择你要覆盖的循环'}\n          >\n            {自定义循环.map((item) => {\n              return (\n                <Select.Option value={item.名称} key={item.名称} label={item.名称}>\n                  <div className={'cycle-custom-save-label'}>\n                    <span>{item.名称}</span>\n                    <span\n                      onClick={(e) => 删除循环前提示(e, item.名称)}\n                      className={'cycle-custom-save-delete'}\n                    >\n                      删除\n                    </span>\n                  </div>\n                </Select.Option>\n              )\n            })}\n          </Select>\n        </Tabs.TabPane>\n        <Tabs.TabPane tab={'新增'} key='新增'>\n          <Form>\n            <Form.Item\n              rules={[\n                {\n                  validator: (_, value, callback) => {\n                    if (value) {\n                      if (全部循环?.some((item) => item?.名称 === value)) {\n                        callback('已存在相同的循环名，请更换')\n                      }\n                    }\n                    callback()\n                  },\n                },\n              ]}\n            >\n              <Input\n                value={自定义循环名称输入}\n                placeholder='请输入自定义循环名称'\n                onChange={(e) => 设置自定义循环名称输入(e?.target?.value)}\n              />\n            </Form.Item>\n          </Form>\n        </Tabs.TabPane>\n      </Tabs>\n      <div className='cycle-custom-save-checkbox'>\n        <p>加速</p>\n        <Checkbox.Group value={加速选项} onChange={(e) => 设置加速选项(e as number[])}>\n          {Array.from({ length: 6 }, (v, i) => i).map((a) => {\n            return (\n              <Checkbox value={a} key={a}>\n                {a}段\n              </Checkbox>\n            )\n          })}\n        </Checkbox.Group>\n        <p>延迟</p>\n        <Checkbox.Group value={延迟选项} onChange={(e) => 设置延迟选项(e as number[])}>\n          {延迟设定.map((item) => {\n            return (\n              <Checkbox value={item.value} key={item.value}>\n                {item.label}\n              </Checkbox>\n            )\n          })}\n        </Checkbox.Group>\n      </div>\n      <Alert message={'选项越少保存越快。没选择的选项在外部计算dps时不会进行计算。'} />\n    </Modal>\n  )\n}\n\nexport default SaveCustomCycleModal\n","// 奇穴数据，只在模拟循环内生效\nimport { Drawer, Form, Select, Tooltip } from 'antd'\nimport React, { useEffect } from 'react'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport './index.css'\nimport { useAppSelector } from '@/hooks'\n\nconst { 奇穴数据 = [] } = 获取当前数据()\n\ninterface QixueSetProps {\n  className?: string\n  奇穴信息: string[]\n  更新奇穴信息: (e: string[]) => void\n  奇穴弹窗展示: boolean\n  更新奇穴弹窗展示: (e: boolean) => void\n}\n\nconst QixueSetModal: React.FC<QixueSetProps> = (props) => {\n  const 当前奇穴信息 = useAppSelector((state) => state?.data?.当前奇穴信息)\n  const { 奇穴信息, 更新奇穴信息, 奇穴弹窗展示, 更新奇穴弹窗展示 } = props\n\n  const [form] = Form.useForm()\n\n  const handleChangeQixue = () => {\n    setTimeout(() => {\n      form?.validateFields().then((values) => {\n        const newArray = Object.keys(values).map((key) => {\n          return values[key] as string\n        })\n        更新奇穴信息(newArray)\n      })\n    }, 0)\n  }\n\n  // 监听表单变化\n  useEffect(() => {\n    const obj = {}\n    奇穴信息.map((item, index) => {\n      obj[index] = item || 当前奇穴信息[index]\n    })\n    form?.setFieldsValue({\n      ...obj,\n    })\n  }, [奇穴信息])\n\n  return (\n    <Drawer\n      title={'奇穴设置'}\n      open={奇穴弹窗展示}\n      onClose={() => 更新奇穴弹窗展示(false)}\n      placement='bottom'\n      height={140}\n      mask={false}\n      className={'qixue-simulator-set-drawer'}\n    >\n      <Form form={form} className={'qixue-simulator-set-drawer-wrap'}>\n        {奇穴数据.map((重, index) => {\n          return (\n            <Form.Item className={'qixue-simulator-set-item'} name={index} key={index + 1}>\n              <Select\n                className={'qixue-simulator-set-item-select'}\n                onChange={handleChangeQixue}\n                dropdownMatchSelectWidth={false}\n                optionLabelProp='label'\n                showArrow={false}\n                popupClassName={'qixue-simulator-set-item-select-popup'}\n              >\n                {重?.奇穴列表.map((奇穴) => {\n                  return (\n                    <Select.Option\n                      value={奇穴?.奇穴名称}\n                      key={奇穴?.奇穴名称}\n                      className={'qixue-simulator-set-item-select-option'}\n                      label={\n                        <div className={'qixue-simulator-label'}>\n                          <img className={'qixue-simulator-label-img'} src={奇穴?.奇穴图片} />\n                          <span className={'qixue-simulator-label-text'}>{奇穴?.奇穴名称}</span>\n                        </div>\n                      }\n                    >\n                      <div className='qixue-simulator-set-item-select-img-wrap'>\n                        <img\n                          className={'qixue-simulator-set-item-select-img'}\n                          src={奇穴?.奇穴图片}\n                        />\n                      </div>\n                      <Tooltip title={奇穴?.奇穴描述 || ''} placement='right'>\n                        <span className={'qixue-simulator-set-item-select-text'}>\n                          {奇穴?.奇穴名称}\n                        </span>\n                      </Tooltip>\n                    </Select.Option>\n                  )\n                })}\n              </Select>\n            </Form.Item>\n          )\n        })}\n      </Form>\n    </Drawer>\n  )\n}\n\nexport default QixueSetModal\n","import { Drawer } from 'antd'\nimport React from 'react'\nimport { 循环基础技能数据类型, 模拟信息类型 } from '../../simulator/type'\nimport AddCycleSkillBtns from '../AddCycleSkillBtns'\n\ninterface AddCycleSkillModalProps {\n  向循环内插入技能: (data: 循环基础技能数据类型[], 插入位置: string, 插入索引: number) => void\n  处理循环结果对象: { 完整循环: 循环基础技能数据类型[] }\n  模拟信息: 模拟信息类型\n  大橙武模拟: boolean\n  奇穴信息: string[]\n  添加设置: { 位置: string; 索引 }\n  添加技能弹窗显示: boolean\n  关闭弹窗: () => void\n}\n\nfunction AddCycleSkillModal(props: AddCycleSkillModalProps) {\n  const {\n    向循环内插入技能,\n    处理循环结果对象,\n    模拟信息,\n    大橙武模拟,\n    添加设置,\n    添加技能弹窗显示,\n    关闭弹窗,\n  } = props\n\n  const 新增循环技能 = (item: 循环基础技能数据类型) => {\n    向循环内插入技能([item], 添加设置?.位置, 添加设置?.索引)\n  }\n\n  const 批量新增循环 = (item: 循环基础技能数据类型[]) => {\n    向循环内插入技能(item, 添加设置?.位置, 添加设置?.索引)\n  }\n\n  return (\n    <Drawer\n      title='插入技能'\n      placement='bottom'\n      open={添加技能弹窗显示}\n      onClose={关闭弹窗}\n      height={180}\n    >\n      <AddCycleSkillBtns\n        新增循环技能={新增循环技能}\n        批量新增循环={批量新增循环}\n        处理循环结果对象={处理循环结果对象}\n        模拟信息={模拟信息}\n        大橙武模拟={大橙武模拟}\n      />\n    </Drawer>\n  )\n}\n\nexport default AddCycleSkillModal\n","// 循环模拟器\nimport React, { useEffect, useMemo, useState } from 'react'\nimport { App, Button, Modal, Tooltip, message } from 'antd'\nimport { ReactSortable } from 'react-sortablejs'\n\nimport { AlertOutlined, CopyOutlined, DeleteOutlined } from '@ant-design/icons'\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport { 每秒郭氏帧 } from '@/数据/常量'\n\nimport 循环模拟技能基础数据 from './constant/skill'\n\nimport { getDpsCycle } from './utils'\nimport {\n  循环日志数据类型,\n  循环基础技能数据类型,\n  ShowCycleSingleSkill,\n  模拟信息类型,\n} from './simulator/type'\n\nimport 模拟循环 from './simulator/index'\n\nimport CycleModalHeader from './components/CycleModalHeader'\nimport StatusBar from './components/StatusBar'\nimport CycleSkillItem from './components/CycleSkillItem'\nimport AddCycleSkillBtns from './components/AddCycleSkillBtns'\nimport SaveCustomCycleModal from './components/SaveCustomCycleModal'\nimport QixueSetModal from './components/QixueSetModal'\nimport { 循环详情 } from '@/@types/循环'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport './index.css'\nimport { 获取加速等级 } from '@/工具函数/data'\nimport { 秒伤计算 } from '@/计算模块/计算函数'\nimport { 当前计算结果类型 } from '@/@types/输出'\nimport { 更新当前自定义循环列表 } from '@/store/data'\nimport AddCycleSkillModal from './components/AddCycleSkillModal'\n\nconst { 缓存映射 } = 获取当前数据()\n\nconst 加速等级枚举 = {\n  0: 0,\n  1: 206,\n  2: 9230,\n  3: 19280,\n  4: 30151,\n  5: 42047,\n}\n\ninterface CycleSimulatorProps {\n  打开循环模拟器?: () => void\n  disabled?: boolean\n}\n\nfunction CycleSimulator(props: CycleSimulatorProps) {\n  const { modal } = App.useApp()\n  const { 打开循环模拟器, disabled } = props\n  const [logData, setLogData] = useState<循环日志数据类型[]>([])\n\n  const [模拟DPS结果, 更新模拟DPS结果] = useState<当前计算结果类型>({\n    秒伤: 0,\n    总伤: 0,\n    秒伤计算时间: 0,\n    计算结果技能列表: [],\n  })\n\n  const [模拟信息, 更新模拟信息] = useState<模拟信息类型>({\n    角色状态信息: {\n      锐意: 0,\n      体态: '双刀',\n    },\n    当前时间: 0,\n    当前自身buff列表: {},\n    当前目标buff列表: {},\n    循环执行结果: '成功',\n    循环异常信息: {},\n    技能基础数据: [...循环模拟技能基础数据],\n    技能释放记录: [],\n    当前各技能运行状态: {},\n    当前GCD组: {},\n  })\n\n  // 基础弹窗\n  const [basicModalOpen, setBasicModalOpen] = useState<boolean>(false)\n  // 循环\n  const [cycle, setCycle] = useState<循环基础技能数据类型[]>([])\n  const [自定义循环保存弹窗, 设置自定义循环保存弹窗] = useState<boolean>(false)\n  // 当前面板加速值\n  const 外部加速值 = useAppSelector((state) => state?.data?.装备信息?.装备基础属性)?.加速等级 || 0\n  const 外部延迟 = useAppSelector((state) => state?.data?.网络延迟) || 0\n  const 大橙武模拟 =\n    !!useAppSelector((state) => state?.data?.装备信息?.装备增益)?.大橙武特效 || false\n  // 当前网络延迟\n  const 网络按键延迟 = 0\n  const [加速等级, 更新加速等级] = useState<number>(0)\n  const [网络延迟, 更新网络延迟] = useState<number>(0)\n  // 自定义循环\n  const 自定义循环列表 = useAppSelector((state) => state?.data?.自定义循环列表)\n\n  const 加速值 = useMemo(() => {\n    return 加速等级枚举[加速等级] || 0\n  }, [加速等级])\n\n  // 是否实时计算\n  const 是否实时计算 = true\n  const [起手驰风, 设置起手驰风] = useState<boolean>(true)\n\n  // 奇穴\n  const reduxQixuedata = useAppSelector((state) => state?.data?.当前奇穴信息)\n  const [奇穴信息, 更新奇穴信息] = useState<string[]>([])\n  const [奇穴弹窗展示, 更新奇穴弹窗展示] = useState<boolean>(false)\n\n  const [buff覆盖数据, 更新buff覆盖数据] = useState<number[]>([])\n  const dispatch = useAppDispatch()\n\n  // 添加循环\n  const [添加技能弹窗显示, 更新添加技能弹窗显示] = useState<boolean>(false)\n  const [添加设置, 更新添加设置] = useState<{ 位置: string; 索引 }>({ 位置: '', 索引: 0 })\n\n  useEffect(() => {\n    if (basicModalOpen) {\n      // 设置外面选择的默认奇穴信息\n      更新奇穴信息(reduxQixuedata)\n      更新加速等级(获取加速等级(外部加速值))\n      更新网络延迟(外部延迟)\n    } else {\n      setLogData([])\n      setBasicModalOpen(false)\n      setCycle([])\n      更新模拟DPS结果({ 秒伤: 0, 总伤: 0, 秒伤计算时间: 0, 计算结果技能列表: [] })\n    }\n  }, [basicModalOpen, reduxQixuedata, 外部加速值])\n\n  useEffect(() => {\n    if (是否实时计算 && basicModalOpen) {\n      simulator({})\n    }\n  }, [basicModalOpen, cycle, 是否实时计算, 起手驰风, 网络按键延迟, 加速值, 网络延迟, 奇穴信息])\n\n  const simulator = (props?) => {\n    const { 传入加速 = 加速值, 传入延迟 = 网络延迟, 更新展示 = true, 奇穴 } = props\n    const res = 模拟循环({\n      测试循环: cycle.map((item) => item?.技能名称) || [],\n      加速值: 传入加速 !== undefined ? 传入加速 : 加速值,\n      网络延迟: 传入延迟 !== undefined ? 传入延迟 : 网络延迟,\n      奇穴: 奇穴 || 奇穴信息,\n      起手驰风,\n      大橙武模拟,\n    })\n\n    const {\n      最终日志,\n      当前自身buff列表: 处理后自身buff,\n      当前目标buff列表: 处理后目标buff,\n      角色状态信息: 处理后角色状态信息,\n      ...rest\n    } = res\n    if (更新展示) {\n      setLogData(最终日志)\n      计算dps(最终日志, rest?.当前时间)\n      更新模拟信息({\n        当前自身buff列表: 处理后自身buff,\n        当前目标buff列表: 处理后目标buff,\n        角色状态信息: 处理后角色状态信息,\n        ...rest,\n      })\n    }\n    return { 最终日志, ...rest }\n  }\n\n  // 计算DPS日志\n  const 计算dps = (data: 循环日志数据类型[], 战斗时间) => {\n    const 获取用于计算的技能组 = getDpsCycle(data, 战斗时间)\n    const { 秒伤, 计算结果技能列表, 秒伤计算时间, 总伤 } = dispatch(\n      秒伤计算({\n        更新循环技能列表: 获取用于计算的技能组,\n        更新计算时间: 战斗时间 / 每秒郭氏帧,\n        更新奇穴数据: 奇穴信息,\n      })\n    )\n    更新模拟DPS结果({\n      秒伤: 战斗时间 > 0 ? 秒伤 : 0,\n      总伤: 战斗时间 > 0 ? 总伤 : 0,\n      秒伤计算时间: 秒伤计算时间,\n      计算结果技能列表: 计算结果技能列表,\n    })\n  }\n\n  // 向循环内新增技能\n  const 新增循环技能 = (item: 循环基础技能数据类型) => {\n    const newCycle = [...(cycle || []), item]\n    setCycle(newCycle)\n  }\n\n  const 向循环内插入技能 = (item: 循环基础技能数据类型[], 插入位置, 插入索引) => {\n    let newCycle: 循环基础技能数据类型[] = [...(cycle || [])]\n    let addCycle: 循环基础技能数据类型[] = []\n\n    if (插入位置 === '前部插入') {\n      // 在索引 2 前插入多个元素\n      addCycle = newCycle.slice(0, 插入索引).concat(item, newCycle.slice(插入索引))\n      更新添加设置({ ...添加设置, 索引: 添加设置.索引 + item.length })\n    } else {\n      // 在索引 2 后插入多个元素\n      addCycle = newCycle\n        .slice(0, 插入索引 + item.length)\n        .concat(item, newCycle.slice(插入索引 + item.length))\n    }\n\n    newCycle = [...addCycle]\n    setCycle(newCycle)\n  }\n\n  const 批量新增循环 = (item: 循环基础技能数据类型[]) => {\n    const newCycle = [...(cycle || []), ...item]\n    setCycle(newCycle)\n  }\n\n  // 从循环内删除技能\n  const 删除循环技能 = (index) => {\n    const newCycle = [...(cycle || [])]\n    newCycle.splice(index, 1)\n    setCycle(newCycle)\n  }\n\n  // 根据循环计算更适合展示的多层数组，用于显示\n  const 处理循环结果对象 = useMemo(() => {\n    const res: ShowCycleSingleSkill[][] = []\n    const 是否存在换行技能 = cycle?.find((item) => item?.技能名称 === '换行')\n\n    cycle.map((item, index) => {\n      const 找到当前技能释放记录 = 模拟信息?.技能释放记录?.[index]\n      const data = {\n        ...item,\n        ...找到当前技能释放记录,\n      }\n      if (index === 0) {\n        res[res?.length] = [{ ...data, index: index || 0 }]\n      } else {\n        res[res?.length - 1] = [...(res[res?.length - 1] || []), { ...data, index: index || 0 }]\n\n        const 换行 = 是否存在换行技能\n          ? data?.技能名称 === '换行'\n          : (奇穴信息?.includes('威声') && data?.技能名称 === '灭') || data?.技能名称 === '断'\n\n        if (换行) {\n          res[res?.length] = []\n        }\n      }\n      return data\n    })\n\n    return { 显示循环: res, 完整循环: cycle }\n  }, [cycle, 模拟信息])\n\n  // 拖拽更新循环\n  const 拖拽更新循环 = (newList, type) => {\n    if (type == '轮次内') {\n      // 首先获取被替换轮次的第一个元素的index索引\n      const minIndex = newList.reduce(function (min, obj) {\n        return Math.min(min, obj.index)\n      }, Infinity)\n      // 获取最大的索引，判断拖拽生效范围\n      const maxIndex = newList.reduce(function (min, obj) {\n        return Math.max(min, obj.index)\n      }, Number.NEGATIVE_INFINITY)\n      // 将数组哪索引范围内跌元素替换为新的数组元素\n      const newCycle = cycle.map((item, index) => {\n        if (index < minIndex || index > maxIndex) {\n          return { ...item }\n        } else {\n          return newList[index - minIndex]\n        }\n      })\n      // 更新循环\n      setCycle(newCycle)\n    } else if (type === '整个轮次拖拽') {\n      const res: 循环基础技能数据类型[] = []\n      newList.forEach((item) => {\n        item.forEach((a) => {\n          if (a.技能名称) {\n            const 当前技能数据 = 模拟信息?.技能基础数据?.find((b) => b?.技能名称 === a.技能名称)\n            if (当前技能数据) {\n              res.push(当前技能数据)\n            }\n          }\n        })\n      })\n      setCycle(res)\n    }\n  }\n\n  // 复制本轮到最后\n  const 复制本轮至最后 = (轮次) => {\n    const newCycle = cycle.concat(轮次)\n    setCycle(newCycle)\n  }\n\n  // 删除本轮后全部循环\n  const 删除本轮后全部循环 = (轮次) => {\n    modal.confirm({\n      title: '确认删除本轮后全部循环吗？',\n      onOk() {\n        // 获取最大的索引，判断生效范围\n        const maxIndex = 轮次.reduce(function (min, obj) {\n          return Math.max(min, obj.index)\n        }, Number.NEGATIVE_INFINITY)\n        // 将数组哪索引范围内跌元素替换为新的数组元素\n        const newCycle = cycle.filter((item, index) => {\n          return index <= maxIndex\n        })\n        // 更新循环\n        setCycle(newCycle)\n      },\n    })\n  }\n\n  // 删除本轮次\n  const 删除本轮次 = (轮次) => {\n    const minIndex = 轮次.reduce(function (min, obj) {\n      return Math.min(min, obj.index)\n    }, Infinity)\n    // 获取最大的索引，判断拖拽生效范围\n    const maxIndex = 轮次.reduce(function (min, obj) {\n      return Math.max(min, obj.index)\n    }, Number.NEGATIVE_INFINITY)\n    // 将数组哪索引范围内跌元素替换为新的数组元素\n    const newCycle = cycle.filter((item, index) => {\n      return index < minIndex || index > maxIndex\n    })\n    // 更新循环\n    setCycle(newCycle)\n  }\n\n  // 确认保存自定义循环\n  const 确认保存循环 = (名称, 加速选项, 延迟选项) => {\n    // 获取各加速下 各网络延迟的循环\n    const 各延迟枚举 = 延迟选项?.length ? 延迟选项 : [0, 1, 2, 3]\n    const 各加速枚举 = 加速选项?.length ? 加速选项 : [0, 1, 2, 3, 4, 5]\n\n    const 保存循环结果: 循环详情[] = []\n\n    const 异常结果: any[] = []\n\n    各加速枚举.forEach((加速) => {\n      const 实际加速值 = 加速等级枚举[加速]\n      各延迟枚举.forEach((延迟) => {\n        // 保存循环数据的时候，把镇机和界破的数据一起保存，生成两套并存的数据，方便后续切换比较\n        const 模拟结果 = simulator({\n          传入加速: Number(实际加速值),\n          传入延迟: Number(延迟),\n          更新展示: false,\n          奇穴: [...奇穴信息],\n        })\n        const 本次日志 = 模拟结果?.最终日志\n        const 循环执行结果 = 模拟结果?.循环执行结果\n        // const 战斗时间 = 本次日志[本次日志.length - 1].日志时间 || 0\n        const 战斗秒 = 模拟结果?.当前时间 / 每秒郭氏帧\n        const 用于计算循环 = getDpsCycle(本次日志, 模拟结果?.当前时间)\n        if (循环执行结果 === '成功') {\n          保存循环结果.push({\n            循环加速等级: 加速,\n            循环延迟要求: 延迟,\n            战斗时间: 战斗秒,\n            技能详情: 用于计算循环,\n          })\n        } else {\n          异常结果.push({\n            加速,\n            延迟,\n          })\n        }\n      })\n    })\n\n    if (异常结果?.length) {\n      message.error(\n        `以下条件循环异常，将不会保存该加速的循环。异常循环：${异常结果\n          .map((item) => {\n            return `[加速：${item.加速}，延迟：${item.延迟}]`\n          })\n          .join('、')}`\n      )\n    }\n\n    const 技能序列 = cycle.map((item) => item.技能名称)\n\n    const 新自定义循环 = 自定义循环列表?.some((item) => item?.名称 === 名称)\n      ? 自定义循环列表.map((item) => {\n          return item.名称 === 名称\n            ? {\n                名称,\n                标题: 名称,\n                类型: '自定义',\n                标记: '自定义',\n                循环详情: 保存循环结果,\n                奇穴: 奇穴信息,\n                技能序列,\n              }\n            : item\n        })\n      : (自定义循环列表 || []).concat([\n          {\n            名称,\n            标题: 名称,\n            类型: '自定义',\n            标记: '自定义',\n            循环详情: 保存循环结果,\n            奇穴: 奇穴信息,\n            技能序列,\n          },\n        ])\n\n    dispatch(更新当前自定义循环列表(新自定义循环))\n\n    设置自定义循环保存弹窗(false)\n    message.success('保存成功')\n  }\n\n  useEffect(() => {\n    // redux变动，更新storage信息\n    const 保存信息 = {}\n    ;(自定义循环列表 || []).forEach((item) => {\n      保存信息[item.名称] = {\n        ...item,\n      }\n    })\n    localStorage?.setItem(缓存映射.自定义循环, JSON.stringify(保存信息))\n  }, [自定义循环列表, 奇穴信息])\n\n  const 点击下拉菜单 = (data, index) => {\n    更新添加设置({ 位置: data?.key, 索引: index })\n    更新添加技能弹窗显示(true)\n  }\n\n  return (\n    <>\n      <Button\n        danger\n        disabled={disabled}\n        size='small'\n        onClick={() => {\n          setBasicModalOpen(true)\n          打开循环模拟器 && 打开循环模拟器()\n        }}\n      >\n        循环模拟\n      </Button>\n      <Modal\n        className='cycle-simulator-modal'\n        maskClosable={false}\n        width={'100%'}\n        title={\n          <CycleModalHeader\n            cycle={cycle}\n            设置自定义循环保存弹窗={设置自定义循环保存弹窗}\n            清空循环={() => setCycle([])}\n            起手驰风={起手驰风}\n            设置起手驰风={设置起手驰风}\n            快速导入循环={(循环) => setCycle(循环)}\n            更新奇穴信息={更新奇穴信息}\n            更新奇穴弹窗展示={更新奇穴弹窗展示}\n            加速等级={加速等级}\n            更新加速等级={更新加速等级}\n            网络延迟={网络延迟}\n            更新网络延迟={更新网络延迟}\n            模拟信息={模拟信息}\n          />\n        }\n        centered\n        footer={null}\n        open={basicModalOpen}\n        onCancel={() => setBasicModalOpen(false)}\n        destroyOnClose\n      >\n        <div className={'cycle-simulator-setting'}>\n          {/* 角色状态栏 */}\n          <StatusBar\n            模拟信息={模拟信息}\n            完整循环={处理循环结果对象?.完整循环 as any}\n            日志信息={logData}\n            模拟DPS结果={模拟DPS结果}\n          />\n          {/* // 循环展示模块 */}\n          <div className={'cycle-simulator-setting-res'}>\n            {处理循环结果对象?.显示循环?.length ? (\n              (处理循环结果对象?.显示循环 || []).map((轮次, index) => {\n                return 轮次?.length ? (\n                  <div className={`cycle-simulator-setting-turn cycle-turn-drag`} key={`${index}`}>\n                    <ReactSortable\n                      list={轮次.map((i) =>\n                        Object.assign(i, { id: `${i?.技能名称}_${index}_${i?.index}` })\n                      )}\n                      setList={(e) => {\n                        拖拽更新循环(e, '轮次内')\n                      }}\n                      className='cycle-simulator-setting-turn-drop'\n                      animation={150}\n                      draggable={'.cycle-simulator-setting-skill-drag'}\n                    >\n                      {(轮次 || []).map((item) => {\n                        return (\n                          <CycleSkillItem\n                            技能={item}\n                            删除循环技能={删除循环技能}\n                            key={`${item?.技能名称}_${index}_${item?.index}`}\n                            模拟信息={模拟信息}\n                            buff覆盖数据={buff覆盖数据}\n                            更新buff覆盖数据={更新buff覆盖数据}\n                            点击下拉菜单={(e) => 点击下拉菜单(e, item?.index)}\n                          />\n                        )\n                      })}\n                      <div className={'cycle-turn-operate'}>\n                        <Tooltip title='删除本轮后全部循环'>\n                          <AlertOutlined\n                            className={'cycle-turn-operate-btn'}\n                            style={{ color: '#FF0000' }}\n                            onClick={() => 删除本轮后全部循环(轮次)}\n                          />\n                        </Tooltip>\n                        <Tooltip title='复制并添加到最后'>\n                          <CopyOutlined\n                            className={'cycle-turn-operate-btn'}\n                            onClick={() => 复制本轮至最后(轮次)}\n                          />\n                        </Tooltip>\n                        <Tooltip title='删除此轮'>\n                          <DeleteOutlined\n                            className={'cycle-turn-operate-btn'}\n                            onClick={() => 删除本轮次(轮次)}\n                          />\n                        </Tooltip>\n                      </div>\n                    </ReactSortable>\n                  </div>\n                ) : (\n                  <div />\n                )\n              })\n            ) : (\n              <p className={'cycle-simulator-setting-tip'}>请点击下方技能按钮生成模拟技能序列</p>\n            )}\n          </div>\n        </div>\n        {/* 添加循环按钮组 */}\n        <AddCycleSkillBtns\n          新增循环技能={新增循环技能}\n          批量新增循环={批量新增循环}\n          处理循环结果对象={处理循环结果对象}\n          模拟信息={模拟信息}\n          大橙武模拟={大橙武模拟}\n        />\n        {/* 保存自定义循环弹窗 */}\n        <SaveCustomCycleModal\n          自定义循环保存弹窗={自定义循环保存弹窗}\n          设置自定义循环保存弹窗={设置自定义循环保存弹窗}\n          保存自定义循环={确认保存循环}\n        />\n        {/* 循环自定义奇穴弹窗 */}\n        <QixueSetModal\n          奇穴信息={奇穴信息}\n          更新奇穴信息={更新奇穴信息}\n          奇穴弹窗展示={奇穴弹窗展示}\n          更新奇穴弹窗展示={更新奇穴弹窗展示}\n        />\n        {/* 添加技能弹窗 */}\n        <AddCycleSkillModal\n          向循环内插入技能={向循环内插入技能}\n          处理循环结果对象={处理循环结果对象}\n          模拟信息={模拟信息}\n          大橙武模拟={大橙武模拟}\n          奇穴信息={奇穴信息}\n          添加设置={添加设置}\n          添加技能弹窗显示={添加技能弹窗显示}\n          关闭弹窗={() => {\n            更新添加技能弹窗显示(false)\n            更新添加设置({ 位置: '', 索引: 0 })\n          }}\n        />\n      </Modal>\n    </>\n  )\n}\n\nexport default React.memo(CycleSimulator)\n","import { 循环技能详情, 技能增益列表数据 } from '@/@types/循环'\nimport { 每秒郭氏帧 } from '@/数据/常量'\nimport { 循环日志数据类型 } from './simulator/type'\n\nexport const getDpsCycle = (data: 循环日志数据类型[]): 循环技能详情[] => {\n  const res: { [key: string]: 循环技能详情 } = {}\n  for (let i = 0; i < data.length; i++) {\n    const 当前数据 = data[i]\n    const 本次造成伤害次数 = 当前数据?.其他数据?.伤害次数 || 1\n    if (当前数据?.日志类型 === '造成伤害') {\n      const 当前日志对应技能枚举 = 获取当前日志对应技能枚举(当前数据?.日志)\n      let 增益列表 = res[当前日志对应技能枚举]?.技能增益列表 || []\n      if (!增益列表?.length) {\n        if (当前数据?.buff列表?.length) {\n          增益列表 = 增益列表.concat([\n            {\n              增益名称: 当前数据?.buff列表?.join(','),\n              增益技能数: 本次造成伤害次数,\n            },\n          ])\n        }\n      } else {\n        if (当前数据?.buff列表?.length) {\n          let 不存在相同增益 = true\n          增益列表 = 增益列表.map((item) => {\n            const 技能增益列表 = item?.增益名称?.split(',') || []\n            if (\n              技能增益列表?.length === 当前数据?.buff列表?.length &&\n              !技能增益列表?.some((a) => !当前数据?.buff列表?.includes(a))\n            ) {\n              不存在相同增益 = false\n              return {\n                增益名称: item.增益名称,\n                增益技能数: item.增益技能数 + 本次造成伤害次数,\n              }\n            } else {\n              return {\n                ...item,\n              }\n            }\n          })\n          if (不存在相同增益) {\n            增益列表 = 增益列表.concat({\n              增益名称: 当前数据?.buff列表?.join(','),\n              增益技能数: 本次造成伤害次数,\n            })\n          }\n        }\n      }\n\n      res[当前日志对应技能枚举] = {\n        ...res[当前日志对应技能枚举],\n        技能名称: 当前日志对应技能枚举,\n        技能数量: (res[当前日志对应技能枚举]?.技能数量 || 0) + 本次造成伤害次数,\n        技能增益列表: [...增益列表],\n      }\n    }\n  }\n\n  const 结果循环 = Object.keys(res).map((item) => {\n    const v = res[item]\n    return {\n      ...v,\n      技能数量: Math.round(v.技能数量),\n      技能增益列表: v.技能增益列表?.map((d) => {\n        return {\n          ...d,\n          增益技能数: Math.round(d.增益技能数),\n        }\n      }),\n    }\n  })\n\n  return 结果循环\n}\n\nexport const getSingleSkillDpsCycle = (当前数据: 循环日志数据类型): 循环技能详情 => {\n  const 当前日志对应技能枚举 = 获取当前日志对应技能枚举(当前数据?.日志)\n  const 伤害次数 = 当前数据?.其他数据?.伤害次数 || 1\n  let 增益列表: 技能增益列表数据[] = []\n  if (!增益列表?.length) {\n    if (当前数据?.buff列表) {\n      增益列表 = 增益列表.concat({\n        增益名称: 当前数据?.buff列表?.join(','),\n        增益技能数: 伤害次数,\n      })\n    }\n  } else {\n    if (当前数据?.buff列表?.length) {\n      let 不存在相同增益 = true\n      增益列表 = 增益列表.map((item) => {\n        const 技能增益列表 = item?.增益名称?.split(',') || []\n        if (\n          技能增益列表?.length === 当前数据?.buff列表?.length &&\n          !技能增益列表?.some((a) => !当前数据?.buff列表?.includes(a))\n        ) {\n          不存在相同增益 = false\n          return {\n            增益名称: item.增益名称,\n            增益技能数: item.增益技能数 + 伤害次数,\n          }\n        } else {\n          return {\n            ...item,\n          }\n        }\n      })\n      if (不存在相同增益) {\n        增益列表 = 增益列表.concat({\n          增益名称: 当前数据?.buff列表?.join(','),\n          增益技能数: 伤害次数,\n        })\n      }\n    }\n  }\n\n  return {\n    技能名称: 当前日志对应技能枚举,\n    技能数量: 伤害次数,\n    技能增益列表: [...增益列表],\n  }\n}\n\nexport const 判断上一个同名技能 = (当前技能, 循环) => {\n  // 上一个同名技能\n  const 循环副本 = [...循环]\n  循环副本.reverse()\n  let 剩余CD = 0\n\n  const 上一个同名技能 = 循环副本?.find((item) => {\n    if (item?.实际技能) {\n      // 用下一个技能可以释放时间判断不是当前技能\n      return item?.实际技能 === 当前技能?.实际技能 && item?.下一个技能可以释放时间\n    } else {\n      const 正常技能判定 = item?.技能名称 === 当前技能?.技能名称 && item?.下一个技能可以释放时间\n      // 用下一个技能可以释放时间判断不是当前技能\n      return 正常技能判定\n    }\n  })\n\n  if (上一个同名技能) {\n    const 实际CD = 当前技能?.技能CD\n    const 上一个同名技能释放时间 = (上一个同名技能?.本技能实际释放时间 || 0) + (实际CD || 0)\n    const 下一个技能可以释放时间 = 循环[循环.length - 1]?.下一个技能可以释放时间\n\n    剩余CD =\n      上一个同名技能释放时间 - 下一个技能可以释放时间 > 0\n        ? 上一个同名技能释放时间 - 下一个技能可以释放时间\n        : 0\n  }\n\n  return { 上一个同名技能, 剩余CD }\n}\n\nexport const 获取总用时 = (时间) => {\n  const 用时秒 = Math.round((时间 / 每秒郭氏帧) * 100) / 100\n  return 用时秒\n}\n\nexport const 获取显示秒伤 = (最后一条伤害数据) => {\n  return Math.round((最后一条伤害数据?.造成总伤害 || 0) / (最后一条伤害数据?.日志时间 / 每秒郭氏帧))\n}\n\n// 没表明枚举就直接取原值\nexport const Skill_Cycle_Map = {}\n\nconst 获取当前日志对应技能枚举 = (日志) => {\n  return Skill_Cycle_Map[日志] || 日志\n}\n\nexport const 根据加速等级获取虚拟加速值 = (加速等级) => {\n  const 加速等级枚举 = {\n    0: 0,\n    1: 206,\n    2: 9230,\n    3: 19280,\n    4: 30151,\n    5: 42047,\n  }\n  return 加速等级枚举[加速等级]\n}\n\nexport const 判断有无橙武循环数据 = (循环, 大橙武启用) => {\n  if (!大橙武启用) {\n    return 循环.filter((item) => {\n      return !item?.技能序列?.includes('触发橙武')\n    })\n  } else {\n    return 循环\n  }\n}\n"],"names":["基础GCD帧","技能名称","技能释放后添加GCD","回复锐意","造成伤害次数","技能CD","技能GCD组","技能类型","图标","技能原始名称","每秒郭氏帧","shenxing","最大充能层数","显示类型","cw","说明","日志类型数组","原始Buff数据","识破","名称","最大层数","最大持续时间","雨积","戗风","潋风","灭影追风","破绽","自然消失失去层数","长溯","行链","沧链","连亘","身形","流岚","橙武","橙武孤锋","威声","流血","最大作用次数","伤害频率","截辕","getDpsCycle","data","战斗时间","res","i","当前数据","本次造成伤害次数","其他数据","伤害次数","本次技能等级","技能等级","日志类型","当前日志对应技能枚举","Skill_Cycle_Map","日志","key","增益列表","技能增益列表","length","buff列表","不存在相同增益","map","item","增益名称","split","some","a","includes","增益技能数","concat","join","技能数量","结果循环","Object","keys","v","Math","round","d","触石雨CD","触石雨数量","push","ERROR_ACTION","锐意不足","信息","身形不足","体态错误","BUFF错误","技能统一类","模拟循环","本次释放记录","this","锐意值","来源","增加锐意","当前锐意","角色状态信息","锐意","减少锐意","伤害名称","额外增益列表","触发伤害时间","undefined","DOT伤害","技能造成伤害","校验奇穴是否存在","增益层数","当前目标buff列表","当前层数","触发伤害行为","当前自身buff列表","添加buff","对象","新增层数","触发回复锐意","卸除buff","卸除层数","技能依赖自身buff列表","技能依赖目标buff列表","重要buff列表","forEach","buff","buff名称","当前时间","buff对象","Buff和Dot数据","buff开始时间","buff结束时间","有CD技能通用类","技能运行数据","技能","新数据","决云势","技能数据","识破附加锐意","初始化技能运行数据","判断有无识破","技能释放后更新运行数据","层数","计划下次充能时间点","减少11秒后充能节点","max","添加战斗日志","减少后充能节点","触发潋风携刃","触发避实击虚","流云势法触发连亘","保存释放记录","获取当前重要buff列表","循环模拟技能基础数据","行云势","行链层数","行云势造成伤害","判断行链触发伤害","段数","伤害段数","实际伤害技能","停云势","留客雨","GCD组","单刀","减少后GCD","减少单刀GCD","技能类实例集合","决","击懈触发减少决云势调息时间","断云势","目标身上破绽层数","可以释放","异常信息","触发清空锐意","触发断云势伤害","切换角色体态","横云断浪","技能基础数据","find","横云断浪上流血","获得和刷新流血","破浪三式触发鸣锋","沧浪三叠","单刀GCD","双刀GCD","双刀","沧链层数","沧浪造成伤害","当前破绽层数","日志时间","新破绽对象","判断沧链触发伤害","孤锋破浪","是否为最后一个技能","生效时间","获得和刷新截辕","触发孤锋破浪伤害","长溯层数","索引","后一个技能","测试循环","GCD","当前技能","技能实例","检查GCD","造成buff数据","获取施加重要buff信息","游风飘踪","是否为充满后第一次释放","获取帧数","秒","原充能时间","原充能时间返还7秒","释放后层数","当前时间开始计算充能时间点","更新技能运行数据","计算充能时间","吃影子","当前流岚信息","原始buff对象","新流岚对象","刷新时间","min","buff刷新时间","溃延触发减少决云势调息时间","吃影子获得流岚","触发橙武","橙武触发重置调息","换行","点掉橙武","大橙武模拟","通用DOT类","DOT运行数据","待生效数据","DOT名称","结算数组","未结算数组","数据","更新DOT运行数据","DOT数据","DOT是否吃加速","是否吃加速","循环加速值","根据加速等级获取虚拟加速值","加速等级","实际初次频率","获取实际帧数","初次频率","实际伤害频率","当前是否有灭影追风Buff","快照buff列表","待添加次数","原最后一次生效时间","当前流血层数","流血最大层数","新流血层数","获取当前DOT数据","更新待生效数据","结算并更新运行数据","流血伤害名称枚举","当前截辕层数","技能系数","获取当前数据","循环主类","props","循环执行结果","循环异常信息","异常索引","奇穴","网络延迟","体态","开始释放上一个技能的时间","战斗日志","技能释放记录","云刀上次造成伤害时间","获取加速等级","加速值","判断奇穴","val","obj","根据奇穴修改buff数据","根据奇穴修改技能数据","初始化技能实例类","起手驰风","重置循环执行结果","行","停","留","断","横","沧","孤","灭","游","事件时间","新buff对象","待判断奇穴","time","跳过全部GCD时间","新GCD组","校验GCD组","实例","新层数","新充能时间点","充能","等待CD时间","可以释放时间","增加CD","实际增加CD","log","rest","造成时间","对应技能","获取技能信息","有关的buff列表","filter","当前增益数据","增益消失时间","总增益列表","更新后锐意","切换目标","触发时间","破绽层数","破绽避实击虚枚举","避实击虚层数","技能释放前检查GCD统一方法","等待CD","技能释放前检查运行数据","延迟等待","技能计划释放时间","技能预估释放时间","时间差","增加时间","待更新GCD组","增加技能GCD","增加技能CD","计划释放时间","开始释放时间","技能释放记录结果","获取技能释放记录结果","实际释放时间","buff应该消失时间","消失层数","清空buff调用函数","结算流血伤害","结算截辕伤害","本次应该造成云刀伤害序列","DOT结算与更新","普通攻击结算","清空已经消失的buff","对所有有CD技能检查和充能","体态校验结果","单双刀体态校验","释放判断结果","释放","校验结果","本轮模拟开始前","释放前初始化","技能释放前","读条时间","读条","技能GCD和CD处理","释放校验结果","技能释放校验","技能释放异常","技能成功开始释放","命中","造成伤害","释放后","技能释放后","本轮模拟结束后","新日志","sort","b","各技能当前运行状态","模拟实例","模拟","日志排序","当前各技能运行状态","获取当前各技能的运行状态","最终日志","当前GCD组","标题","类型","标记","技能序列","cycle","设置自定义循环保存弹窗","清空循环","设置起手驰风","快速导入循环","更新奇穴弹窗展示","更新奇穴信息","更新加速等级","模拟信息","更新网络延迟","自定义循环","useAppSelector","state","自定义循环列表","快捷添加循环","数据源","快速导入默认循环","当前循环数据","技能序列信息","className","content","href","target","rel","checked","onChange","e","size","value","options","Array","from","label","延迟设定","overlay","onClick","index","title","danger","type","disabled","src","alt","percent","format","当前时间点","当前buff列表","wrap","剩余时间","剩余时间秒","toFixed","open","onCancel","logData","columns","dataIndex","filters","text","onFilter","record","indexOf","render","_","row","width","centered","footer","dataSource","pagination","pageSize","showTotal","total","dpsList","总伤","计算结果技能列表","visible","onClose","过滤的buff列表","总战斗用时","useState","chartData","setChartData","limitRef","useRef","覆盖率","设置覆盖率","useEffect","setTimeout","initChart","current","chart","Chart","container","autoFit","renderer","padding","tooltip","crosshairs","getDataSource","source","tickCount","axis","style","textAlign","fontSize","coordinate","transpose","interval","position","color","offset","Buff枚举","logName","buffName","currentTime","总持续时间","获取Buff覆盖率","range","格式化buff覆盖数组","id","日志信息","模拟DPS结果","buffCountModalOpen","setBuffCountModalOpen","logModalOpen","setLogModalOpen","countModal","setCountModal","showIcon","message","秒伤","秒伤计算时间","placement","PieChartOutlined","CalendarOutlined","AlignLeftOutlined","删除循环技能","buff覆盖数据","更新buff覆盖数据","点击下拉菜单","技能释放时间","间隔CD","剩余秒","是否异常","当前异常","技能释放结果","当前是否需要高亮展示在buff覆盖中","useMemo","cls","classNames","下拉菜单","count","menu","items","trigger","onMouseEnter","onMouseLeave","CloseCircleFilled","释放等待CD","计算可以释放时技能CD","技能运行状态","禁用信息","是否禁用","异常描述","角标数字","快捷添加数据","新增循环技能","批量新增循环","处理循环结果对象","创建循环不可选","完整循环","gutter","span","技能原始数据","批量新增循环技能","计算循环","modal","App","自定义循环保存弹窗","保存自定义循环","自定义循环类型","设置自定义循环类型","自定义循环名称输入","设置自定义循环名称输入","覆盖循环名","设置覆盖循环名","加速选项","设置加速选项","延迟选项","设置延迟选项","dispatch","useAppDispatch","全部循环","删除循环","更新当前自定义循环列表","okButtonProps","onOk","destroyOnClose","activeKey","tab","optionLabelProp","placeholder","stopPropagation","preventDefault","confirm","okText","删除循环前提示","rules","validator","callback","奇穴数据","当前奇穴信息","奇穴信息","奇穴弹窗展示","Form","form","handleChangeQixue","validateFields","then","values","newArray","setFieldsValue","height","mask","重","name","dropdownMatchSelectWidth","showArrow","popupClassName","奇穴列表","奇穴名称","奇穴图片","奇穴描述","向循环内插入技能","添加设置","添加技能弹窗显示","关闭弹窗","位置","缓存映射","加速等级枚举","CycleSimulator","打开循环模拟器","setLogData","更新模拟DPS结果","更新模拟信息","basicModalOpen","setBasicModalOpen","setCycle","外部加速值","装备信息","装备基础属性","外部延迟","装备增益","大橙武特效","reduxQixuedata","更新添加技能弹窗显示","更新添加设置","simulator","传入加速","传入延迟","更新展示","处理后自身buff","处理后目标buff","处理后角色状态信息","计算dps","获取用于计算的技能组","秒伤计算","更新循环技能列表","更新计算时间","更新奇穴数据","newCycle","splice","是否存在换行技能","找到当前技能释放记录","显示循环","保存信息","localStorage","setItem","JSON","stringify","maskClosable","循环","轮次","ReactSortable","list","assign","setList","newList","minIndex","reduce","Infinity","maxIndex","Number","NEGATIVE_INFINITY","当前技能数据","拖拽更新循环","animation","draggable","AlertOutlined","删除本轮后全部循环","CopyOutlined","复制本轮至最后","DeleteOutlined","删除本轮次","各延迟枚举","各加速枚举","保存循环结果","异常结果","加速","实际加速值","延迟","模拟结果","本次日志","战斗秒","用于计算循环","循环加速等级","循环延迟要求","技能详情","新自定义循环","循环详情","插入位置","插入索引","addCycle","slice","React","获取当前日志对应技能枚举","判断有无橙武循环数据","大橙武启用"],"sourceRoot":""}